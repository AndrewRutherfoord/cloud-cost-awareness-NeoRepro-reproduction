:begin
CREATE CONSTRAINT constraint_7ae8bc51 FOR (node:Developer) REQUIRE (node.email) IS UNIQUE;
CREATE CONSTRAINT constraint_8c6f85bb FOR (node:Commit) REQUIRE (node.hash) IS UNIQUE;
CREATE CONSTRAINT constraint_b9f058bd FOR (node:Repository) REQUIRE (node.name) IS UNIQUE;
CREATE CONSTRAINT UNIQUE_IMPORT_NAME FOR (node:`UNIQUE IMPORT LABEL`) REQUIRE (node.`UNIQUE IMPORT ID`) IS UNIQUE;
:commit
CALL db.awaitIndexes(300);
:begin
UNWIND [{_id:1, properties:{name:"master", repository:"bespin", hash:"08dc6e323387cf6e2839fc368940bdc48b285022eb80226a0adeaaaf"}}, {_id:8, properties:{name:"master", repository:"mp-infrastructure", hash:"98d4af29e3bd3954ab2239fb6cea74c29467240f5fe4bd05b9d9627e"}}, {_id:18, properties:{name:"master", repository:"terraform-aws-modules", hash:"a64589d6d5994e5f52d3c25731f4b0d3df6dfb80653ff4c1dc528295"}}, {_id:23, properties:{name:"master", repository:"prometheus-aws-configuration-beta", hash:"227dc0b5b48f0761e982b9df56a593ade0ea7825bdfa683b7b0c41c8"}}, {_id:32, properties:{name:"master", repository:"terraform-for-beginners", hash:"831ddc4d889f051917f33e97586ad579f6b51998ade540b839e8a2d3"}}, {_id:44, properties:{name:"master", repository:"parkrunpointsleague", hash:"72df40dad042886a24b1df9efb30766f3e247cd95a8621d8b04547e9"}}, {_id:52, properties:{name:"main", repository:"Azure-Terraform-Budget", hash:"ee428e00825690c74db96d4cbdf6029894afab26c0f874536aa2ed1f"}}, {_id:61, properties:{name:"master", repository:"terraform-google-vault", hash:"caa70e2f2a1db8bf96910194816d0a34216f81e537bad63974fb3a74"}}, {_id:72, properties:{name:"develop", repository:"vof-deployment-scripts", hash:"e2ab73fe869eac0842b3478470cc212328481d14b85fe65e4b06eedf"}}, {_id:80, properties:{name:"master", repository:"terraform-logs-module", hash:"29f27ce76d8c9ab4059e02f0aea15b63ab83a92d8a89cd813d5774e9"}}, {_id:86, properties:{name:"main", repository:"terraform-eks", hash:"3bad8c5ccdf3ac17cd45dbc149dfb9edd17adf7d792707e5abf4d379"}}, {_id:92, properties:{name:"main", repository:"terraform-gcp-audit-log", hash:"7f8c70bcde8dfbf97ca6dd01e222c812a71ba265b68b383e0524c183"}}, {_id:103, properties:{name:"master", repository:"jt-aws-serverless-app", hash:"f98aa629819fa5cd1e7aea555f138d9e56829cd30ec5f85d0ecf213c"}}, {_id:127, properties:{name:"main", repository:"TerraformTutorial", hash:"de068e4dd78adbf929911b800be9beb177830943c238425d01c2ce41"}}, {_id:132, properties:{name:"master", repository:"terraform-ec2-gitlab-runner", hash:"3b02d90396277d8bedde8ff0107b41f5e3f5325973f95ad5fd3438f0"}}, {_id:138, properties:{name:"master", repository:"terraform-aws-mcaf-matillion", hash:"eca0ad91fe22d7fb557c44f5f35981b81fe386405dddf4cf515f7d2e"}}, {_id:144, properties:{name:"master", repository:"terralab", hash:"09d22ebc0de207345c7c63a8392c2d597f76e902f44fbfe7c69c429a"}}, {_id:150, properties:{name:"master", repository:"terraform-azure-kubernetes", hash:"e0f23fdee2fd5512aa245f02861f9d01a0223a4a79f6ecf89178757c"}}, {_id:173, properties:{name:"v20170617", repository:"fogg-env", hash:"1eaa89bc6416cfc83adea8e9187f4ecc6eb6947a08fd8604e38c8f89"}}, {_id:178, properties:{name:"main", repository:"academeez-iac", hash:"57f33e619f07d11cf4a3f82f31cd761513fb6ff2c0ed48c772401145"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:185, properties:{name:"main", repository:"clouduru-infra", hash:"fbcc156ca3378e7ec95d441703da2652c43646c4f2cd5347c4a01d1d"}}, {_id:193, properties:{name:"master", repository:"tdr-grafana", hash:"d3a5450b3e2788590eee29e0bd400d82088514f12f0251f46f0dfc06"}}, {_id:207, properties:{name:"master", repository:"dcp-monitoring", hash:"5d7510d6703d5e8793d8263f41ec252a2df1cd001682354c1ce6df92"}}, {_id:219, properties:{name:"main", repository:"parking-status", hash:"4adaa7522ea0f9aca706ddee064b472d002d2829ad93e93f0f844a22"}}, {_id:236, properties:{name:"master", repository:"seed-node-fallback-domain-config", hash:"99351c0d5c7a618bf8f5371237484ae0a4b9ed53245c9ca324805384"}}, {_id:242, properties:{name:"main", repository:"grok-airflow", hash:"a1ac79a8dd047d5742394e4ab9e8e614c025a0d4ceff5994af84fe49"}}, {_id:247, properties:{name:"develop", repository:"cool-sharedservices-nessus", hash:"b0b2bddf1e58af43f37a6bffc26cf376aca554cbca594519cda716b8"}}, {_id:252, properties:{name:"master", repository:"terraform-module-azure-datalake", hash:"14c3db16b9bfdfe8dcf80defd8ad6fb1339e60a8470c76355fb5b5e8"}}, {_id:261, properties:{name:"master", repository:"waapdemo", hash:"b7e43289ea534b82809ffa654d99c0c1dcce9c6faa188352524f2a40"}}, {_id:266, properties:{name:"master", repository:"aws-crawler", hash:"9d99b17cf578efa7d7aa8feec9c9a5d624f54fd28505437c183f1bd3"}}, {_id:277, properties:{name:"master", repository:"iks_vpc_lab", hash:"3fffaa15d078b10454bfad8bf64cc9106e393378fb992895b8e29fee"}}, {_id:282, properties:{name:"master", repository:"micro-service-as-code", hash:"23de5958b2c1da77720af5c9835160aeb36460e0f2d5b79527dc174d"}}, {_id:291, properties:{name:"main", repository:"cloud-platform-terraform-monitoring", hash:"e7b87e564ade90fea663f607b80abe8d5687994db75476f9be59af57"}}, {_id:348, properties:{name:"main", repository:"terraform-azurerm-vmseries-modules", hash:"720a7596b2800e03f4eb85724696eab87dd3e99001763f59ae3a2725"}}, {_id:363, properties:{name:"master", repository:"s3-bucket-versioning", hash:"8f4e460a8d558e694c3fabfef381f8fc4541529c60f5b6c7a8cdea25"}}, {_id:379, properties:{name:"master", repository:"idkfa", hash:"241b6e1cf1238fedea83a58ff34fcfd3504af88625f67dc37b95b9ba"}}, {_id:386, properties:{name:"master", repository:"GCP-IOT-BigDataInfra", hash:"26215f0fcc9b7540245facb6cb28b526b883aefe2cc804c84c0106cd"}}, {_id:391, properties:{name:"master", repository:"gcp-project", hash:"c851aa51d45c8add072d8ead4e789c87cff688f03526eb64ead8223e"}}, {_id:435, properties:{name:"master", repository:"rjmco-github-tests", hash:"4cf973cf89d5e6a5383169e9c26b42148f61d0e819711cb57866c660"}}, {_id:460, properties:{name:"main", repository:"terraform-oci-cis-landing-zone", hash:"8a819cc590d21907f18eea9e81331eb3ac928015fda1f8372140e2d0"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:475, properties:{name:"master", repository:"ops", hash:"c60fbceb4355ed60894b0aab6db96068f02955424a06e8245183e7b8"}}, {_id:482, properties:{name:"develop", repository:"vulnerable-instances", hash:"cef42876f08d0bd4f0246c0025219a648f10712188dd737d76555b97"}}, {_id:486, properties:{name:"main", repository:"cloud-admin", hash:"15bb2014e7fd5335c4f7212c1edc15a8d1e739911778f164713fda2c"}}, {_id:495, properties:{name:"main", repository:"terraform-aws-eks", hash:"904fd97969be38fd904af4c60b159e5df57ac529d9dc86b9919cc48b"}}, {_id:502, properties:{name:"main", repository:"aws-enterprise-vpc", hash:"170c2674ce3c3710cf0ba1bbb06005f4d7370d977b3f02b04eda8952"}}, {_id:508, properties:{name:"main", repository:"azure", hash:"0ede169c4f88aedabb204d82d2b742b7e87aa715da585b7ef3468199"}}, {_id:513, properties:{name:"main", repository:"digitalocean-build-machine", hash:"9e4ccaa014490022e290c21c097fb5a684a7e398af9c4e542f44279d"}}, {_id:518, properties:{name:"master", repository:"gifbot", hash:"5093e57f543dcb78252fd143ece0bb03a73f5691336b03acee4582f1"}}, {_id:523, properties:{name:"master", repository:"lighthouse-lambda-parallel", hash:"c9ad3edf4df9ce3f7157d3919bae51b87c5da0f8b25007b578679807"}}, {_id:537, properties:{name:"main", repository:"tform_azure", hash:"f1917b9ddbb7a07c8f2f95d6f0a3d9aa0c6e523d3b8280d5316d88b4"}}, {_id:543, properties:{name:"master", repository:"infrastructure", hash:"bf178621d632e70f77d786c58e92be90abde2b4d4a82dfac87a73783"}}, {_id:549, properties:{name:"terraform", repository:"aws-otel-test-framework", hash:"2f869e9e1e5f8f397d3746d90a3f7f0bf3ad549ff66b03f85308a11a"}}, {_id:555, properties:{name:"main", repository:"ttrpg-tools", hash:"3b8d239ebb0dfa2afbf949893f574a199e166afda220117ee17c6ef6"}}, {_id:562, properties:{name:"master", repository:"titan", hash:"6c4ad1be7e9d055bb9b1389f55c3c656309c3c68cac7688811b30843"}}, {_id:576, properties:{name:"master", repository:"terraform-covidapihub", hash:"dbc26ea690130974b9034f0769128e4fb490c4d3aa27838357074a2e"}}, {_id:581, properties:{name:"master", repository:"cnp-module-api-mgmt", hash:"d5b70499b33f14990de5b713a6c95873b59435cb934aa5b0e427aba4"}}, {_id:585, properties:{name:"master", repository:"hknews-infrastructure", hash:"5ebdd7a56ca34b1d0c033f1a5b6a07233c23cd567a0b80bd4dae7396"}}, {_id:592, properties:{name:"master", repository:"terraform-aws-ecs-datadog-agent", hash:"364c27eded13bc1907712d0a7a2b911453b26f88f2b192333937d7b0"}}, {_id:597, properties:{name:"main", repository:"didactic-octo-eureka", hash:"695f8991c1b6a2f44b63f8a9e38683f2832d0bbf906baadd483e837c"}}, {_id:603, properties:{name:"master", repository:"terraform-aws-workspaces", hash:"cffbfdb47b98b2ae5fffa8d27c113cf0f3e368591bee6192cc80b7bb"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:619, properties:{name:"master", repository:"github-actions", hash:"24b2095ef5de68663be6968f9fd9e455baf41e6ca5297d9ea4dfada4"}}, {_id:624, properties:{name:"master", repository:"terraform-demo-cost-estimation-azure", hash:"a2ac0dfd1a31a480db9503d1ed444015cb182876646166eba80fc4d5"}}, {_id:630, properties:{name:"master", repository:"azureLearning", hash:"1e1ff53e490e57c9204d2f99679aff00f6629f5f8e9cfd802c013917"}}, {_id:641, properties:{name:"master", repository:"terragrunt-aws-modules", hash:"75ee6ebcf56b3f0f11246d40404413ec220f7cd5194cf3ed9cde93b0"}}, {_id:649, properties:{name:"main", repository:"terraform-aws-rds", hash:"e63c1d3a7443b65fe099167377dc85448d05d3a0c3815bfc4531e4da"}}, {_id:654, properties:{name:"main", repository:"aws_static_website", hash:"2c7f620bebf6a9cfd176098ac8a5015797d9f76c480f6fc063ddb98d"}}, {_id:667, properties:{name:"main", repository:"proj-azure", hash:"68bb819cd1432dbe89dd9170a0d55e8a10f77e19746c6c5bc5fbcf3b"}}, {_id:673, properties:{name:"main", repository:"typhoon", hash:"a4a09a563d64717d0ab4fa7e3bd280d1e511acdca04e56734edacd79"}}, {_id:688, properties:{name:"master", repository:"tf-az-kubernetes", hash:"c47a746f98e78658ce56259398931dab73f04cffeccc92279b892a58"}}, {_id:695, properties:{name:"main", repository:"loris-infrastructure", hash:"496018e0c99bd340033732cfa9b6cad8320ea2f0df787c1569f61559"}}, {_id:703, properties:{name:"master", repository:"terraform-homelab", hash:"96163cdf7a63f28e390afb9224941c2b0d36ecfde269ee9959a6726b"}}, {_id:724, properties:{name:"master", repository:"Harbor", hash:"9d88d68b8a8cfd70300ead26131077f47782957e892d4f60ef210d3f"}}, {_id:730, properties:{name:"main", repository:"feedpaper", hash:"e3875bed656b7d0fd4a1df07b6ec01a04954752ab606ab27cd88a284"}}, {_id:735, properties:{name:"master", repository:"terraform-gke-drone", hash:"2ba0e1975a56c3554bd554606a8becdee3e66e0c6dfaffcf031cc11c"}}, {_id:740, properties:{name:"master", repository:"terraform-aws", hash:"d6f66cc23b95202640c064370c586dc55db3fb3fd3fb7227e4ae0adb"}}, {_id:747, properties:{name:"master", repository:"aws-jenkins", hash:"5bda8357b40abd988df4375dfce7cb09066096a3ee403d80eb0a226d"}}, {_id:754, properties:{name:"master", repository:"tf-vpc-module", hash:"6c8ea6830a3bed3a2de2f642acb9b6638bc5d08dac5cf40f3604e477"}}, {_id:762, properties:{name:"master", repository:"cloudsql", hash:"4bb561c93e69fb733d404e9cb1cd9f9034f3974df0eb34003914c540"}}, {_id:773, properties:{name:"master", repository:"deepfence-threatmapper-lab", hash:"f9bb4bc1ea357b0dfd5e32017073fbc1e49d3b9762b800e54f46d5f8"}}, {_id:778, properties:{name:"main", repository:"terraform-azurerm-mariadb", hash:"265beecbe78da802872e8585a03cd382c5032a2a0b15072932169785"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:789, properties:{name:"main", repository:"provenance-infra", hash:"de2c3b79a460c579e011cc1e48b5acb82fdceb6aca6cf81666bdf99d"}}, {_id:795, properties:{name:"master", repository:"PortfolioTF", hash:"18c55bd8a5770aa792f24b3375f9ca48680e62f2148f46f954d5afae"}}, {_id:801, properties:{name:"master", repository:"terraform-aws-nuke-bomber", hash:"4984e83f1cc47c9ae5a837a24c8880b20a1e8af8e7266a90eb11b3e9"}}, {_id:806, properties:{name:"master", repository:"aws-terraform-cloud1", hash:"a366c9985c79f922216564b8494590cc73002e4e1b05c24d0295e8c0"}}, {_id:811, properties:{name:"master", repository:"apiary-data-lake", hash:"bffb9d06b5c63e60062a83cd34a2398b93a3ada73204c99a4dffbcd4"}}, {_id:822, properties:{name:"master", repository:"terraform-oci-azure-connect", hash:"45a6a0990dfa9b7ef3d5d2264e7c0f426952256cfab73d3b6f15b261"}}, {_id:839, properties:{name:"master", repository:"do-in-action", hash:"bca37cd5c970d3314d517333f55f5c306071632fe1dab3f99b373c6d"}}, {_id:844, properties:{name:"master", repository:"tf_telecom", hash:"d9dce5b01c2dd6d30348d138a6b5b7b379f6038bb12d9cf32da11d0b"}}, {_id:850, properties:{name:"master", repository:"iac", hash:"4e7526a9a2371ff79e3802ef121f2e5cb41780a597c733cf701e4879"}}, {_id:858, properties:{name:"main", repository:"webtwo-infra", hash:"2c11683d5f5e195b75846baea5bbfce40512e9fee0a157e3aacc2d97"}}, {_id:865, properties:{name:"master", repository:"terraform-lambda", hash:"44314ecc4203b5520c2b50ad1495368571ccad15e2a03dd6a5e7d8e3"}}, {_id:873, properties:{name:"master", repository:"terraform-alibaba-isucon8", hash:"5825f04fe44c678b7fc2e93eda9c332e496f2bd8d136bab56ca877eb"}}, {_id:878, properties:{name:"master", repository:"minifoundations", hash:"5b8839e164077119ad610a6bbc3acb47c63301538e5d6713201beb6c"}}, {_id:887, properties:{name:"main", repository:"cloud.mads-hartmann.com", hash:"1558835334e8928995e366a3ed9f8069c5dce0d659d94d7448ed1492"}}, {_id:895, properties:{name:"develop", repository:"graph-ql-cloud-demo", hash:"e81500b4c7385432d87e64a63c2f773059a3bd99d9b7647ef1eb9ba3"}}, {_id:903, properties:{name:"master", repository:"TerraForm", hash:"25b227eab2b3dc983c608bb251ea9722cf84a3b0800a22f3fce22887"}}, {_id:908, properties:{name:"master", repository:"kubeadm_aws", hash:"c43ee136e71d2f3b48c0d64396c6d375f76c50d81a9375c2a645225c"}}, {_id:918, properties:{name:"master", repository:"tf-public_subnet", hash:"9487c11d6f0edf2f09d758e38a180f947ee7aaf612bfeb1fea6e6aef"}}, {_id:923, properties:{name:"master", repository:"terraform", hash:"97ee61aae52b7cf8d164c75156b87a4d21eda58a0f08df2aa013a116"}}, {_id:949, properties:{name:"main", repository:"tf_eks_simpleweb", hash:"f0f6cc67ce092a72d05fc383afd8b9deb17aa52a4755c6fe2704e11b"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:955, properties:{name:"master", repository:"terraform-repo", hash:"0c4be69fa0a4e4ba0d148eac5c28e0f9d9f344341bc10334adcc3b23"}}, {_id:961, properties:{name:"master", repository:"fogg-tf", hash:"a112a225701eb40f6cf47e837104bc040dcfabf9b214697279e32338"}}, {_id:966, properties:{name:"master", repository:"elasticsearch-the-hard-way", hash:"7f5ff95eb969ec4caf69e6672ad69b2613bcc6dadf9d0d8ca6095545"}}, {_id:977, properties:{name:"master", repository:"flynn", hash:"8cd836bda9729d5bf8e9fdc1b9a9bc3b94f5c9eb09482f8b132d485b"}}, {_id:982, properties:{name:"main", repository:"stuartellis-org-tf-modules", hash:"30e7e64ff3b34fb59dbe2d9f6d53a5f1386e03b542485f7edf8e3212"}}, {_id:989, properties:{name:"master", repository:"tech-stack", hash:"9aa6dcd5365e8632294f5640b385adaa795a9102df5670491aca1f95"}}, {_id:995, properties:{name:"master", repository:"gcloud-python-cost-control", hash:"5032a5107508012a5681f6640d5907e725722b07c2e36a79e3ba7388"}}, {_id:1005, properties:{name:"master", repository:"dockerized-jenkins-master", hash:"5790999b373ee6f1a54c6d8af0739381f36938e7c60eb0577ee3fa2a"}}, {_id:1018, properties:{name:"main", repository:"kf-infra", hash:"80091708ad5e1f2ce4128540183fdbcb15e20ffd9055a26eb975568d"}}, {_id:1023, properties:{name:"master", repository:"tezos-auxiliary-cluster", hash:"35305c83f9f1543d368ad42d9b0da0626fbb522978357dd1e6bebf08"}}, {_id:1053, properties:{name:"master", repository:"caps-automation", hash:"724086a3767735ea309b97e70fe3287b43eeb4db9d5a7359d7a1439d"}}, {_id:1060, properties:{name:"master", repository:"jabujabu", hash:"c234d90075c0b026403ea7cebdbeb8ba3b3562b8ba5b319750b9074a"}}, {_id:1070, properties:{name:"master", repository:"terraform-stuff", hash:"7cc69a9d1308d993b8d395af5d7fac24f58139d791e9d69b85683710"}}, {_id:1075, properties:{name:"master", repository:"cloud_scripts", hash:"a9f54e34cab0e86360149718c008a6f0a13a943478290593cedf5723"}}, {_id:1081, properties:{name:"master", repository:"my-infra", hash:"80887c245b2dc08b9bf69496170f1c246d85bba1af28830397694cb9"}}, {_id:1089, properties:{name:"master", repository:"aws-with-terraform-and-ansible", hash:"095d67e6f80b2bc341dc2a9587251b4763e983d8f3555c974c606487"}}, {_id:1094, properties:{name:"main", repository:"ha-sap-terraform-deployments", hash:"6b7d7c0e4cff9b86507dc3a7e931bcd9f3aeb69318a9b0fda6937534"}}, {_id:1106, properties:{name:"master", repository:"EKS-Terraform", hash:"96fc1580e6b2c486d3c0f94ce8774c79863e6589c24a80ab090116a4"}}, {_id:1121, properties:{name:"add-ui-ingress-rule", repository:"hackstack-local", hash:"d48b465ca7b4eb0e2c710d3ceaf6577fb5ef02c0ad61d6ff7f39f86c"}}, {_id:1129, properties:{name:"main", repository:"ryhino-public", hash:"7eedd1f84fd4180d62161ca19254e70aeeb3a96cbd5ef93b61b49ed0"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:1138, properties:{name:"develop", repository:"qhub", hash:"543643f8e93e9b7fd37be4d9471418345e70a79ac093fbec5a728d25"}}, {_id:1242, properties:{name:"master", repository:"terraform-aws-mcaf-vpc", hash:"b8cf3dc328dafc1c70ee5910ba238fab811b5173e93f0366ca0a48ae"}}, {_id:1248, properties:{name:"develop", repository:"cyhy_amis", hash:"b8998fa309c9272d43234bbb2a617634ef46eb1e9cc9a4defcd9e4aa"}}, {_id:1265, properties:{name:"master", repository:"terraform-chefserver", hash:"558f006b12e96f62065d0d4bb0708eb3e9ef75a2c4eb97e1cbd56b82"}}, {_id:1270, properties:{name:"master", repository:"terraform-google-gitlab-runner", hash:"9b817687dee097dbde6cc2b5eb418f9b63bf389a7e8105da3e7d9ee8"}}, {_id:1312, properties:{name:"main", repository:"govuk-infrastructure", hash:"76e21ac3530c51da09f4b2f9a8a36083b6905970459e4c27b5d23186"}}, {_id:1335, properties:{name:"master", repository:"serverless-blog-in-aws", hash:"fb30b00ad92fa3911d28efd0e3e5e8d8cc5105cfcf286dbd711a368f"}}, {_id:1341, properties:{name:"master", repository:"lokomotive-kubernetes", hash:"4f6b8d865473b8e9b69591adbaaaf90b1ffd40ded5cfd4ae8cc63291"}}, {_id:1353, properties:{name:"master", repository:"poac-infrastructure", hash:"25212fd4cc590c218256bc7ad019f7538ce408aeaf52c6d546f492e1"}}, {_id:1360, properties:{name:"master", repository:"terraform-drone", hash:"472606c782ff14d783dcb55a6bf8c07ca65b8d908bd953c77040e539"}}, {_id:1410, properties:{name:"master", repository:"infra-cost", hash:"0e3fe5fbf6e1d9bb17fcdef7e1709f34edf0b2ba2483c71c7932007e"}}, {_id:1426, properties:{name:"master", repository:"gke-cd-with-spinnaker", hash:"1af580ee3f7b66db6831465c7fab48b6f248547ccdad527e1c0e4bca"}}, {_id:1431, properties:{name:"master", repository:"terraform-workshop", hash:"3e87f95a35cdea7b0f8ad127797353887ddf85be0e367db400546a73"}}, {_id:1449, properties:{name:"master", repository:"infrastructure.azure.core.network.hub", hash:"ebcc985618c6dfe5fe7d62d1ec53c03f846a9bff94bc28d3c7464659"}}, {_id:1470, properties:{name:"main", repository:"jks.gameservers", hash:"14c3108714de97d5b5494e2a59aa9c341539c8a0962c928e64398acd"}}, {_id:1475, properties:{name:"master", repository:"aws-terraform-template", hash:"b2f79d31643295cf3c4d8de50d82dd48e2e546f7916ce4603b69cb56"}}, {_id:1482, properties:{name:"main", repository:"terraform-aws-vmseries-modules", hash:"b8860c9882e5e7f10283a8abc4c4f0b4bd323003df401920a58a6e63"}}, {_id:1488, properties:{name:"main", repository:"aws-tf", hash:"8fc0fe55cef0883823a53dafe84f7861db10d75fc4e62bef3241ab87"}}, {_id:1501, properties:{name:"main", repository:"terraform-azurerm-sql", hash:"c28fdcd12300226686717c03b9cfde19e1efe6d8cdc01c15db2d6962"}}, {_id:1505, properties:{name:"main", repository:"personal-infra", hash:"89bc1d6707404dd8c0d1a867d814888dc66ebf9cc9365068418e6cc4"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:1510, properties:{name:"main", repository:"terraform-aws-single-account-starter", hash:"bbf54d180fd360aca756bc0474b312794b47553679dec3341b87e2ed"}}, {_id:1519, properties:{name:"master", repository:"immdom-terraform", hash:"e143d4d353c8e50530f9487b9cbdb79510901646d5e8b2250aa4c944"}}, {_id:1524, properties:{name:"master", repository:"rh-ex407", hash:"42c2012603d0d2d94b97a73c78a3ebc57673f99480f6d9400b58eaa3"}}, {_id:1529, properties:{name:"develop", repository:"AWS_Blue_Green_Deployment", hash:"0ade5761addd638a3993b9f3360f3a464afca9046da78a5a78a95f30"}}, {_id:1535, properties:{name:"master", repository:"lead-terraform-Dashboard", hash:"77ed4fdde31b7c837dd6cc53b01ac0956a6b3341265c548326a9328d"}}, {_id:1552, properties:{name:"main", repository:"Etch.OrchardCore.SiteBoilerplate", hash:"fec01596244d462b62fac7c65166d4681f349db65d9cee2c0820e00d"}}, {_id:1557, properties:{name:"master", repository:"auto-gcp", hash:"8718593c63f9d6887d6e18654a72320b48acb16e57f01272323f5dcc"}}, {_id:1569, properties:{name:"main", repository:"aws-eks-base", hash:"30f5f003e39cc2b4d5a36b868a510ced02f5f2a50d334c3b9e8ede89"}}, {_id:1574, properties:{name:"master", repository:"terraform-aws-quorum-cluster", hash:"790400e7d182a41e3f89ce8c24e4ec3a8b3c1df5cfb60fc7aad98c7b"}}, {_id:1590, properties:{name:"develop", repository:"fogg", hash:"81e6fa12fe6bd3bdbf187acd1c3edfa00b9500f5e1867ead4c8896a4"}}, {_id:1598, properties:{name:"master", repository:"cloud-native-workstation", hash:"94ee121df2a33057cc5ff145d789a5410ff7dc22491faf950e13e70d"}}, {_id:1606, properties:{name:"master", repository:"dataworks-aws-data-egress", hash:"c43af912dbb22cb8e685e2db4f1798160f6fa1dfc511782282fa4e4c"}}, {_id:1616, properties:{name:"master", repository:"tezos-on-gke", hash:"5456adc5dfbf2986406f5de6096dc62ffa95f2fb071f31eee5ad9824"}}, {_id:1648, properties:{name:"master", repository:"govwifi-terraform", hash:"f6364dae66738dfe65b583f89fc911b2e6481664edba18f473da2ef7"}}, {_id:1662, properties:{name:"main", repository:"personal-terraform", hash:"dc016a81e28dbe6acdc9822b5db57a1f5e91fc7a5de82bd786d60cd9"}}, {_id:1686, properties:{name:"master", repository:"tf-terraform-management", hash:"798c56b04c20683435c7fcf0583530c8fcd14396683b06b3608ecb9c"}}, {_id:1693, properties:{name:"master", repository:"terraform-aws-devnet", hash:"5a90ba219744fc7a077c12749815bf85df97856ce152be33a86ab6cf"}}, {_id:1698, properties:{name:"main", repository:"aks-anti-dry-iac", hash:"167c56a10e994681d3812fd9fa770b8ed50f2db0a2bdfd5fb1232ce2"}}, {_id:1723, properties:{name:"master", repository:"terraform_modules", hash:"2e6a215d68ce12ed445f92f57ddd5080fa18de6b1dd25fbdb5e6df13"}}, {_id:1736, properties:{name:"master", repository:"common", hash:"8e0d2fef929b6f6dfea94d87a533dd9759684684b41f5ba2cf415c57"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:1745, properties:{name:"master", repository:"aws-experiments", hash:"477b523f1a685fcf58ce893e1dd0b4083f6536f7cccb8bf5e2a5f808"}}, {_id:1753, properties:{name:"master", repository:"wg-terraform-template", hash:"75c36fbe6aaaa054de69264c378dcc41552e48761ca0947b33fc88b9"}}, {_id:1758, properties:{name:"main", repository:"terraform-core-aws-alhardynet-networking", hash:"5a945a1b07384372101de75c6e5c43cfb94f11da846d00a8074f7638"}}, {_id:1765, properties:{name:"master", repository:"paas-alpha-tsuru-terraform", hash:"23354957ed84f63079ad53976d3fede2fc4c42fdedde76680e2a01fb"}}, {_id:1772, properties:{name:"master", repository:"from-dev-to-ops", hash:"034a83be0e76ceef3e338e04979cc73db4db26b16a4cfc211a3c19dd"}}, {_id:1777, properties:{name:"main", repository:"archivematica-infrastructure", hash:"33fd43a67a90cacbaea119d915b6e899670f1413ad07ef5a938df08f"}}, {_id:1784, properties:{name:"master", repository:"dc-terraform-provisioning", hash:"4524bb0261e255b002595ae176aa1eef3820f05bf83138d7d10f6ee7"}}, {_id:1790, properties:{name:"master", repository:"iaac", hash:"7a7a92e3a9bda77a5bb19a62a23d47780ceb77e6b7df1b5602f9fcd5"}}, {_id:1807, properties:{name:"main", repository:"terraform-aws-bastion-host-ssm", hash:"bd3b631013c8b0b92598866dd684f7654997d84b6048ec081d16a294"}}, {_id:1817, properties:{name:"add-split-subnets-from-tier", repository:"firehawk-prototype-deprecated", hash:"a199dfaf330dbd50f96bd4d1ff6c585afdac292fabf67ce3365c986f"}}, {_id:1822, properties:{name:"master", repository:"terraform-config", hash:"8ff34f4d1050a99962d58d0835a2a3487ba4e18676b3d0b922553a5a"}}, {_id:1831, properties:{name:"master", repository:"hashicorp-consul-setup", hash:"e12048f6ef2e36ab7074f81e5685d20f9fab0abefc2b0e1702126f57"}}, {_id:1840, properties:{name:"main", repository:"aws-terraform-remote-state-infrastructure", hash:"dacb59223e5e304e7479d67863c0125237a0af0d9b053dc0c325bf61"}}, {_id:1846, properties:{name:"master", repository:"terraform-aws-foundation", hash:"0f15f313bb539b3c6091942f2321fddb61a945fff3bcf6d846992a90"}}, {_id:1869, properties:{name:"main", repository:"govuk-aws", hash:"f2e3a8a998595d8f9f39bce96bd81cda164e13502a0c6a1cc9644985"}}, {_id:1884, properties:{name:"main", repository:"platform-infrastructure", hash:"32b59bcba447e03225dbaa30c8b367a525694be4e08ce6381eecc7d9"}}, {_id:1907, properties:{name:"main", repository:"cloud-platform-environments", hash:"57f6e39232e2db4fd6d1a4ef58e53376d81c742c463f0f6e21a30f39"}}, {_id:1934, properties:{name:"master", repository:"terraform-aws-lex-lambda", hash:"c175a1662f2c97ea42717f58531b3336c7ebacc962899b648b227120"}}, {_id:1966, properties:{name:"master", repository:"govuk-terraform-provisioning", hash:"a698a53915aeb0c595bcfca83ec4910800496af3798f82133e3916c0"}}, {_id:1980, properties:{name:"master", repository:"aws-terraform-ec2_autorecovery", hash:"9790fe9065451378fb7f90189f67ccf63a2e08cdfbacdfef58453417"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:2015, properties:{name:"master", repository:"terraform-infrastructure", hash:"45e9f9bbe06af8220ace58e523919b807705fd2bbb50b3abb6ff886f"}}, {_id:2020, properties:{name:"master", repository:"stack", hash:"54cb1a6997487deb1b01e750f875f23a0b1b7a6d75ce02b0bc9c027d"}}, {_id:2028, properties:{name:"master", repository:"cloud-inceptor", hash:"ba64a2751968ff30ae8520350be7efceb4698ed77add9822756f2e56"}}, {_id:2042, properties:{name:"main", repository:"Infrastructure", hash:"767e15e8f913e10e094ecc52d77984d5d5c8be73d0ba611ece4dcdbb"}}, {_id:2048, properties:{name:"main", repository:"hashicat", hash:"883b7c32df538c974de0e8a2c213c06475264522b2e387bc1df372cc"}}, {_id:2054, properties:{name:"master", repository:"le-tf-infra-aws", hash:"2c2a08c27de151d1feeda94d7e44e70299fb8e3ed9b402b6e45fba74"}}, {_id:2071, properties:{name:"main", repository:"cloud-based-sensor", hash:"8421f158396cdb213effa64e93e0adfdd308c368299cd3f6b4d969f4"}}, {_id:2095, properties:{name:"master", repository:"eszop-infra", hash:"33c69673bec5521c0522274258836e02c45e73010af56ac8359cae74"}}, {_id:2118, properties:{name:"main", repository:"terraform-google-multinic", hash:"fb7b4154042d81cc064340778039c6846e20e9d3b1d0513d6350f1ff"}}, {_id:2139, properties:{name:"main", repository:"asz-dbz", hash:"738432cff9efa89a65e6c242d991ad8709085397427eb5059f59e4d4"}}, {_id:2147, properties:{name:"master", repository:"terraform-example-patterns", hash:"569d5523ed18e8bf186556e48f55034efdd2698e0f729581183475a3"}}, {_id:2153, properties:{name:"master", repository:"terraform-eks-cluster", hash:"18f614a36630851821fed3b712ec15d0f988d21f828516c52767ff69"}}, {_id:2160, properties:{name:"master", repository:"speedyhead.xyz-terraform", hash:"483143dc37bef62d5ace11e781b9d8d90aa1741006ca3587998b853f"}}, {_id:2179, properties:{name:"main", repository:"cloud-platform-terraform-elasticache-cluster", hash:"84130cc66799ffba0ddb2ecd1f1eb35f4a915ebddedc84c4f9c6420a"}}, {_id:2186, properties:{name:"master", repository:"terraform-master", hash:"1cecc271b25cac04de58473d955315ab7ecf9072554c83c1ce537b80"}}, {_id:2196, properties:{name:"master", repository:"terraform-minecraft", hash:"da8a68231343c66eedf623aa658a413c36fa29d75aabbc2931d16ebc"}}, {_id:2242, properties:{name:"master", repository:"personal-infrastructure", hash:"7e07226073b029ce6c33a72929f5e2728d14b53b7185b47f9a864047"}}, {_id:2252, properties:{name:"master", repository:"Terraform_Webserver", hash:"29ae84414a62afe673699cc47bce6d89a696431336566f77d8141ece"}}, {_id:2275, properties:{name:"master", repository:"fantasy-manager", hash:"ec644f2231f925846e0e912b7d38d1a5057d128fbe9764bbe1edc036"}}, {_id:2285, properties:{name:"master", repository:"devservices-aws", hash:"742bb5c844d6bdfb911986aebf848bd794e96bafb8357491d1341545"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:2293, properties:{name:"master", repository:"terraform-oci-azure-adb", hash:"78637f2898498d3e730b0ef8e6131db43af29f85d080de87538be1cd"}}, {_id:2297, properties:{name:"main", repository:"terraform-aws-glue-crawler", hash:"f76a9efff6fdcb727d2ce185cbc55fdc1a730cc10f23e468bb15d3ed"}}, {_id:2318, properties:{name:"master", repository:"clip-stitcher", hash:"53e704b88bc1e0c3fd9d65e66b0a35e6af585a6902741baddc9187e1"}}, {_id:2325, properties:{name:"master", repository:"kiritan.com", hash:"6f859680758fc7dfe26882415f5710c381791c3e6da735d0a432a156"}}, {_id:2331, properties:{name:"master", repository:"Sample-Security-service-Terraform", hash:"65baa9611a9bec709ddf8c7c92316980625bf641f3e65ae43f53d6b7"}}, {_id:2337, properties:{name:"main", repository:"ec2-dev-env", hash:"d49afdf1b5cb8925254bb396f7423f6c829b1a549b35bbdf33480ad7"}}, {_id:2348, properties:{name:"main", repository:"tf-azure-example", hash:"c6f62d2d03aade1d9bce2764819084216a10cea48911393d5f73c986"}}, {_id:2354, properties:{name:"main", repository:"ceu-terraform", hash:"11ce0e5c44bc08be5b093f6383620e55ef2cc3416ad6b2fd891bf98b"}}, {_id:2361, properties:{name:"main", repository:"cloud-platform-infrastructure", hash:"5b16ab93c80232d26f783207b35f5554879daa120d6781e37f8cfc30"}}, {_id:2367, properties:{name:"main", repository:"goobi-infrastructure", hash:"26a0e64cf06818042b3b20d1ce86ab3e59fe388d387c3a6c325b3504"}}, {_id:2372, properties:{name:"master", repository:"gitlab-environment-toolkit", hash:"3e4e4a34e43d876b9bd3cb203dcabe527fd3d73e5a6947f4336b6dbf"}}, {_id:2380, properties:{name:"main", repository:"firehawk-main", hash:"b25c65e680b1103dae09bd4c2677f6ef45fab268f60b3649f11c921b"}}, {_id:2385, properties:{name:"main", repository:"terraform-gcp-instance", hash:"fa0c2f4d8a7fab07e47f90b15f27dce00945fa0e24f4bb98f45355bf"}}, {_id:2398, properties:{name:"prod", repository:"weather_cache_infrastructure", hash:"e1fcd866b3bda1d04aed7f0d6fbf4a99789c80db4542f4db219f5a31"}}, {_id:2404, properties:{name:"master", repository:"homelab-iac", hash:"5c4c5ddda2544053ddbd891068345430c7bebb1758d7242440c7b09b"}}, {_id:2413, properties:{name:"master", repository:"terraform-aws-vault", hash:"2f3eb55df3875020680237fe31b389728df72771495a0381cdb8239c"}}, {_id:2448, properties:{name:"main", repository:"imagebuilder-terraform", hash:"cb27e05729549c17d1032ee8152a0008af566a27e0f23262601c96f9"}}, {_id:2453, properties:{name:"main", repository:"prm-mhs-infra", hash:"03872843e897ad69f48a3de29c9ff25554644533e17bc1f91a376102"}}, {_id:2476, properties:{name:"master", repository:"terraform-aws-account", hash:"4c51c8c83376116a1c5681d74881ba3791a07196ac45aa6eec008883"}}, {_id:2486, properties:{name:"master", repository:"terraform-google-kubernetes", hash:"f2b0c261111fb7676f1c1b9d11879b4881d48e36981f1c82d2e03795"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:2497, properties:{name:"main", repository:"route53-ps", hash:"270d47c2512bb3f62fab0d206fa5705fe80e58d06545ad16ad4a5585"}}, {_id:2503, properties:{name:"master", repository:"OVPN---TF", hash:"57f6db64dd77a4eaefc16f7771218a655b13174f8b7ae6996e4d450f"}}, {_id:2516, properties:{name:"main", repository:"terraform-cantrill-aws-associate", hash:"ef3db676013fae8d071672317da5380c0f7cd2502e2cb559e8d57d72"}}, {_id:2528, properties:{name:"master", repository:"terraform-google-gcp-project", hash:"7f40cd92bcd1459e6d2f72fd8e4fb9b6a575e507bd75d3ea04a089e7"}}, {_id:2554, properties:{name:"master", repository:"qa-reports.linaro.org", hash:"a3d773917c6a3683f89b4f0f182814eaf29a11967593f8748eb47375"}}, {_id:2561, properties:{name:"master", repository:"django-drf-boilerplate", hash:"4d7c734834ed50ff2ed65a97e031379b478035a3881122989dc97ca6"}}, {_id:2605, properties:{name:"master", repository:"infra-modules", hash:"48ac72f18853d2c9431efdd1a91f91eb500528beaafffaf8fe5865e9"}}, {_id:2613, properties:{name:"master", repository:"terraform-google-nomad", hash:"1aeb3ea43c9bc1cc552a8bd12fb542d2a0fd40f2c9e0f81d8b615de4"}}, {_id:2618, properties:{name:"main", repository:"UE-Jenkins-BuildSystem", hash:"2b1680e629df1a8e887f67559fc667b29526411eaaa4f248efd3686c"}}, {_id:2623, properties:{name:"master", repository:"demblock-pipeline", hash:"122987ae8c48918f4e252644e061a8d1b256a0a6f4caad2a4dfae05b"}}, {_id:2632, properties:{name:"master", repository:"jumpbox", hash:"ba665b2fe31e10fa8edfd31f492d2896b760a03fb3ff00dbf5782b7d"}}, {_id:2638, properties:{name:"master", repository:"certifications", hash:"a0c8018f1aa5bad4c496c514c41a20316b27a738f7ce0c49b488fea5"}}, {_id:2650, properties:{name:"main", repository:"terraform-aws-cost-alarm", hash:"6cf08a5a7f5401fd8b1ddd315c6fe39d8a3fd6395870ef1dd12c6a5e"}}, {_id:2657, properties:{name:"master", repository:"a_new_hope", hash:"0a5dbf599675425ba6f5736c507346d76ffebed6e3b25197398524e7"}}, {_id:2662, properties:{name:"master", repository:"terraform-azurerm-windowsscaleset", hash:"f5cde354cbfe512e4aa0ae7a22be540b9de3fa61d9140c3dfbdc3029"}}, {_id:2676, properties:{name:"master", repository:"dylanmtaylor-terraform-aws", hash:"8ccb5c73f86db10444989f5a928a5c32dee8ae10c82470c365d923bd"}}, {_id:2681, properties:{name:"main", repository:"terraform-azurerm-mysql", hash:"b75fce4a5004b697a5dfb5e6754d6b06b111d5540eec9c0e28539933"}}, {_id:2690, properties:{name:"main", repository:"terraform-aws-alb", hash:"46a062d3e1754172b5b689e117c0b3a84ce7ebb9811564943cc6bd8b"}}, {_id:2699, properties:{name:"master", repository:"Gefjun", hash:"4a242cf55e0f5426eb91679608d6436b648093038baf543465b2a9e6"}}, {_id:2723, properties:{name:"master", repository:"jjffggpp", hash:"7b30069d5f350f4d9bb47ec229f34ecaf60dddedfe989c648e0ae1bf"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:2730, properties:{name:"master", repository:"eq-terraform", hash:"31c94e41012d1cd7b0daf59120e650c236b1f4d532a89bb38cb304c2"}}, {_id:2744, properties:{name:"main", repository:"flightdeck", hash:"69b0841bddd4964b30371f49ebc08fd25cc99cc734fddc1d225be96c"}}, {_id:2773, properties:{name:"master", repository:"AWS-Cloud-Architect-master", hash:"b3542691c94547124b0d82e273ddccf2f960e123442619b0b7cf76a5"}}, {_id:2802, properties:{name:"master", repository:"infra-aws-code", hash:"4412fe0f3b9818f922018f470b2598d02f44bf09cf8961b5a2428092"}}, {_id:2808, properties:{name:"main", repository:"terraform-aws-kubespot", hash:"19dbf78b37cd0feca52eb1639d3062ccc8d7e94fe81af3bc93f0a509"}}, {_id:2815, properties:{name:"master", repository:"terraform-aws-terraform-init", hash:"9bfbac4e8bf16bca33d31823826878302aef38de69a1cb5429f2fc8a"}}, {_id:2820, properties:{name:"master", repository:"PL2-AWS-Setup", hash:"c31c171ec225bd2ee9dec5bee553745bac8ab439961a20444918d63f"}}, {_id:2826, properties:{name:"develop", repository:"freeipa-server-tf-module", hash:"09a6d75a066924d5da483a7a20d40c70ef90847d85d7cedf142626ca"}}, {_id:2831, properties:{name:"master", repository:"testrepo", hash:"494c74eadaceb99639552c099beb77c3603bd523aa7e5561cd443153"}}, {_id:2837, properties:{name:"master", repository:"Translator-TM-Provider-Infrastructure-Modules", hash:"63ed83abe93061a9df93d07d57e5ab3945e6335226e1c0c7a920b4cf"}}, {_id:2843, properties:{name:"master", repository:"terraform-s3-backend-setup", hash:"8c5311f23eb015f2d92967593f3d7fbf2bfd9979cbc6b663eb9fb123"}}, {_id:2850, properties:{name:"master", repository:"live-infrastructure", hash:"ee830b04726e1015d7b4d9b8ae1906701c036681936832f2a99d8c9c"}}, {_id:2857, properties:{name:"master", repository:"aws-account", hash:"d45ebb34b5ba685e6bc126c55b461516e6b2b0b5240dc675c3be4b94"}}, {_id:2862, properties:{name:"main", repository:"terraform_three_instances", hash:"b0c669d1c0cbf945bad5a9e2529cca1c8fef8ed5f16af565880959dd"}}, {_id:2867, properties:{name:"main", repository:"modernisation-platform", hash:"729f305e65c27b7335bf87b1998ec516ce0a7bbcf8019d60c9dcf63d"}}, {_id:2872, properties:{name:"master", repository:"BasketballDrillBot", hash:"1e2e010aae112d78b1bcd684770611f6756f970cf9ba277f2e1b5484"}}, {_id:2903, properties:{name:"master", repository:"terraform_aws_ec2_instance", hash:"3dc66ed73abfa880ff8465c3460c418bf0ae069c97c4865c3a1dbe5e"}}, {_id:2908, properties:{name:"master", repository:"terraform-aws-eks-jx", hash:"25d39b31aff58b16f861e81cf929517054216312865591b70bc9271d"}}, {_id:2917, properties:{name:"main", repository:"automation-infrastructure", hash:"a152db166d446c607f841fe7eaffcf2e7631132283ed059ff4ed5346"}}, {_id:2931, properties:{name:"master", repository:"eq-terraform-dynamodb", hash:"96213e0952be7e4565eab7a48e2847741318124e15df802ff832a33b"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:2941, properties:{name:"main", repository:"aws", hash:"67773fc73602b5615fb24ff3051adc78d9002600db1c2638f84d1d05"}}, {_id:2946, properties:{name:"master", repository:"giantnetes-terraform", hash:"0b37e05ece321dff2f6a3c58f9076f76f0f2ce5e5badbea0efd4ba58"}}, {_id:2956, properties:{name:"master", repository:"terraform-module-aws-core", hash:"784f1a38ba5c3ff445c59ac59060ca198b76c8c354d4c834eda1faa5"}}, {_id:2965, properties:{name:"main", repository:"buildkite-infrastructure", hash:"2f7a6a37554d804b19a348fca939a62a6591ba183f90420e67457b3d"}}, {_id:2977, properties:{name:"main", repository:"btc2snowflake", hash:"975f07f85a86429c2f70f07bb081c5a2011feb4d7ff00f1b4eccf389"}}, {_id:2982, properties:{name:"master", repository:"terraform-google-hedwig-subscription", hash:"03b22b4682f21ac65577dae538c0cce6bb5a85db75f754f297fb5691"}}, {_id:2989, properties:{name:"main", repository:"mts-trial-deployment-config", hash:"aa72a6c0f45c543650e362d3689b1476f6c0bba862c3575882ea5efd"}}, {_id:2999, properties:{name:"master", repository:"eutambem-serverless", hash:"c367af3a27e197ef86ec6ec4af4349d6a6f1869277e728552e0c2fb2"}}, {_id:3004, properties:{name:"master", repository:"SignalWs", hash:"2f5a254511989d55e54c945c4153b7a04fba33a324453aee144487f9"}}, {_id:3009, properties:{name:"ops", repository:"azure-terraform-packer-iac", hash:"80012a1012b3ca3a3707f68fcc5e3824421ae9c005fbd83fd767a07b"}}, {_id:3038, properties:{name:"master", repository:"Scalr-Demo", hash:"33b24fce8099067433bf2bda435b0243300c70afb359457c3c13b88f"}}, {_id:3043, properties:{name:"master", repository:"blog-terraform", hash:"6faf5a76d6f5b3f4750ed12c9eb1124725206232c6d4d80f381eca32"}}, {_id:3052, properties:{name:"master", repository:"terraform-digitalocean-kubernetes", hash:"49befbd2288e323a9cf911088d3ba94370de114af754c3f3ec37d952"}}, {_id:3059, properties:{name:"master", repository:"atmos-recipes", hash:"a3896a4adf5e7eb6544f8bf890f2fc2cc466eb9318ced2da8294fb01"}}, {_id:3071, properties:{name:"master", repository:"forgotpw-infrastructure", hash:"4a0be046e18fa5228aa7f6737c3bd20549d96c6b9a81af2e3ae48e78"}}, {_id:3078, properties:{name:"master", repository:"terraform-cinegy-modules", hash:"c6185d55c6b63a090a6d79fec84ea2ad7a17faca6dd8e2d72d0aa3ef"}}, {_id:3086, properties:{name:"develop", repository:"tf-aws-pi-hole", hash:"d1acd1806a04fb6e98e79c4ee46da77b86569de5694ec9e4699f58d6"}}, {_id:3117, properties:{name:"master", repository:"expertalk-2018-ecs-workshop", hash:"072155d89e8c31e3ae6ed49597eef78e212f6755f675480d6d1b3769"}}, {_id:3124, properties:{name:"main", repository:"terraform-datadog-costs", hash:"9080276306a1fd88f3ae4bc426cd0c04981700e43d395c4db3d2b85e"}}, {_id:3151, properties:{name:"main", repository:"terraform-aws-sagemaker", hash:"2cb440f8d9b3f48ad49c2353bfe5ebd912add97a9ffb87c8edaa4cc1"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:3165, properties:{name:"main", repository:"workflow-testing", hash:"5bfd358abf5759869289136602ed9f2327ec4fdb788b4bdb2c1753f1"}}, {_id:3173, properties:{name:"Develop", repository:"sts-network", hash:"829ff3c515049730dddf7b9a14a07df14c5bcab3972f4b8f5ad2f164"}}, {_id:3179, properties:{name:"master", repository:"terraform-k8s", hash:"b10f82c1a4be5492bd32fda23f24cca8f12f7aa269b85e46578f2db1"}}, {_id:3200, properties:{name:"main", repository:"modernisation-platform-environments", hash:"9dba46a96030fbb878f7577197f8f11374c9b0f4712e254d63db8774"}}, {_id:3204, properties:{name:"master", repository:"terraform-aws-state-backend", hash:"c937852af835f86a2bd8b001c89a8e87140417d8be263ba89acc3cf2"}}, {_id:3211, properties:{name:"master", repository:"fastly-demo", hash:"89ed8b5034218bf6fc8ff55b9e94e433c6bcbda6153a435b9df6703c"}}, {_id:3217, properties:{name:"master", repository:"terraform-aws-codebuild-container", hash:"c8a4fe9d7790411af04ee19c5f86df2e021bae5d5f00aaacceb40a31"}}, {_id:3228, properties:{name:"master", repository:"verify-infrastructure", hash:"c99a9a2c988265c025fa4b707e318afa6fafa128d2df1fb89cbad9db"}}, {_id:3252, properties:{name:"master", repository:"AWSEMRInferencePipelinePOC", hash:"6c0e45a4b07086d120f4f006d48da8b63a723039a010693837b67511"}}, {_id:3270, properties:{name:"main", repository:"aiidalab-k8s", hash:"6ddae214546ac90635ddd57b0545fec99e712733575d09bd0191d323"}}, {_id:3283, properties:{name:"master", repository:"k8s-terraform", hash:"f0a1429db3fec360867d351783d94e7553ecd93f3af33f4c87102f0d"}}, {_id:3288, properties:{name:"master", repository:"terraform-digitalocean", hash:"80ec14bdf04cd24ba0fdaca5dadd0494b4f3f28b2f44668ac538f55a"}}, {_id:3295, properties:{name:"master", repository:"terraform-deploy", hash:"622c20cd7d4d0eb48c500eb216ccfb323601a0c1bdf00aa3bdbe3eb3"}}, {_id:3304, properties:{name:"master", repository:"terraform-aws-codepipeline", hash:"034c284e09a8fc06677ce9c0262d5312708d0cff25406e73785795f8"}}, {_id:3311, properties:{name:"master", repository:"chat-app", hash:"3c390914422e3f30c29303f5027f2cc7021ef0b8a029e90dd807798d"}}, {_id:3316, properties:{name:"main", repository:"blog", hash:"570a39b0bce532cb92a3fa9ab58749465c3305329520cd91730e424c"}}, {_id:3330, properties:{name:"master", repository:"terraform-old", hash:"8301d2cf899654f894611c73507b8e2e8b090ff2acb759af20f6711d"}}, {_id:3343, properties:{name:"main", repository:"cloud-gateway", hash:"f044dcfeab92676cfb01fa8e5976dd3ced9bc8a13f2a6ad9ddd3ecf4"}}, {_id:3350, properties:{name:"main", repository:"terraform-azurerm-terraform-enterprise", hash:"9d8bb98f9a396e595e12e8eb00f47f0d41d275839dc16802d6613e7e"}}, {_id:3355, properties:{name:"develop", repository:"abd-cloud", hash:"349936bff0f34d332993896da11502dbac619cf5449a339158f31dc9"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:3365, properties:{name:"main", repository:"gcp-foundation", hash:"cd3acea4524aa847dec106bb70e4c5e07aef932786f604c091aebccd"}}, {_id:3384, properties:{name:"main", repository:"iona", hash:"78a0289d5ca09a89cb4c301db6854e132d5c844f49e90cf42da69924"}}, {_id:3390, properties:{name:"develop", repository:"cool-assessment-terraform", hash:"e9594d4c1fecbea1fd20fe2fa1968ca08d6389d502ea478331c71362"}}, {_id:3401, properties:{name:"master", repository:"secure-brigade-terraform", hash:"be1b1c965e9641c920c90d3f149e70baf5e418497acbaf77e197dd4d"}}, {_id:3416, properties:{name:"main", repository:"rocketchat-tf", hash:"148fb4e405009ab19766e139e5c1324e17bc9314e95c6c6d40b3627a"}}, {_id:3421, properties:{name:"master", repository:"musical-spork", hash:"1c2e478e8bb77cf34041806c1a3f5735002b6041e8c56c761ff2ae68"}}, {_id:3438, properties:{name:"main", repository:"terraform-tekton-pipelines", hash:"8825ca4114d31ba3394e66e12d6a024ab2a07b51a4d1ae640f95a760"}}, {_id:3444, properties:{name:"main", repository:"global-aws-infrastructure", hash:"356f19bdc972e39088dcf0655a91b3d0d113b39c699ecd48b7e96720"}}, {_id:3454, properties:{name:"master", repository:"terraform-google-nucleus", hash:"2ece695d7976aca778b26743469d3c9688cc8f3608dc30b9513c6fd8"}}, {_id:3460, properties:{name:"master", repository:"TerraformOpenVPN", hash:"1b484e3652b24ce245fdc9669a23da361ca8eebab49df6cf94fb5bff"}}, {_id:3469, properties:{name:"develop", repository:"bedrock", hash:"dd05eab7e776d196277f0bdb47481daf8d3b33af6e82ebc522f093f1"}}, {_id:3474, properties:{name:"master", repository:"splunk-refactor-poc", hash:"5946c4aa95742c12f62149f3f9b530de9260e9c98654eeaeb8a0200f"}}, {_id:3483, properties:{name:"main", repository:"devops-governance", hash:"edf46f153f50dfc76f7b2bbe46a0f2602bba9795dff484773935838a"}}, {_id:3489, properties:{name:"master", repository:"terraform-scaleio", hash:"2b8d35d53bfb31f95d7f62752bbe710895d7836d78f5a8e27920d272"}}, {_id:3496, properties:{name:"master", repository:"covid-videoplattform", hash:"6460d4555f3e31cf59f84b3e3d6e29c4e282e0b1204a2eb2d16b3050"}}, {_id:3506, properties:{name:"master", repository:"terraform-aws-camellia", hash:"86fc3e06d3666581c726c37c0fb4e54e73a7035030b9ba9077778f42"}}, {_id:3522, properties:{name:"master", repository:"terraform-example-aws-vpc", hash:"5b38874619cb0239ab58426da808e88713f422ca658381217feb38e3"}}, {_id:3527, properties:{name:"master", repository:"aws-batch-processing", hash:"dfeec6878ed048209256d20b3a309b629feede644b1f1e68bfa83562"}}, {_id:3544, properties:{name:"main", repository:"rpki-deploy", hash:"a573847496d40a57c894060981ff3f181e7cdd1d03bb346f9b85aa85"}}, {_id:3549, properties:{name:"main", repository:"terraform_setups", hash:"e0c79a68b976f43f702db5393eead3e008b376ac9007a26b2ca386bb"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:3560, properties:{name:"master", repository:"terraform-elasticsearch", hash:"207b8d75a0344eecf4bf8e1c819663b581116dded61d48073b9e4bd3"}}, {_id:3569, properties:{name:"master", repository:"the-dummy-tfaws", hash:"5f742c301f5bb2c9914483ae3ce73c51cd734be3611ad66fd261d147"}}, {_id:3579, properties:{name:"main", repository:"kubernetes-modules", hash:"cdb731059f569c74ae21917567f66ffd2d0cbe7be44e4193915155d8"}}, {_id:3596, properties:{name:"main", repository:"jitsi-meet-torture-rocket", hash:"e6bc01beee75b1ca67b7c09b8815100349a9204906197df08fd2491d"}}, {_id:3603, properties:{name:"master", repository:"terraform-aws-cognito", hash:"3a27bc46948b6fc8cbf5d42892c896ce9f7a957a1b4406dbc728789a"}}, {_id:3614, properties:{name:"main", repository:"sentia-data-engineering-assignment", hash:"057f06be45383c9c29c5fddf3d31c193a689379b0b37038cabe6c774"}}, {_id:3619, properties:{name:"main", repository:"terraform-unifi", hash:"9c2898bd9f0c679544249c9aebec850004c332afbad9538227da0d69"}}, {_id:3624, properties:{name:"master", repository:"gcp-landing-zone", hash:"4e1cb6ca6fc3411a8746a569c0d7665f8f3312bc94044168c21e8804"}}, {_id:3632, properties:{name:"main", repository:"digitalmarketplace-aws", hash:"3b3b2f3e560cb501de71df0c37e227906a80e6a4c83234be43f9debc"}}, {_id:3640, properties:{name:"master", repository:"jamulus-builder", hash:"1ccd733a173941f77525b5c8d6eb2c00cba79a424e8d6dc5fb866c0b"}}, {_id:3649, properties:{name:"main", repository:"SingleNodeOpenshiftOnLibvirt", hash:"fb47a13e17b015aa88117a07061dbc7f0f168a13684f945d4072e186"}}, {_id:3657, properties:{name:"master", repository:"terraform-example-foundation", hash:"7debee393740b31956b58e02ee0551b5d664522532bde9a10a3d0429"}}, {_id:3670, properties:{name:"master", repository:"terraform-aws-config", hash:"d34de9febc6460c9bcf4b719b71c6a5da011244f716297fd911f5cbb"}}, {_id:3681, properties:{name:"master", repository:"terraform-aws-mysql-cluster", hash:"3b6ae1f567b03e796d60c93d5c34d838241506365ecbe2fee86f6d2f"}}, {_id:3686, properties:{name:"main", repository:"hmpps-delius-core-terraform", hash:"14eca4e7c3ad62a6069806f73974916336d114faf2befb2a015247db"}}, {_id:3688, properties:{name:"master", repository:"terraforms", hash:"c808501a428edcf0ff4e34c51b0a7bb68fdb8ef982295ee7c7613b92"}}, {_id:3701, properties:{name:"main", repository:"gcp-playground", hash:"3f69af20e98a5943285c0376697a3a701a9c1bdfcf38580047bb49fd"}}, {_id:3706, properties:{name:"main", repository:"network-access-control-infrastructure", hash:"71ddfca2d9e38c9e4e9152186df3ed5546d4297b53d4343510179f5e"}}, {_id:3718, properties:{name:"master", repository:"haystack", hash:"53443e1336b2d4ca650de5d81710215ab0b0230e2f059048e677cc08"}}, {_id:3726, properties:{name:"master", repository:"HS-Terraform", hash:"6976f2dea433e665eb0eaa38cd678f26c337130229dd86dd6a161c1c"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{_id:3734, properties:{name:"master", repository:"mattermost-cloud-database-factory", hash:"74233f9d5682ca3895e4f9fdb89d31bbd3ef33736291796360ca0484"}}, {_id:3754, properties:{name:"master", repository:"terraform-s3-backend", hash:"937ff111c8dccc0dd47ed6ab2ced31eed81d8aacd5d5258f33fe8532"}}, {_id:3759, properties:{name:"main", repository:"IaC-Templates", hash:"25549b2ac0cf9cb0ba81488b2322e54ba19ae06dd73bba2f6c296f19"}}, {_id:3771, properties:{name:"master", repository:"nginx-multistream", hash:"b16d4f84bab0832411b6b7b0a64266a93394b98798468b9abfea88bf"}}, {_id:3780, properties:{name:"master", repository:"terraform-aws-kubernetes", hash:"41bf982ecb1816345d016f7d31957abdd158251aca13e667f7c7b6cf"}}, {_id:3793, properties:{name:"master", repository:"gke-v.1.0", hash:"73d738201e8f29b0822b37809fcde2881f011c7086f357a5381713ac"}}, {_id:3824, properties:{name:"master", repository:"website-infrastructure", hash:"1f6ed9aa8b84237cca30c157fc368741797dae99f43dac061fddfdaf"}}, {_id:3833, properties:{name:"main", repository:"terraform-modules", hash:"ba85a6fad5a943cc3d0c200060c983f8ded0e88a6ba2b2144a6c60d5"}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Branch;
UNWIND [{email:"igor@veselinovic.net", properties:{name:"Igor Veselinovic"}}, {email:"danijel.fon@gmail.com", properties:{name:"ddanijel"}}, {email:"deptno@gmail.com", properties:{name:"bglee"}}, {email:"djeche@devlen.solutions", properties:{name:"davidjeche"}}, {email:"bmullinix0913@gmail.com", properties:{name:"Bret Mullinix"}}, {email:"david.c.allen1971@gmail.com", properties:{name:"davidcallen"}}, {email:"hrabecpavel@gmail.com", properties:{name:"Pavel-Hrabec"}}, {email:"jeff@openinfrastructure.co", properties:{name:"Jeff McCune"}}, {email:"sedzsoft@gmail.com", properties:{name:"Sebuuma Daniel"}}, {email:"will.farrell@gmail.com", properties:{name:"will Farrell"}}, {email:"eduardobaitello@gmail.com", properties:{name:"eduardobaitello"}}, {email:"mike.laramie@lacework.net", properties:{name:"Mike Laramie"}}, {email:"j.tabacii@gmail.com", properties:{name:"vuvuzella"}}, {email:"", properties:{name:"Arkoprabho Chakraborti"}}, {email:"nnacir1938@hotmail.com", properties:{name:"naciriii"}}, {email:"shoekstra@schubergphilis.com", properties:{name:"Stephen Hoekstra"}}, {email:"goran.stimac@email.com", properties:{name:"Goran Stimac"}}, {email:"dghubble@gmail.com", properties:{name:"Dalton Hubble"}}, {email:"iam@defn.sh", properties:{name:"Defn Nghiem"}}, {email:"ywarezk@gmail.com", properties:{name:"ywarezk"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"andrei.petric@octoenergy.com", properties:{name:"Andrei Petric"}}, {email:"tom.king@nationalarchives.gov.uk", properties:{name:"TomJKing"}}, {email:"538456+mweiden@users.noreply.github.com", properties:{name:"Matt Weiden"}}, {email:"itzik6@gmail.com", properties:{name:"Itzik Bar-David"}}, {email:"TronBlack@gmail.com", properties:{name:"Tron"}}, {email:"jared@grokdata.tech", properties:{name:"Jared Stufft"}}, {email:"jeremy.frasier@trio.dhs.gov", properties:{name:"Jeremy Frasier"}}, {email:"sam@debruyn.dev", properties:{name:"Sam"}}, {email:"ccastill@checkpoint.com", properties:{name:"Christian Castillo"}}, {email:"andyfang.dz@gmail.com", properties:{name:"Andy Fang"}}, {email:"cheoksv@my.ibm.com", properties:{name:"Cheok Swin Voon"}}, {email:"geoffrey@gbergeret.com", properties:{name:"Geoffrey Bergeret"}}, {email:"75040720+razvan-moj@users.noreply.github.com", properties:{name:"Razvan Cosma"}}, {email:"47531708+jabielecki@users.noreply.github.com", properties:{name:"Jakub Bielecki"}}, {email:"krishnamohan.bandi@gmail.com", properties:{name:"bkmnaidu"}}, {email:"kevin.elledge@gmail.com", properties:{name:"Kevin Elledge"}}, {email:"andy.baran@hashicorp.com", properties:{name:"Andy Baran"}}, {email:"danjsievers@gmail.com", properties:{name:"Danny Sievers"}}, {email:"Ricardo.Cordeiro@gft.com", properties:{name:"Ricardo Cordeiro"}}, {email:"andre.correa@oracle.com", properties:{name:"Andre Correa"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"johannes.murmann@oracle.com", properties:{name:"Johannes Murmann"}}, {email:"matt@conwaysplace.com", properties:{name:"Matt Conway"}}, {email:"zbmowrey@gmail.com", properties:{name:"Zach Mowrey"}}, {email:"edward-robinson@cookpad.com", properties:{name:"Ed Robinson"}}, {email:"dmrz@illinois.edu", properties:{name:"David Zych"}}, {email:"realercheng@hotmail.com", properties:{name:"Peng Li"}}, {email:"david@digitalronin.com", properties:{name:"David Salgado"}}, {email:"austindavis4@gmail.com", properties:{name:"Austin Davis"}}, {email:"stuajc@gmail.com", properties:{name:"Stuart Sandine"}}, {email:"serve.laurijssen@fujifilm.com", properties:{name:"slaurijssen"}}, {email:"jwang@quantcast.com", properties:{name:"Jeff Wang"}}, {email:"91758108+khanhntd@users.noreply.github.com", properties:{name:"Khanh Nguyen"}}, {email:"pasekei@gmail.com", properties:{name:"Wushin"}}, {email:"me@naftuli.wtf", properties:{name:"Naftuli Kay"}}, {email:"43583445+dontlaugh@users.noreply.github.com", properties:{name:"Coleman McFarland"}}, {email:"jason.r.paige@gmail.com", properties:{name:"Jason Paige"}}, {email:"ayltai@gmail.com", properties:{name:"Alan Tai"}}, {email:"cedric.lamoriniere@datadoghq.com", properties:{name:"cedric lamoriniere"}}, {email:"carolguomin@gmail.com", properties:{name:"Amberoat"}}, {email:"James.Woolfenden@gmail.com", properties:{name:"James Woolfenden"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"ckilpatrick@ipipeline.com", properties:{name:"Craig Kilpatrick"}}, {email:"me@glenngillen.com", properties:{name:"Glenn Gillen"}}, {email:"soops@ucla.edu", properties:{name:"Charles Harvey"}}, {email:"rootprivileges@gmail.com", properties:{name:"Doug"}}, {email:"stuft2@byu.edu", properties:{name:"Spencer Tuft"}}, {email:"public+github@cormacbrady.info", properties:{name:"cob16"}}, {email:"pythianarora@users.noreply.github.com", properties:{name:"arora"}}, {email:"tyla.boff@outlook.com", properties:{name:"Ty"}}, {email:"alicefuzier@gmail.com", properties:{name:"caylaa"}}, {email:"reschouw@gmail.com", properties:{name:"Ryan Schouweiler"}}, {email:"tale.toul@gmail.com", properties:{name:"Tale Toul"}}, {email:"cliffano@gmail.com", properties:{name:"Cliffano Subagio"}}, {email:"armando.mag95@gmail.com", properties:{name:"Armando Magalhães"}}, {email:"karl@kornel.us", properties:{name:"A. Karl Kornel"}}, {email:"bishoybassem@gmail.com", properties:{name:"bishoybassem"}}, {email:"sdcote@gmail.com", properties:{name:"Steve Cote"}}, {email:"l.williams@derby.ac.uk", properties:{name:"Luke Williams"}}, {email:"scirner@figure.com", properties:{name:"Stephen Cirner"}}, {email:"leblancthomasjacob@gmail.com", properties:{name:"Jacob LeBlanc"}}, {email:"matt@masterpoint.io", properties:{name:"Matt Gowie"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"olliefr@users.noreply.github.com", properties:{name:"Oliver Frolovs"}}, {email:"spuranda@usc.edu", properties:{name:"Samruddhi Purandare"}}, {email:"45484472+maxjahn@users.noreply.github.com", properties:{name:"Max Jahn"}}, {email:"kei@nohguchi.com", properties:{name:"Kei Nohguchi"}}, {email:"11820237+bilbercode@users.noreply.github.com", properties:{name:"Owain Llewellyn"}}, {email:"martijn.hemeryck@gmail.com", properties:{name:"Martijn Hemeryck"}}, {email:"carlo.mazzaferro@gmail.com", properties:{name:"carlomazzaferro"}}, {email:"alan@thatscottishdatascientist.com", properties:{name:"Alan Clark"}}, {email:"chaspy@users.noreply.github.com", properties:{name:"kondo takeshi"}}, {email:"dmcgowan@iinet.net.au", properties:{name:"Douglas McGowan"}}, {email:"mads379@gmail.com", properties:{name:"Mads Hartmann"}}, {email:"drpoindexter@gmail.com", properties:{name:"David Poindexter"}}, {email:"mdecorte.decorte+github@gmail.com", properties:{name:"Michael DeCorte"}}, {email:"akaronsun@gmail.com", properties:{name:"Kai Sun"}}, {email:"davidski@deadheaven.com", properties:{name:"davidski"}}, {email:"dominic@ecs-digital.co.uk", properties:{name:"Dominic Byrne"}}, {email:"patryk.futa@gmail.com", properties:{name:"Patryk Futa"}}, {email:"graham.gilbert@airbnb.com", properties:{name:"Graham Gilbert"}}, {email:"josh@awanderingmind.com", properties:{name:"Josh"}}, {email:"tom.dooner@brigade.com", properties:{name:"Tom Dooner"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"stuart@stuartellis.name", properties:{name:"Stuart Ellis"}}, {email:"matei@gard.us", properties:{name:"Matei-Alexandru Gardus"}}, {email:"weiztech@gmail.com", properties:{name:"weiztech"}}, {email:"akshay.kumar@elliemae.com", properties:{name:"akumar5"}}, {email:"tom.godkin@engineerbetter.com", properties:{name:"Tom Godkin"}}, {email:"hello@hodl.farm", properties:{name:"hodl-farm"}}, {email:"dirk@dmllr.de", properties:{name:"Dirk Mueller"}}, {email:"thomas.shouler@gmail.com", properties:{name:"thomasshouler"}}, {email:"daniel.buch@gmail.com", properties:{name:"Dan Buch"}}, {email:"68475646+thiringai-evans@users.noreply.github.com", properties:{name:"thiringai-evans"}}, {email:"git@grier.org.uk", properties:{name:"Stephen Grier"}}, {email:"adeelbarki@gmail.com", properties:{name:"Adeel Ahmed Khan"}}, {email:"xarbulu@suse.com", properties:{name:"Xabier Arbulu Insausti"}}, {email:"stefano.torresi@suse.com", properties:{name:"Stefano Torresi"}}, {email:"dilip@tensult.com", properties:{name:"Dilip Kola"}}, {email:"ayansen89@gmail.com", properties:{name:"Ayan Sen"}}, {email:"rl@ryanl.io", properties:{name:"Ryan Liang"}}, {email:"lbenninga@schubergphilis.com", properties:{name:"lasseb"}}, {email:"jeremy.frasier@beta.dhs.gov", properties:{name:"Jeremy Frasier"}}, {email:"jdunn@chef.io", properties:{name:"Julian C. Dunn"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"23342526+Adam-D-Lewis@users.noreply.github.com", properties:{name:"Adam Lewis"}}, {email:"richard.towers@digital.cabinet-office.gov.uk", properties:{name:"Richard Towers"}}, {email:"frederic.francois@digital.cabinet-office.gov.uk", properties:{name:"Frederic Francois"}}, {email:"goesbyamezou@gmail.com", properties:{name:"amezousan"}}, {email:"26405363+matken11235@users.noreply.github.com", properties:{name:"Ken Matsui"}}, {email:"krusipo@users.noreply.github.com", properties:{name:"Jonas Odencrants"}}, {email:"chris.banks@digital.cabinet-office.gov.uk", properties:{name:"Chris Banks"}}, {email:"guilhermeoliveira2862@hotmail.com", properties:{name:"guilhermerenew"}}, {email:"rshurts@users.noreply.github.com", properties:{name:"Russell Shurts"}}, {email:"alvaro@mourino.net", properties:{name:"Alvaro Mourino"}}, {email:"petrikvandervelde@gmail.com", properties:{name:"Petrik van der Velde"}}, {email:"jkstenzel95@JKS-Zephyrus-G14.localdomain", properties:{name:"jkstenzel95"}}, {email:"jun22011982@gmail.com", properties:{name:"ntk1000"}}, {email:"okepy.naoki@gmail.com", properties:{name:"Naoki Oketani"}}, {email:"3781679+Wieschie@users.noreply.github.com", properties:{name:"Wieschie"}}, {email:"83414328+jason-drouhard@users.noreply.github.com", properties:{name:"jason-drouhard"}}, {email:"ahodges22@users.noreply.github.com", properties:{name:"Alex Hodges"}}, {email:"darthlupi@gmail.com", properties:{name:"Robert Lupinek"}}, {email:"sitos.nishi@gmail.com", properties:{name:"nisunisu"}}, {email:"casey@liatrio.com", properties:{name:"Casey Lee"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"lawrence.dine@etchuk.com", properties:{name:"Lawrence Dine"}}, {email:"nmaupu@gmail.com", properties:{name:"Nicolas Maupu"}}, {email:"nikromax@gmail.com", properties:{name:"Maxim Glotov"}}, {email:"4107447+Lsquared13@users.noreply.github.com", properties:{name:"Louis"}}, {email:"ndebuhr@protonmail.com", properties:{name:"ndebuhr"}}, {email:"Steven.burton@hotmail.co.uk", properties:{name:"steveburton4"}}, {email:"emile@madetech.com", properties:{name:"Emile Swarts"}}, {email:"kitchen@kitchen.io", properties:{name:"Jeremy Kitchen"}}, {email:"christopher.bischoff@phishme.com", properties:{name:"Christopher.Bischoff"}}, {email:"dincho@users.noreply.github.com", properties:{name:"Dincho Todorov"}}, {email:"tomakabe@microsoft.com", properties:{name:"ToruMakabe"}}, {email:"brian.alexis.nava.arreola@gmail.com", properties:{name:"Alexis Nava"}}, {email:"cmcclellan@pillartechnology.com", properties:{name:"Christopher J. McClellan"}}, {email:"20728342+jg210@users.noreply.github.com", properties:{name:"Jeremy Green"}}, {email:"guillaume.kh.alt@gmail.com", properties:{name:"Guillaume Khayat"}}, {email:"al_hardy@live.com.au", properties:{name:"Allan Hardy"}}, {email:"dan.carley@gmail.com", properties:{name:"Dan Carley"}}, {email:"claudsonweb@gmail.com", properties:{name:"Claudson Oliveira"}}, {email:"alex@alexwlchan.net", properties:{name:"Alex Chan"}}, {email:"paul.bowsher@gmail.com", properties:{name:"Paul Bowsher"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"vincent.desmet@compareasiagroup.com", properties:{name:"sco0k"}}, {email:"matthias.kay@hlag.com", properties:{name:"Matthias Kay"}}, {email:"andrew@firehawkvfx.com", properties:{name:"Andrew Graham"}}, {email:"dan@meatballhat.com", properties:{name:"Dan Buch"}}, {email:"emyasa.emmanuel.yasa@gmail.com", properties:{name:"Emmanuel Yasa"}}, {email:"jsoconno@gmail.com", properties:{name:"Justin O'Connor"}}, {email:"alexey@fpcomplete.com", properties:{name:"Alexey Kuleshevich"}}, {email:"surminus@gmail.com", properties:{name:"Laura Martin"}}, {email:"timothy.mower@gmail.com", properties:{name:"Timothy Mower"}}, {email:"dean.wilson@digital.cabinet-office.gov.uk", properties:{name:"Dean Wilson"}}, {email:"ana.fernandez@digital.cabinet-office.gov.uk", properties:{name:"Ana Fernandez"}}, {email:"kenoir@users.noreply.github.com", properties:{name:"Robert Kenny"}}, {email:"igor.ushkarev@digital.justice.gov.uk", properties:{name:"Igor"}}, {email:"ruben.arakelyan@digital.cabinet-office.gov.uk", properties:{name:"Ruben Arakelyan"}}, {email:"karl.baker@digital.cabinet-office.gov.uk", properties:{name:"Karl Baker"}}, {email:"sebastian@schmie.net", properties:{name:"Sebastian Schmieschek"}}, {email:"camille.descartes@digital.cabinet-office.gov.uk", properties:{name:"Camille Descartes"}}, {email:"info@compurama.net", properties:{name:"jonauman"}}, {email:"michael.moussa@gmail.com", properties:{name:"Michael Moussa"}}, {email:"me@issyl0.co.uk", properties:{name:"Issy Long"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"maxcurran96@gmail.com", properties:{name:"Max Curran"}}, {email:"ivan@ivanfetch.com", properties:{name:"Ivan Fetch"}}, {email:"mevansam@gmail.com", properties:{name:"Mevan Samaratunga"}}, {email:"tamborskiartur@gmail.com", properties:{name:"Artur Tamborski"}}, {email:"masa@hashicorp.com", properties:{name:"masa3"}}, {email:"exequiel.barrirero@binbash.com.ar", properties:{name:"exequielrafaela"}}, {email:"patrick.heard@cds-snc.ca", properties:{name:"Pat Heard"}}, {email:"dinophile@users.noreply.github.com", properties:{name:"Cheyenne"}}, {email:"stasiekgruz@gmail.com", properties:{name:"Kakaranish"}}, {email:"fahd.rahman@zones.com", properties:{name:"Fahd Rahman"}}, {email:"gary.bland@coxautoinc.com", properties:{name:"Gary Bland"}}, {email:"stephen.badger@vitalbeats.com", properties:{name:"Stephen Badger"}}, {email:"eladidan@users.noreply.github.com", properties:{name:"Idan Elad"}}, {email:"38356409+diego-ojeda-binbash@users.noreply.github.com", properties:{name:"Diego OJeda (BinBash)"}}, {email:"bhavikk85@gmail.com", properties:{name:"Bhavik Kumar"}}, {email:"royceremer@gmail.com", properties:{name:"Royce Remer"}}, {email:"lgallard@gmail.com", properties:{name:"Luis M. Gallardo D"}}, {email:"elliotpryde@hotmail.co.uk", properties:{name:"Elliot Pryde"}}, {email:"elliot.pryde@elliotpryde.com", properties:{name:"Elliot Pryde"}}, {email:"dexterchan@gmail.com", properties:{name:"dexterchan"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"ssfsx17@gmail.com", properties:{name:"ssfsx17"}}, {email:"gregory.szorc@gmail.com", properties:{name:"Gregory Szorc"}}, {email:"kazuki@6715.jp", properties:{name:"Kazuki Sawada"}}, {email:"jonrau@amazon.com", properties:{name:"Jonathan Rau"}}, {email:"5084015+sawyers@users.noreply.github.com", properties:{name:"Michael"}}, {email:"97614949+tbirk-bhs@users.noreply.github.com", properties:{name:"tbirk-bhs"}}, {email:"martin.fox@kainos.com", properties:{name:"Marty Fox"}}, {email:"david.salgado@digital.justice.gov.uk", properties:{name:"David Salgado"}}, {email:"gyoung@gitlab.com", properties:{name:"Grant Young"}}, {email:"bratikha@gmail.com", properties:{name:"Evgeniy Polyarush"}}, {email:"gerald@geraldwu.com", properties:{name:"98WuG"}}, {email:"robert@meinit.nl", properties:{name:"Robert de Bock"}}, {email:"darren.oakley@digital.justice.gov.uk", properties:{name:"Darren Oakley"}}, {email:"major@redhat.com", properties:{name:"Major Hayden"}}, {email:"tomasz.setkowski@thoughtworks.com", properties:{name:"Tomasz Setkowski"}}, {email:"senai.asfaha@zoi.de", properties:{name:"Senai Asfaha"}}, {email:"36337836+EOjeah@users.noreply.github.com", properties:{name:"Emmanuel Ojeah"}}, {email:"gudlyf@realistek.com", properties:{name:"Keith McDuffee"}}, {email:"61367130+dandill-eng@users.noreply.github.com", properties:{name:"dandill-eng"}}, {email:"patrick.heard@canada.ca", properties:{name:"Pat Heard"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"sebastian@nephosolutions.com", properties:{name:"Sebastian Trebitz"}}, {email:"charles.oliveira@linaro.org", properties:{name:"Charles Oliveira"}}, {email:"be.smaniotto@gmail.com", properties:{name:"Bernardo Smaniotto"}}, {email:"eeuc40@hotmail.com", properties:{name:"Richard Hughes"}}, {email:"kent@hashicorp.com", properties:{name:"Kent 'picat' Gruber"}}, {email:"mikael@kalms.org", properties:{name:"Mikael Kalms"}}, {email:"ramiz.polic@hotmail.com", properties:{name:"Ramiz Polić"}}, {email:"me@robgmills.com", properties:{name:"Rob Mills"}}, {email:"me@marceloboeira.com", properties:{name:"Marcelo Boeira"}}, {email:"arnehaagensen@gmail.com", properties:{name:"arnhaa"}}, {email:"seanmarman@gmail.com", properties:{name:"Sean"}}, {email:"james.woolfenden@gmail.com", properties:{name:"James Woolfenden"}}, {email:"dylan@dylanmtaylor.com", properties:{name:"Dylan Taylor"}}, {email:"3924323+jblackburn22@users.noreply.github.com", properties:{name:"Jessica Blackburn"}}, {email:"zeeman@zeeman.de", properties:{name:"Sebastian J"}}, {email:"jon.shaw@jassoft.co.uk", properties:{name:"jonnyshaw89"}}, {email:"jferris@thoughtbot.com", properties:{name:"Joe Ferris"}}, {email:"65610370+cloud-geek@users.noreply.github.com", properties:{name:"Cloud geek"}}, {email:"holger.dunkel@gmail.com", properties:{name:"Holger Dunkel"}}, {email:"abhi@opszero.com", properties:{name:"Abhi Yerra"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"rui.deng@teliacompany.com", properties:{name:"Rui Deng"}}, {email:"kmishra9@berkeley.edu", properties:{name:"Kunal Mishra"}}, {email:"tom.larkworthy@futurice.com", properties:{name:"Tom Larkworthy"}}, {email:"bill.baumgartner@gmail.com", properties:{name:"Bill Baumgartner"}}, {email:"4911304+dgorbov@users.noreply.github.com", properties:{name:"Dmitry Gorbov"}}, {email:"me@reidburke.com", properties:{name:"Reid Burke"}}, {email:"andrew.kowpak@gmail.com", properties:{name:"Pumbaa's Dad"}}, {email:"the.chun.wu@gmail.com", properties:{name:"Chun Wu"}}, {email:"piotr.grzeskowiak@digital.justice.gov.uk", properties:{name:"Piotr Grzeskowiak"}}, {email:"sam.towne2@gmail.com", properties:{name:"Sam Towne"}}, {email:"46016124+beaulabs@users.noreply.github.com", properties:{name:"Beau Labs"}}, {email:"jenkins-x@googlegroups.com", properties:{name:"jenkins-x-bot"}}, {email:"matt@harmelodic.com", properties:{name:"Harmelodic"}}, {email:"damien.duportal@gmail.com", properties:{name:"Damien Duportal"}}, {email:"rsokolkov@gmail.com", properties:{name:"Roman Sokolkov"}}, {email:"jetfire6@gmail.com", properties:{name:"Aliaksei Maiseyeu"}}, {email:"bradculberson@gmail.com", properties:{name:"Brad Culberson"}}, {email:"aniruddhamaru@gmail.com", properties:{name:"Aniruddha Maru"}}, {email:"26870601+tamirkamara@users.noreply.github.com", properties:{name:"Tamir Kamara"}}, {email:"hankelucas@gmail.com", properties:{name:"Lucas Hanke"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"mwilkinson@imo-online.com", properties:{name:"Mike Wilkinson"}}, {email:"nigercode@gmail.com", properties:{name:"Mudathir Lawal"}}, {email:"trivbuit@gmail.com", properties:{name:"Tri Van BUI"}}, {email:"adrian.neatu@outlook.com", properties:{name:"Adrian Neatu"}}, {email:"dwkerwin@gmail.com", properties:{name:"Doug Kerwin"}}, {email:"lewis@gmail.com", properties:{name:"Lewis Kirkaldie"}}, {email:"kmalkin@hotmail.co.uk", properties:{name:"kmalkin"}}, {email:"kaushik.c02@gmail.com", properties:{name:"Kaushik Chandrashekar"}}, {email:"sjuul@outlook.com", properties:{name:"Sjuul Janssen"}}, {email:"youngook.kim@gmail.com", properties:{name:"youngookkim"}}, {email:"vijay@kubermatic.com", properties:{name:"Vijay Dharap"}}, {email:"Nigel.Leck@dta.gov.au", properties:{name:"Nigel Leck"}}, {email:"github@espinoza.dev", properties:{name:"Felipe Espinoza"}}, {email:"steven.bogacz@gmail.com", properties:{name:"sbogacz"}}, {email:"nick@antmounds.com", properties:{name:"Nick"}}, {email:"toby.lornewelch-richards@digital.cabinet-office.gov.uk", properties:{name:"Toby Lorne"}}, {email:"josue.caraballo@gmail.com", properties:{name:"v3nd3774"}}, {email:"john.watts@digital.cabinet-office.gov.uk", properties:{name:"John Watts"}}, {email:"mbercx@gmail.com", properties:{name:"Marnik Bercx"}}, {email:"blinklgui@gmail.com", properties:{name:"stealthHat"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"ltkhoa2711@gmail.com", properties:{name:"Khoa Le"}}, {email:"yuvipanda@gmail.com", properties:{name:"YuviPanda"}}, {email:"poldi@thatswing.de", properties:{name:"Bernd Haberstumpf"}}, {email:"43017340+smerck@users.noreply.github.com", properties:{name:"Smerc"}}, {email:"mintak21@gmail.com", properties:{name:"T.Yoshikawa"}}, {email:"gnarea@users.noreply.github.com", properties:{name:"Gus Narea"}}, {email:"24284972+sudomateo@users.noreply.github.com", properties:{name:"Matthew Sanabria"}}, {email:"dave@analysisbydesign.co.uk", properties:{name:"Dave Rix"}}, {email:"rajesh.nitc@gmail.com", properties:{name:"rajesh"}}, {email:"robinbryce@gmail.com", properties:{name:"Robin Bryce"}}, {email:"kengoscal@gmail.com", properties:{name:"Kengo Suzuki"}}, {email:"tom@tom.net.nz", properties:{name:"Tom Mitchell"}}, {email:"austin@hashicorp.com", properties:{name:"Austin Workman"}}, {email:"324548+dmikalova@users.noreply.github.com", properties:{name:"David Mikalova"}}, {email:"ajarombek95@gmail.com", properties:{name:"ajarombek"}}, {email:"cosmin@coremaker.io", properties:{name:"Cosmin Briscaru"}}, {email:"ben.fortuna@team.telstra.com", properties:{name:"Ben Fortuna"}}, {email:"sworisbreathing@gmail.com", properties:{name:"Steven Swor"}}, {email:"me@julie.io", properties:{name:"Julie Ng"}}, {email:"matt@cowger.us", properties:{name:"Matt Cowger"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"markus.katharina.brechtel@thengo.net", properties:{name:"Markus Katharina Brechtel"}}, {email:"ninth.nails@gmail.com", properties:{name:"ninthnails"}}, {email:"tom.mclaughlin@threatstack.com", properties:{name:"Tom McLaughlin"}}, {email:"skehlet@nextgen.com", properties:{name:"Steve Kehlet"}}, {email:"3304436+ximon18@users.noreply.github.com", properties:{name:"Ximon Eighteen"}}, {email:"lukaskienast0@gmail.com", properties:{name:"Kreidl"}}, {email:"julian@simioni.org", properties:{name:"Julian Simioni"}}, {email:"serguimant@gmail.com", properties:{name:"Sergio Guillen"}}, {email:"thomas@potenza.me", properties:{name:"TJ Potenza"}}, {email:"me@just1not2.org", properties:{name:"Justin Béra"}}, {email:"kiara.grouwstra@gmail.com", properties:{name:"Kiara Grouwstra"}}, {email:"roysjosh@gmail.com", properties:{name:"Joshua Roys"}}, {email:"46541339+UriKatsirPrivate@users.noreply.github.com", properties:{name:"Uri Katsir"}}, {email:"al@fueledbylemons.com", properties:{name:"Alexey Bezhan"}}, {email:"egottesman@crystald.com", properties:{name:"Eric Gottesman"}}, {email:"jjerezro@redhat.com", properties:{name:"Jose Ignacio Jerez Rodriguez"}}, {email:"amandak@ciandt.com", properties:{name:"Amanda Karina Lopes de Oliveira"}}, {email:"sjones-sot@users.noreply.github.com", properties:{name:"Steve Jones"}}, {email:"maspin@unilink.com", properties:{name:"marcus.aspin"}}, {email:"m@javier.io", properties:{name:"Javier López"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{email:"yulei.liu@gmail.com", properties:{name:"Yulei Liu"}}, {email:"emile.swarts123@gmail.com", properties:{name:"Emile Swarts"}}, {email:"harshesh.shah@icloud.com", properties:{name:"HarsheshShah08"}}, {email:"stafot@gmail.com", properties:{name:"Stavros Foteinopoulos"}}, {email:"developer@trajano.net", properties:{name:"Archimedes Trajano"}}, {email:"tobias.ecklebe@outlook.de", properties:{name:"Tobias Ecklebe"}}, {email:"tdanzig@cisco.com", properties:{name:"Tal Danzig"}}, {email:"jacob@clevyr.com", properties:{name:"Jacob McSwain"}}] AS row
CREATE (n:Developer{email: row.email}) SET n += row.properties;
UNWIND [{name:"bespin", properties:{}}, {name:"mp-infrastructure", properties:{}}, {name:"terraform-aws-modules", properties:{}}, {name:"prometheus-aws-configuration-beta", properties:{}}, {name:"terraform-for-beginners", properties:{}}, {name:"parkrunpointsleague", properties:{}}, {name:"Azure-Terraform-Budget", properties:{}}, {name:"terraform-google-vault", properties:{}}, {name:"vof-deployment-scripts", properties:{}}, {name:"terraform-logs-module", properties:{}}, {name:"terraform-eks", properties:{}}, {name:"terraform-gcp-audit-log", properties:{}}, {name:"jt-aws-serverless-app", properties:{}}, {name:"TerraformTutorial", properties:{}}, {name:"terraform-ec2-gitlab-runner", properties:{}}, {name:"terraform-aws-mcaf-matillion", properties:{}}, {name:"terralab", properties:{}}, {name:"terraform-azure-kubernetes", properties:{}}, {name:"fogg-env", properties:{}}, {name:"academeez-iac", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"clouduru-infra", properties:{}}, {name:"tdr-grafana", properties:{}}, {name:"dcp-monitoring", properties:{}}, {name:"parking-status", properties:{}}, {name:"seed-node-fallback-domain-config", properties:{}}, {name:"grok-airflow", properties:{}}, {name:"cool-sharedservices-nessus", properties:{}}, {name:"terraform-module-azure-datalake", properties:{}}, {name:"waapdemo", properties:{}}, {name:"aws-crawler", properties:{}}, {name:"iks_vpc_lab", properties:{}}, {name:"micro-service-as-code", properties:{}}, {name:"cloud-platform-terraform-monitoring", properties:{}}, {name:"terraform-azurerm-vmseries-modules", properties:{}}, {name:"s3-bucket-versioning", properties:{}}, {name:"idkfa", properties:{}}, {name:"terraform-modules", properties:{}}, {name:"GCP-IOT-BigDataInfra", properties:{}}, {name:"gcp-project", properties:{}}, {name:"rjmco-github-tests", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"terraform-oci-cis-landing-zone", properties:{}}, {name:"ops", properties:{}}, {name:"vulnerable-instances", properties:{}}, {name:"cloud-admin", properties:{}}, {name:"terraform-aws-eks", properties:{}}, {name:"aws-enterprise-vpc", properties:{}}, {name:"azure", properties:{}}, {name:"digitalocean-build-machine", properties:{}}, {name:"gifbot", properties:{}}, {name:"lighthouse-lambda-parallel", properties:{}}, {name:"tform_azure", properties:{}}, {name:"infrastructure", properties:{}}, {name:"aws-otel-test-framework", properties:{}}, {name:"ttrpg-tools", properties:{}}, {name:"titan", properties:{}}, {name:"terraform-covidapihub", properties:{}}, {name:"cnp-module-api-mgmt", properties:{}}, {name:"hknews-infrastructure", properties:{}}, {name:"terraform-aws-ecs-datadog-agent", properties:{}}, {name:"didactic-octo-eureka", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"terraform-aws-workspaces", properties:{}}, {name:"github-actions", properties:{}}, {name:"terraform-demo-cost-estimation-azure", properties:{}}, {name:"azureLearning", properties:{}}, {name:"terragrunt-aws-modules", properties:{}}, {name:"terraform-aws-rds", properties:{}}, {name:"aws_static_website", properties:{}}, {name:"proj-azure", properties:{}}, {name:"typhoon", properties:{}}, {name:"tf-az-kubernetes", properties:{}}, {name:"loris-infrastructure", properties:{}}, {name:"terraform-homelab", properties:{}}, {name:"Harbor", properties:{}}, {name:"feedpaper", properties:{}}, {name:"terraform-gke-drone", properties:{}}, {name:"terraform-aws", properties:{}}, {name:"aws-jenkins", properties:{}}, {name:"tf-vpc-module", properties:{}}, {name:"cloudsql", properties:{}}, {name:"deepfence-threatmapper-lab", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"terraform-azurerm-mariadb", properties:{}}, {name:"provenance-infra", properties:{}}, {name:"PortfolioTF", properties:{}}, {name:"terraform-aws-nuke-bomber", properties:{}}, {name:"aws-terraform-cloud1", properties:{}}, {name:"apiary-data-lake", properties:{}}, {name:"terraform-oci-azure-connect", properties:{}}, {name:"do-in-action", properties:{}}, {name:"tf_telecom", properties:{}}, {name:"iac", properties:{}}, {name:"webtwo-infra", properties:{}}, {name:"terraform-lambda", properties:{}}, {name:"terraform-alibaba-isucon8", properties:{}}, {name:"minifoundations", properties:{}}, {name:"cloud.mads-hartmann.com", properties:{}}, {name:"graph-ql-cloud-demo", properties:{}}, {name:"TerraForm", properties:{}}, {name:"kubeadm_aws", properties:{}}, {name:"tf-public_subnet", properties:{}}, {name:"terraform", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"tf_eks_simpleweb", properties:{}}, {name:"terraform-repo", properties:{}}, {name:"fogg-tf", properties:{}}, {name:"elasticsearch-the-hard-way", properties:{}}, {name:"flynn", properties:{}}, {name:"stuartellis-org-tf-modules", properties:{}}, {name:"tech-stack", properties:{}}, {name:"gcloud-python-cost-control", properties:{}}, {name:"dockerized-jenkins-master", properties:{}}, {name:"kf-infra", properties:{}}, {name:"tezos-auxiliary-cluster", properties:{}}, {name:"caps-automation", properties:{}}, {name:"jabujabu", properties:{}}, {name:"terraform-stuff", properties:{}}, {name:"cloud_scripts", properties:{}}, {name:"my-infra", properties:{}}, {name:"aws-with-terraform-and-ansible", properties:{}}, {name:"ha-sap-terraform-deployments", properties:{}}, {name:"EKS-Terraform", properties:{}}, {name:"hackstack-local", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"ryhino-public", properties:{}}, {name:"qhub", properties:{}}, {name:"terraform-aws-mcaf-vpc", properties:{}}, {name:"cyhy_amis", properties:{}}, {name:"terraform-chefserver", properties:{}}, {name:"terraform-google-gitlab-runner", properties:{}}, {name:"govuk-infrastructure", properties:{}}, {name:"serverless-blog-in-aws", properties:{}}, {name:"lokomotive-kubernetes", properties:{}}, {name:"poac-infrastructure", properties:{}}, {name:"terraform-drone", properties:{}}, {name:"infra-cost", properties:{}}, {name:"gke-cd-with-spinnaker", properties:{}}, {name:"terraform-workshop", properties:{}}, {name:"infrastructure.azure.core.network.hub", properties:{}}, {name:"jks.gameservers", properties:{}}, {name:"aws-terraform-template", properties:{}}, {name:"terraform-aws-vmseries-modules", properties:{}}, {name:"aws-tf", properties:{}}, {name:"terraform-azurerm-sql", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"personal-infra", properties:{}}, {name:"terraform-aws-single-account-starter", properties:{}}, {name:"immdom-terraform", properties:{}}, {name:"rh-ex407", properties:{}}, {name:"AWS_Blue_Green_Deployment", properties:{}}, {name:"lead-terraform-Dashboard", properties:{}}, {name:"Etch.OrchardCore.SiteBoilerplate", properties:{}}, {name:"auto-gcp", properties:{}}, {name:"aws-eks-base", properties:{}}, {name:"terraform-aws-quorum-cluster", properties:{}}, {name:"fogg", properties:{}}, {name:"cloud-native-workstation", properties:{}}, {name:"dataworks-aws-data-egress", properties:{}}, {name:"tezos-on-gke", properties:{}}, {name:"govwifi-terraform", properties:{}}, {name:"personal-terraform", properties:{}}, {name:"tf-terraform-management", properties:{}}, {name:"terraform-aws-devnet", properties:{}}, {name:"aks-anti-dry-iac", properties:{}}, {name:"terraform_modules", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"common", properties:{}}, {name:"aws-experiments", properties:{}}, {name:"wg-terraform-template", properties:{}}, {name:"terraform-core-aws-alhardynet-networking", properties:{}}, {name:"paas-alpha-tsuru-terraform", properties:{}}, {name:"from-dev-to-ops", properties:{}}, {name:"archivematica-infrastructure", properties:{}}, {name:"dc-terraform-provisioning", properties:{}}, {name:"iaac", properties:{}}, {name:"terraform-aws-bastion-host-ssm", properties:{}}, {name:"firehawk-prototype-deprecated", properties:{}}, {name:"terraform-config", properties:{}}, {name:"hashicorp-consul-setup", properties:{}}, {name:"aws-terraform-remote-state-infrastructure", properties:{}}, {name:"terraform-aws-foundation", properties:{}}, {name:"govuk-aws", properties:{}}, {name:"platform-infrastructure", properties:{}}, {name:"cloud-platform-environments", properties:{}}, {name:"terraform-aws-lex-lambda", properties:{}}, {name:"govuk-terraform-provisioning", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"aws-terraform-ec2_autorecovery", properties:{}}, {name:"terraform-infrastructure", properties:{}}, {name:"stack", properties:{}}, {name:"cloud-inceptor", properties:{}}, {name:"Infrastructure", properties:{}}, {name:"hashicat", properties:{}}, {name:"le-tf-infra-aws", properties:{}}, {name:"cloud-based-sensor", properties:{}}, {name:"eszop-infra", properties:{}}, {name:"terraform-google-multinic", properties:{}}, {name:"asz-dbz", properties:{}}, {name:"terraform-example-patterns", properties:{}}, {name:"terraform-eks-cluster", properties:{}}, {name:"speedyhead.xyz-terraform", properties:{}}, {name:"cloud-platform-terraform-elasticache-cluster", properties:{}}, {name:"terraform-master", properties:{}}, {name:"terraform-minecraft", properties:{}}, {name:"personal-infrastructure", properties:{}}, {name:"Terraform_Webserver", properties:{}}, {name:"fantasy-manager", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"devservices-aws", properties:{}}, {name:"terraform-oci-azure-adb", properties:{}}, {name:"terraform-aws-glue-crawler", properties:{}}, {name:"clip-stitcher", properties:{}}, {name:"kiritan.com", properties:{}}, {name:"Sample-Security-service-Terraform", properties:{}}, {name:"ec2-dev-env", properties:{}}, {name:"tf-azure-example", properties:{}}, {name:"ceu-terraform", properties:{}}, {name:"cloud-platform-infrastructure", properties:{}}, {name:"goobi-infrastructure", properties:{}}, {name:"gitlab-environment-toolkit", properties:{}}, {name:"firehawk-main", properties:{}}, {name:"terraform-gcp-instance", properties:{}}, {name:"weather_cache_infrastructure", properties:{}}, {name:"homelab-iac", properties:{}}, {name:"terraform-aws-vault", properties:{}}, {name:"imagebuilder-terraform", properties:{}}, {name:"prm-mhs-infra", properties:{}}, {name:"terraform-aws-account", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"terraform-google-kubernetes", properties:{}}, {name:"route53-ps", properties:{}}, {name:"OVPN---TF", properties:{}}, {name:"terraform-cantrill-aws-associate", properties:{}}, {name:"terraform-google-gcp-project", properties:{}}, {name:"qa-reports.linaro.org", properties:{}}, {name:"django-drf-boilerplate", properties:{}}, {name:"infra-modules", properties:{}}, {name:"terraform-google-nomad", properties:{}}, {name:"UE-Jenkins-BuildSystem", properties:{}}, {name:"demblock-pipeline", properties:{}}, {name:"jumpbox", properties:{}}, {name:"certifications", properties:{}}, {name:"terraform-aws-cost-alarm", properties:{}}, {name:"a_new_hope", properties:{}}, {name:"terraform-azurerm-windowsscaleset", properties:{}}, {name:"dylanmtaylor-terraform-aws", properties:{}}, {name:"terraform-azurerm-mysql", properties:{}}, {name:"terraform-aws-alb", properties:{}}, {name:"Gefjun", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"jjffggpp", properties:{}}, {name:"eq-terraform", properties:{}}, {name:"flightdeck", properties:{}}, {name:"AWS-Cloud-Architect-master", properties:{}}, {name:"infra-aws-code", properties:{}}, {name:"terraform-aws-kubespot", properties:{}}, {name:"terraform-aws-terraform-init", properties:{}}, {name:"PL2-AWS-Setup", properties:{}}, {name:"freeipa-server-tf-module", properties:{}}, {name:"testrepo", properties:{}}, {name:"Translator-TM-Provider-Infrastructure-Modules", properties:{}}, {name:"terraform-s3-backend-setup", properties:{}}, {name:"live-infrastructure", properties:{}}, {name:"aws-account", properties:{}}, {name:"terraform_three_instances", properties:{}}, {name:"modernisation-platform", properties:{}}, {name:"BasketballDrillBot", properties:{}}, {name:"terraform_aws_ec2_instance", properties:{}}, {name:"terraform-aws-eks-jx", properties:{}}, {name:"automation-infrastructure", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"eq-terraform-dynamodb", properties:{}}, {name:"aws", properties:{}}, {name:"giantnetes-terraform", properties:{}}, {name:"terraform-module-aws-core", properties:{}}, {name:"buildkite-infrastructure", properties:{}}, {name:"btc2snowflake", properties:{}}, {name:"terraform-google-hedwig-subscription", properties:{}}, {name:"mts-trial-deployment-config", properties:{}}, {name:"eutambem-serverless", properties:{}}, {name:"SignalWs", properties:{}}, {name:"azure-terraform-packer-iac", properties:{}}, {name:"Scalr-Demo", properties:{}}, {name:"blog-terraform", properties:{}}, {name:"terraform-digitalocean-kubernetes", properties:{}}, {name:"atmos-recipes", properties:{}}, {name:"forgotpw-infrastructure", properties:{}}, {name:"terraform-cinegy-modules", properties:{}}, {name:"tf-aws-pi-hole", properties:{}}, {name:"expertalk-2018-ecs-workshop", properties:{}}, {name:"terraform-datadog-costs", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"terraform-aws-sagemaker", properties:{}}, {name:"workflow-testing", properties:{}}, {name:"sts-network", properties:{}}, {name:"terraform-k8s", properties:{}}, {name:"modernisation-platform-environments", properties:{}}, {name:"terraform-aws-state-backend", properties:{}}, {name:"fastly-demo", properties:{}}, {name:"terraform-aws-codebuild-container", properties:{}}, {name:"verify-infrastructure", properties:{}}, {name:"AWSEMRInferencePipelinePOC", properties:{}}, {name:"aiidalab-k8s", properties:{}}, {name:"k8s-terraform", properties:{}}, {name:"terraform-digitalocean", properties:{}}, {name:"terraform-deploy", properties:{}}, {name:"terraform-aws-codepipeline", properties:{}}, {name:"chat-app", properties:{}}, {name:"blog", properties:{}}, {name:"terraform-old", properties:{}}, {name:"cloud-gateway", properties:{}}, {name:"terraform-azurerm-terraform-enterprise", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"abd-cloud", properties:{}}, {name:"gcp-foundation", properties:{}}, {name:"iona", properties:{}}, {name:"cool-assessment-terraform", properties:{}}, {name:"secure-brigade-terraform", properties:{}}, {name:"rocketchat-tf", properties:{}}, {name:"musical-spork", properties:{}}, {name:"terraform-tekton-pipelines", properties:{}}, {name:"global-aws-infrastructure", properties:{}}, {name:"terraform-google-nucleus", properties:{}}, {name:"TerraformOpenVPN", properties:{}}, {name:"bedrock", properties:{}}, {name:"splunk-refactor-poc", properties:{}}, {name:"devops-governance", properties:{}}, {name:"terraform-scaleio", properties:{}}, {name:"covid-videoplattform", properties:{}}, {name:"terraform-aws-camellia", properties:{}}, {name:"terraform-example-aws-vpc", properties:{}}, {name:"aws-batch-processing", properties:{}}, {name:"rpki-deploy", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"terraform_setups", properties:{}}, {name:"terraform-elasticsearch", properties:{}}, {name:"the-dummy-tfaws", properties:{}}, {name:"kubernetes-modules", properties:{}}, {name:"jitsi-meet-torture-rocket", properties:{}}, {name:"terraform-aws-cognito", properties:{}}, {name:"sentia-data-engineering-assignment", properties:{}}, {name:"terraform-unifi", properties:{}}, {name:"gcp-landing-zone", properties:{}}, {name:"digitalmarketplace-aws", properties:{}}, {name:"jamulus-builder", properties:{}}, {name:"SingleNodeOpenshiftOnLibvirt", properties:{}}, {name:"terraform-example-foundation", properties:{}}, {name:"terraform-aws-config", properties:{}}, {name:"terraform-aws-mysql-cluster", properties:{}}, {name:"hmpps-delius-core-terraform", properties:{}}, {name:"terraforms", properties:{}}, {name:"gcp-playground", properties:{}}, {name:"network-access-control-infrastructure", properties:{}}, {name:"haystack", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{name:"HS-Terraform", properties:{}}, {name:"mattermost-cloud-database-factory", properties:{}}, {name:"terraform-s3-backend", properties:{}}, {name:"IaC-Templates", properties:{}}, {name:"nginx-multistream", properties:{}}, {name:"terraform-aws-kubernetes", properties:{}}, {name:"gke-v.1.0", properties:{}}, {name:"website-infrastructure", properties:{}}] AS row
CREATE (n:Repository{name: row.name}) SET n += row.properties;
UNWIND [{hash:"cff3747c70722eba940317dec58dc9c22b3b4939", properties:{date:"2019-12-30 20:18:24", author:"Igor Veselinovic", is_merge:false, message:"Add Terraform config for VPC and autoscaling group\n\nThe VPC has a NAT that allows the EC2 instances in the private subnets\nto be able to connect to the ECS cluster. I think the NAT gateway will\ncost some small amount of money per hour.\n\nThe autoscaling group spawns the EC2 instance(s) that will connect to\nthe ECS cluster and will eventually run the actual services/tasks."}}, {hash:"5afcf39a85fc972eb9bb3486e5dc8aeeba77d3ee", properties:{date:"2020-04-22 22:30:44", author:"ddanijel", is_merge:false, message:"removing the vpn since it is too expensive and enabling cluster api public access"}}, {hash:"49f447bdbb3cf23499e8194e78f852ea1e256d3a", properties:{date:"2019-09-10 22:22:23", author:"bglee", is_merge:false, message:"fix: dynamodb billing mode"}}, {hash:"0edcb1dbd7337eab4155be2f2a7683a77cc3cc6d", properties:{date:"2018-08-15 11:17:51", author:"davidjeche", is_merge:false, message:"Remove multi nat-gateways in dev to save on cost\n\nThe dev enviroment currently creates three of every network component  based\non the configuration in the vpc module. I have added a small change which will\nprevent the dev enviroment from creating a nat gateway for each AZ. If the\ninstance count is 3 in dev the single nat gateway will still be enabled. This\nis fine since the dev enviroment is not HA enviroment. There will be extra routes\ncreated to route traffic through the AZ which has all the active nat-gateway.\n\nThe current production enviroment currently supports an gateway per AZ. This is for HA\npurposes."}}, {hash:"3a3e9f6d19da0730f2b077b0c160a467102f5666", properties:{date:"2020-06-13 05:41:05", author:"Bret Mullinix", is_merge:false, message:"updated the image id to use, the other one was costing too much."}}, {hash:"21627e4057b3446b511e4369ca366e297cfc87eb", properties:{date:"2022-04-04 13:51:58", author:"davidcallen", is_merge:false, message:"Add support for backbone account to be used standalone (no need for costly TGW)."}}, {hash:"4759aa86a84ee099d6ce3f3987520a5b6cd1ffd3", properties:{date:"2022-04-02 08:31:46", author:"Pavel-Hrabec", is_merge:false, message:"edited variable and main.tf to immediately alert when significant cost arise"}}, {hash:"1d0b5db7f310dc6a47af3130a97e5373d9cdaddf", properties:{date:"2020-11-16 12:22:51", dmm_unit_complexity:1.0, author:"Jeff McCune", is_merge:false, dmm_unit_interfacing:0.6938775510204082, message:"feat: enable auto-healing, update to Debian 10 (#119)\n\nThis patch adds an auto-healing policy to automatically re-create the\r\nvault cluster instance if the vault server stops.  One of the nodes in\r\nthe instance group is active as per [Vault HA][ha].  The other nodes are\r\npassive and forward requests to the active node.  Two different health\r\nchecks are used because passive nodes return non-200 status codes by\r\ndefault.\r\n\r\nIn addition, this patch:\r\n\r\n * Update Vault to 1.6.0 by default\r\n * Update image to Debian 10 by default\r\n * Defaults to e2-standard-2 instance types, which are less expensive\r\n   and more performant than n1-standard-1.\r\n * Improves startup (and auto-heal recovery) time by starting the vault\r\n   service as quickly as possible in the startup-script.\r\n\r\n[ha]: https://www.vaultproject.io/docs/concepts/ha.html", dmm_unit_size:0.9795918367346939}}, {hash:"c6b2c1bee4c1e53e87fd3d94fc8c07cf64342d7b", properties:{date:"2017-12-01 08:10:58", author:"Sebuuma Daniel", is_merge:false, message:"Updates machine type for jumpbox so it uses one with smaller specs to reduce the cost"}}, {hash:"545b0bb763a4dbaab6b262c4b9642767e2434d07", properties:{date:"2018-12-30 16:37:44", author:"will Farrell", is_merge:false, message:"docs: costing"}}, {hash:"c11fca6440a5000648f690e6282778fb4ec73309", properties:{date:"2021-02-26 09:56:39", author:"eduardobaitello", is_merge:false, message:"Small volume size to reduce costs per hour"}}, {hash:"324c8a499794f6a789d583c4c460af9475171215", properties:{date:"2022-03-28 13:42:35", author:"Mike Laramie", is_merge:false, message:"feat: add folder exclusions (#49)\n\n**Breaking Changes**\r\n\r\n* Update Google provider version to 4.4.0 minimum\r\n* Change k8s_filter to true by default - This will result in cost savings for our customers since we don't currently use the GKE logs.  When k8s audit logging reaches GKE, we can re-evaluate the default setting.\r\n* Change ubla to true by default - This will put our storage bucket in compliance with CIS Benchmark 5.2\r\n* Remove the bucket logging configuration options - This check was removed from the CIS benchmarks in 1.1 since the preferred method is to use Cloud Audit Logging.  Our CIS 1.2 report reflects this change, and we should be removing the 1.0 reports from the system \"soon\""}}, {hash:"53d023dc22daa7b4181b8ea51ce72c6b857aa553", properties:{date:"2022-02-24 22:06:03", author:"vuvuzella", is_merge:false, message:"removed codebuild because it's hella expensive\nadded .circleci to use circleci for ci instead"}}, {hash:"ba317d7e402f014589e230fad8c7384016211ba2", properties:{date:"2021-04-26 23:02:00", author:"Arkoprabho Chakraborti", is_merge:false, message:"MODIFY: Change billing_mode to PAY_PER_REQUEST"}}, {hash:"f8af6bc22bd3d827566e7e65deb63c13cdaf6031", properties:{date:"2020-06-29 16:52:01", author:"naciriii", is_merge:false, message:"Use aws spot instances\n\n- Reduce cost and use persistent spot instances requests to get cheaper instances/hour\n- Expose module output to root output"}}, {hash:"3b0e2fe42d660664c49d54ae8706de004a9b4176", properties:{date:"2019-12-16 11:08:29", author:"Stephen Hoekstra", is_merge:false, message:"Add opt-in variables\n\nInstead of building a full deployment it feels better to explcitly\nenable certain functionality, a) from an deployment POV and from\nadditional cost awareness.\n\nFollowing are now opt-in:\n\n* RDS instance\n* ALB\n\nSigned-off-by: Stephen Hoekstra <shoekstra@schubergphilis.com>"}}, {hash:"7696353632379532ab7006f9eda39fbf14e25532", properties:{date:"2022-04-23 23:13:03", author:"Goran Stimac", is_merge:false, message:"fix: cheap AKS with basic sku lb"}}, {hash:"633eb938742a43be09612b944c29aaaf70dac119", properties:{date:"2019-09-09 22:24:10", author:"Dalton Hubble", is_merge:false, message:"Change Azure default controller_type and worker_type\n\n* Change default controller_type to Standard_B2s. A B2s is cheaper\nby $17/month and provides 2 vCPU, 4GB RAM (vs 1 vCPU, 3.5GB RAM)\n* Change default worker_type to Standard_DS1_v2. F1 was the previous\ngeneration. The DS1_v2 is newer, similar cost, more memory, and still\nsupports Low Priority mode, if desired"}}, {hash:"7de45302cfa8a7dca88ab61b3021091cc480b495", properties:{date:"2017-09-04 19:04:19", author:"Defn Nghiem", is_merge:false, message:"cheap mode by default"}}, {hash:"3a96bab387bf898fd71023961e0cd957488e357b", properties:{date:"2021-12-22 14:28:17", author:"ywarezk", is_merge:false, message:"decided to create dev cluster as preemptable and in warsaw to make things super cheap"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"f1383adda80c8d0960fa8153c2a82f03ce81e874", properties:{date:"2021-12-22 15:13:59", author:"ywarezk", is_merge:false, message:"created a super cheap cluster"}}, {hash:"991915ce492e074d8df658aa54c902b52f9c4cc5", properties:{date:"2021-05-18 13:13:09", author:"Andrei Petric", is_merge:false, message:"Fargate cluster (commented out to avoid costs)"}}, {hash:"213ea410b9a2146cc804213dedeacdff4f07a74a", properties:{date:"2020-09-22 11:23:02", author:"TomJKing", is_merge:false, message:"Move to Jenkins VPC\n\nJenkins VPC already available in the TDR management account.\n\nAdding Grafana to existing VPC means no need to create new VPC with additional cost involved"}}, {hash:"4fd89da7e37ce7f22d920e3584761f702383a8ba", properties:{date:"2018-09-06 16:52:44", author:"Matt Weiden", is_merge:false, message:"Add alert description to alert payload.\n\nThis will enable more informative slack alerts."}}, {hash:"5f9f8fb118a42d7b18ec082be41665ed2b9eb992", properties:{date:"2022-01-14 00:20:42", dmm_unit_complexity:1.0, author:"Itzik Bar-David", is_merge:false, dmm_unit_interfacing:1.0, message:"optimize costs - remove SQS as it has a lot of \"Number Of Empty Receives\" when application is not in use + introduce lock on \"capture-trigger\" lambda by setting max concurrency to 1", dmm_unit_size:1.0}}, {hash:"5ba235b0c935de75c2cb2f57686bc246816a7f74", properties:{date:"2021-06-15 16:08:08", author:"Tron", is_merge:false, message:"Remove two GCP seed nodes\n\nExcessively high bandwidth costs."}}, {hash:"7ac9544b0c651fd8193eb063079514d0aa41e290", properties:{date:"2021-03-31 10:18:05", author:"Jared Stufft", is_merge:false, message:"adding fargate spot as the capacity provider for the worker node for cost optimization"}}, {hash:"5403a8978053a1299b0afe8d7fc59e914fc5e354", properties:{date:"2021-10-26 11:57:37", author:"Jeremy Frasier", is_merge:false, message:"Upgrade the root volume type to gp3\n\ngp3 is cheaper and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\ncodependent with gp2."}}, {hash:"4907fd7598d0083705494182d985c6b3b58db2c0", properties:{date:"2020-04-24 21:19:58", author:"Sam", is_merge:false, message:"Provision databricks resources with built-in token management (#29)\n\n* change default region to eastus2 for cheaper demos and faster provisioning\r\n\r\nhttps://azureprice.net/Region\r\n\r\n* use built-in token mgmt for databricks cluster creation\r\n\r\nCo-authored-by: samueldumont <samuel@dumont.info>"}}, {hash:"087f2caeff6ecaa2a18ecc2f20b7313a70d2d191", properties:{date:"2021-04-30 13:10:28", author:"Christian Castillo", is_merge:false, message:"Change the SKU to a cheaper one"}}, {hash:"7f2ffcc3cbb8538f82cb14377edb08b49105baf7", properties:{date:"2018-02-01 05:37:51", dmm_unit_complexity:0.18604651162790697, author:"Andy Fang", is_merge:false, dmm_unit_interfacing:1.0, message:"did you know dynamo read capacity is really expensive", dmm_unit_size:0.18604651162790697}}, {hash:"629819ce0c440760be155874cb42ab497f0304bd", properties:{date:"2020-05-13 18:28:30", author:"Cheok Swin Voon", is_merge:false, message:"change cluster flavor\n\nto save cost for long running architecture infra"}}, {hash:"46f76d50b8569f450ce909e04f3c5fa81b97737a", properties:{date:"2018-12-04 09:35:53", author:"Geoffrey Bergeret", is_merge:false, message:"feat: Move from ELB to ALB\n\nUpdate project to use ALB in order to save money as ALB are cheaper than\nELB. Also Classic Load Balancers are deprecated."}}, {hash:"87401ba23af26d379d8132cc09fd7cd212773ba1", properties:{date:"2022-01-10 15:34:26", author:"Razvan Cosma", is_merge:false, message:"cheaper storage for test clusters (#114)\n\n* cheaper storage for test clusters"}}, {hash:"c50fd3b3f25f87a6326684ad44d507d187e24874", properties:{date:"2021-01-29 10:08:43", author:"Jakub Bielecki", is_merge:false, message:"feat(vm-series): SystemAssigned identity a default\n\nBy default use a managed identity instead of none. It's costless:\nhttps://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/services-support-managed-identities"}}, {hash:"d9b4b9dcb95b96bdfb09f9631acd91ab34aa7dcf", properties:{date:"2021-02-04 15:27:58", author:"Jakub Bielecki", is_merge:false, message:"feat(vm-series): add Application Insights metrics\n\nVerified that the defaults here do not currently cost anything and do\nnot require extra permissions. Users are billed only when they actually\nmanually paste the metrics_instrumentation_key by GB of metrics sent.\n\nAn opinionated setup is thus to furnish a single Application Insights\nfor every module instantiation.\n\nSeemingly, no RBAC changes are required for this to work, it doesn't\nmatter if firewall runs on a SystemAssigned or a UserAssigned or even\nNo Identity."}}, {hash:"e9dcc211445f9e315d894e61cd147cf5acf151d9", properties:{date:"2022-01-16 19:49:30", author:"bkmnaidu", is_merge:false, message:"Enable bucket key for reducing the cost of SSE-KMS with Amazon S3 (#115)\n\nCo-authored-by: Krishna Mohan Bandi <krishna.bandi@internetfusion.co.uk>\r\nCo-authored-by: cloudpossebot <11232728+cloudpossebot@users.noreply.github.com>\r\nCo-authored-by: Yonatan Koren <me@yonatankoren.com>"}}, {hash:"25cda0b77ff329a89551cc6f14fe8c62820fd424", properties:{date:"2017-10-22 23:45:40", author:"Kevin Elledge", is_merge:false, message:"Add billing alarms\n\nEase of configuration for thresholds will be important"}}, {hash:"cacd8afbc18273e42e4027b36b3a5e9c37c04405", properties:{date:"2020-06-16 12:13:49", author:"Andy Baran", is_merge:false, message:"removing dataflow to keep cost down while testing"}}, {hash:"88303c62ab59b1e7a538289112cf19354a8ed05f", properties:{date:"2019-11-20 15:21:48", author:"Danny Sievers", is_merge:false, message:"adjusting billing account to reflect the id that needs to be passed"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"ea9c4efeb857958f5a31b75d22555c34e1181937", properties:{date:"2020-09-29 16:27:37", author:"Ricardo Cordeiro", is_merge:false, message:"Move imgs from gcr.io to eu.gcr.io to avoid costs"}}, {hash:"6a696dfa2dd5716a65b10fc3277cd9e994b8b30a", properties:{date:"2021-07-13 17:16:25", author:"Andre Correa", is_merge:false, message:"cost tracking tag set to true"}}, {hash:"7247909ecd98c2d511316392f22cb3877f05250b", properties:{date:"2021-11-02 14:13:56", author:"Johannes Murmann", is_merge:false, message:"added policies for cost management"}}, {hash:"3945c8e2bd7a2b7e73169aceae9dc1817ec8292c", properties:{date:"2021-08-26 10:23:40", author:"Matt Conway", is_merge:false, message:"teardown compute infra to save costs till we need it"}}, {hash:"f70410061b8c6b9249895571e05dfb7a142efb18", properties:{date:"2021-10-26 16:36:25", author:"Jeremy Frasier", is_merge:false, message:"Upgrade the root volume type to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2.\n\nAlso remove the delete_on_termination line, since\ndelete_on_termination = true is the default, so there is no need to\nspecify it."}}, {hash:"738d187f603e5a52e6c6338abcd6096e22e819a0", properties:{date:"2021-11-22 12:04:57", author:"Zach Mowrey", is_merge:false, message:"Initial Commit\n\nSets up the infrastructure for Organizations, OUs, SCPs, and cost & usage reporting."}}, {hash:"59c40286757e1fa5cb5391421c5380e5ad506387", properties:{date:"2021-08-13 12:05:43", author:"Ed Robinson", is_merge:false, message:"Run GPU node group tests with on_demand instances (#236)\n\nThis should fix the flakiness we have seen with this test recently.\r\n\r\nUsing g4dn.xlarge instance type as this is currently the lowest cost\r\nNvidia GPU node"}}, {hash:"0d21bea79e1936e2bdaee58bd6e328dd08e59b30", properties:{date:"2021-06-11 13:21:32", author:"David Zych", is_merge:false, message:"bootstrap: change DynamoDB billing_mode to \"PAY_PER_REQUEST\"\n\nAs of this writing, minimal PROVISIONED mode is only costing us $0.56/month, but it would take ~373k (each) read and write requests to spend that much with on-demand pricing"}}, {hash:"c7bc0ce6f3fcaffcbbe7753f1a9d8437809bc167", properties:{date:"2021-05-08 13:38:51", author:"Peng Li", is_merge:false, message:"using az account to get subscription_id and changing to use a smaller VM size to save cost."}}, {hash:"edbb68b29f7e055a50c16f62a71ee7be8c019407", properties:{date:"2021-03-21 11:58:27", author:"digitalronin", is_merge:false, message:"Use a larger VM size\n\nThis is the next size up, in terms of CPU power. The cost is $15/month,\nwhich is roughly $0.02/hour (I think)."}}, {hash:"c11dabf1ea02c0e044c62448986bb3f9abdf3967", properties:{date:"2017-12-14 23:58:16", author:"Austin Davis", is_merge:false, message:"reducing read and write capacity to 1 to reduce costs."}}, {hash:"4214c1c19120650c6888d1c1a8d107755d6c6c2e", properties:{date:"2019-02-04 10:58:51", dmm_unit_complexity:1.0, author:"Stuart Sandine", is_merge:false, dmm_unit_interfacing:1.0, message:"initial commit; using kube job approach, but abandoning that.\n\nthe idea of using GKE, having a node pool optimized for running the LH batch jobs, and\nusing kube Jobs to manage a bunch of LH runs in parallel seemed promising. the pool\ncould regularly sit at 0, then autoscale when the LH pods are scheduled, keeping the\ncost low. but alas. the autoscaler is too slow for this to work the way i want.\ntesting with a job that manages 70 pods: the pods go PENDING, and the autoscaler\ntakes ~1m to add one node and have it become Ready; then another ~1m to add another; etc.\n\nit took 5 minutes to run 70 pods this way, and i want to run ~5000, so this is a\nshow-stopper. something like https://github.com/atlassian/escalator seems\npromising for this kind of rapid autoscaling of nodes for this kind of\nbursty workload, but it only works on AWS.\n\nkeeping this commit here in case it is useful to someone or myself later.\n\ngonna use AWS lambda instead for this project!", dmm_unit_size:1.0}}, {hash:"6f802267c2d43803eebbdb383da9e3815c1c68bd", properties:{date:"2022-02-06 09:59:41", author:"slaurijssen", is_merge:false, message:"northeurope center mo cheapo"}}, {hash:"9f610811aea8c523332e9dccad9bb0800b70691e", properties:{date:"2017-03-23 21:18:18", author:"Jeff Wang", is_merge:false, message:"remove nat gateway (too damn expensive)"}}, {hash:"c928fe0a05d1e9b8f1ecb1a7dacffecc2800e038", properties:{date:"2022-01-21 13:24:41", author:"Khanh Nguyen", is_merge:false, message:"Fix dynamo DB options and change go X-ray sample app to public (#525)\n\n* fix billing mode write capacity and change xray receiver to public\r\n\r\n* fix billing mode write capacity and change xray receiver to public\r\n\r\n* fix format for dynamo db"}}, {hash:"9604c14a781530129e47e7a7684a90db86a7f7a0", properties:{date:"2021-02-23 01:25:07", author:"Wushin", is_merge:false, message:"Add Mongo back as a t2.micro for cost"}}, {hash:"a0ea4fd84a409fe4ee853effa9f309a005b0efc1", properties:{date:"2021-10-18 15:45:29", author:"Naftuli Kay", is_merge:false, message:"Optional NAT\n\nThis feature allows users to disable NAT gateway creation,\ntypically for cost-savings or fully-private networks.\n\nI have tested this by hand in with NAT enabled and disabled by\ncreating an instance in the DMZ, shelling to it, reaching the\ninternet, then creating an instance in the admin layer, shelling\nto it, and validating that it can (nat_enabled=true) or cannot\n(nat_enabled=false) reach the internet."}}, {hash:"3c5d381a20fbd287f1003271ee1ba64272325074", properties:{date:"2020-06-30 11:02:58", author:"Coleman McFarland", is_merge:false, message:"Create 3 persistent VPCs for dev envs (#31)\n\nTo practice bringing EKS clusters up and down, it helps to have\r\npersistent networks to host them.\r\n\r\nOne of these (dev1) already exists. Here we test setting our nat gateway\r\nand interent gateway booleans to false on an existing network. We want\r\nto be able to do this, becuase these are compute resources that cost\r\nmoney and aren't needed when there are no clusters or EC2s running in\r\ntheir VPC."}}, {hash:"038d43dc5f17870bc6681e1d8699e0a0951a859e", properties:{date:"2018-07-13 10:23:54", author:"Jason Paige", is_merge:false, message:"Uses the Premium tier when in production\n\nPlease note Premium tier is very expensive but is the only non\nDevelopment Tier which supports VNETs"}}, {hash:"68171be117d3997b84253258f41fad6daedbc76a", properties:{date:"2019-09-26 15:26:37", author:"Alan Tai", is_merge:false, message:"Use a bigger but cheaper EC2 instance"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"a10df203e8892e1a868bd88d798589719a582ba6", properties:{date:"2021-09-23 15:15:23", author:"cedric lamoriniere", is_merge:false, message:"Use public.ecr.aws registry for the default datadog-agent image\n\nUsing public.erc.aws registry provides a better integration on the\nAWS ECS environment:\n* reduce network cost\n* better availability"}}, {hash:"494706fc421a0ddda47f7d543b7e7a296c378c26", properties:{date:"2021-10-23 23:11:11", author:"Amberoat", is_merge:false, message:"use b2s for cheaper cost"}}, {hash:"e4558e322cd6af610c43a840a59af8dad41f307f", properties:{date:"2021-05-11 11:10:31", author:"James Woolfenden", is_merge:false, message:"cost"}}, {hash:"1ab89439a42782f55a2ad591530118dbabd9a447", properties:{date:"2020-08-10 14:44:04", author:"Craig Kilpatrick", is_merge:false, message:"fix: changing instance class back to t2. t3 was too expensive"}}, {hash:"f29cf1138d21a2eba8aaccec3185e461cb8675bd", properties:{date:"2019-09-05 08:36:34", author:"Glenn Gillen", is_merge:false, message:"So expensive."}}, {hash:"dfc9a7ea4a62b6e6c14e09b2f08c7fb5c63ca711", properties:{date:"2019-11-19 09:20:26", author:"Glenn Gillen", is_merge:false, message:"Very expensive!"}}, {hash:"163a9de084161e21cb62c19033b4bff7d3a5e649", properties:{date:"2020-04-19 19:24:25", author:"Charles Harvey", is_merge:false, message:"add outputs, monitoring, tear down vm resources that cost"}}, {hash:"e2a2ef243deb0374ccfe3f37e0d1395d4338969c", properties:{date:"2020-05-13 02:24:06", author:"Charles Harvey", is_merge:false, message:"teardown resources that cost"}}, {hash:"9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c", properties:{date:"2019-11-26 21:05:30", author:"Doug", is_merge:false, message:"Replace CloudWatch billing alarm with AWS Budget"}}, {hash:"86a0795540edb426c3226775d73fcd4ce807d36a", properties:{date:"2021-06-08 10:39:19", author:"Spencer Tuft", is_merge:false, message:"Change default to t3 family\n\nBecause t3 instances are cheaper and are sometimes more performant, the BYU cloud office is considering preventing t2 hardware from being launched to encourage the use of t3 instances. Regardless of the decision the cloud office makes, t3 family instances seem like a better default for cost and performance reasons."}}, {hash:"0d4fbd0a7b296a5c9377a835dff89d1499716082", properties:{date:"2020-08-18 22:24:19", author:"cob16", is_merge:false, message:"add pagerduty alerting\n\nThis is to avoid this site becoming unexpectedly expensive based of high traffic"}}, {hash:"baa5b2d85892a85403c5dac807c891bb1b7b6dc7", properties:{date:"2021-08-28 20:04:15", author:"arora", is_merge:false, message:"sql license - pay as you go"}}, {hash:"0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4", properties:{date:"2018-05-06 23:21:53", author:"Dalton Hubble", is_merge:false, message:"Use global HTTP/TCP proxy load balancing for Ingress on GCP\n\n* Switch Ingress from regional network load balancers to global\nHTTP/TCP Proxy load balancing\n* Reduce cost by ~$19/month per cluster. Google bills the first 5\nglobal and regional forwarding rules separately. Typhoon clusters now\nuse 3 global and 0 regional forwarding rules.\n* Worker pools no longer include an extraneous load balancer. Remove\nworker module's `ingress_static_ip` output.\n* Add `ingress_static_ipv4` output variable\n* Add `worker_instance_group` output to allow custom global load\nbalancing\n* Deprecate `controllers_ipv4_public` module output\n* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`"}}, {hash:"bcc6e190b8f8a12b590089fb755c4f552f179ad0", properties:{date:"2020-02-29 12:26:09", author:"Ty", is_merge:false, message:"updated template to help reduce cost with default settings"}}, {hash:"77c58fa499829785825e45aa90e1bb6c7058c5a2", properties:{date:"2017-10-20 09:26:03", author:"caylaa", is_merge:false, message:"Migrating main loris cluster to c4.xlarge with EBS IO1 volume. Switching second loris cluster to EBS GP2 to see if we can reduce costs"}}, {hash:"e19dd7497737376a07e62042ed9fb3e8ad9739a9", properties:{date:"2021-06-26 06:46:37", author:"Ryan Schouweiler", is_merge:false, message:"Moving eks project to archive\n\neks was cool but cost-prohibitive for a homelab"}}, {hash:"804ab045e330d3b669282e55c5bcc4660ebffea8", properties:{date:"2018-10-20 19:37:27", author:"Tale Toul", is_merge:false, message:"Delete ebs root volumes on instance termination\n\nNow the root ebs disks attached to the EC2 instances are deleted when\nthe instances are terminated.  Before they were kept as available\nincreasing the billl of AWS."}}, {hash:"d13218e98814d7ac3bc65fc862c0119123f44d68", properties:{date:"2015-11-22 11:19:23", author:"Cliffano Subagio", is_merge:false, message:"Use one dynamodb table to reduce cost."}}, {hash:"e5dd322eadc9e0a00fd3a603d5a9e9e07a812df6", properties:{date:"2020-03-04 13:33:45", author:"Armando Magalhães", is_merge:false, message:"feat: make it single node\n\nmake it single node so it gets cheaper"}}, {hash:"321b1aee88f7d15dafe46aede2b86ced70061025", properties:{date:"2017-01-05 00:58:12", author:"A. Karl Kornel", is_merge:false, message:"Add support for spot-fleet bootstrap\n\nThis allows using a spot fleet to create the bootstrap instance.  When instance\nprices are low, this can result in savings over the on-demand cost of a\nt2.small instance (amazing, to be honest), and the bootstrap server is probably\nOK to handle the possible termination and re-creation that can occur with spot\ninstances.\n\nA new set of variables are added to control if we should use this, and what\nprice to set.  We also need a variable to control the expiration time, since we\ncan't compute it ourselves (at least, not easily).\n\nBUG: Setting \"associate_public_ip_address\", while not having any real effect in\nour config (because we set that previously at the subnet level) causes\nTerraform to generate a config that fails to run.  This needs to be reported.\n\nTODO: Make multiple launch configurations for different subnet/instance-type\ncombinations."}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"3f27fe4cb4b75bffb7c1cf754f3f22a61cad9bfd", properties:{date:"2019-03-08 10:39:54", author:"bishoybassem", is_merge:false, message:"Use the same AZ for the subnets to avoid regional data transfer costs"}}, {hash:"34d80ece7d0ef598414baffceb074c6580dd819b", properties:{date:"2018-11-04 21:43:00", author:"Geoffrey Bergeret", is_merge:false, message:"test: Update test instance to be smaller\n\nUpdate test instance from t2.micro to t3.nano (reduce cost)."}}, {hash:"5e63c8390cb1001daf4ad74bb2926cc060c0de08", properties:{date:"2018-12-04 19:03:35", author:"Geoffrey Bergeret", is_merge:false, message:"feat: Create a private tier with private subnets\n\nCreate a private tier with private subnets and use an ssh bastion to run\nkitchen-terraform on private subnets.\n\n* Update README.md\n* Create private subnets, nat gateways and route tables.\n* Implement var.price_saving_enabled to have AWS NAT gateway or EC2 instance\n(to save on cost).\n* Auto determine subnets size (size(private) = 4 * size(public)).\n* Update kitchen-terraform tests to run from private subnets.\n* Update kitchen-terraform to test each case (with NAT GW or EC2\ninstances)"}}, {hash:"dfe44fcf8f5a477e1fbc354f1b1d87af28895c0f", properties:{date:"2018-11-09 16:12:19", author:"Steve Cote", is_merge:false, message:"Changed default disk type to cheaper HDD instead of SSD"}}, {hash:"cbd8ce761041eac3afbdfbf74e001895895682f2", properties:{date:"2020-06-06 15:37:18", author:"Luke Williams", is_merge:false, message:"Explicitly size instance to m5.large, below minimum spec on https://github.com/deepfence/ThreatMapper#pre-requisites but will try at this size to lower cost of the lab"}}, {hash:"2b30952f26e8a8e66fe8b6eddf9c4657e0d074d4", properties:{date:"2021-05-18 08:20:04", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"599aa2776677bcf05ebf5f6377a2eb82f5d2220c", properties:{date:"2021-06-07 11:20:45", author:"Stephen Cirner", is_merge:false, message:"Scale back nodes to cut costs."}}, {hash:"68c7bfb39a40f2783cfdae9ab5206c6747b8e7f3", properties:{date:"2022-02-19 16:22:10", author:"Jacob LeBlanc", is_merge:false, message:"Removed route53 for costs reasons"}}, {hash:"33fbb76715ce6e35565b5f83f7ece0f9df37d282", properties:{date:"2020-04-25 13:22:26", author:"Matt Gowie", is_merge:false, message:"Disables NAT Gateways\n\nI forgot how much these damn things cost."}}, {hash:"bf753832a519b0649f8d58d93aa643afe3f94fc7", properties:{date:"2020-08-31 09:41:44", author:"Oliver Frolovs", is_merge:false, message:"Change DynamoDB billing to \"on demand\""}}, {hash:"47e62f2fc73a96611606cd619c084d1ded9d844d", properties:{date:"2019-05-23 12:20:42", author:"Samruddhi Purandare", is_merge:false, message:"Feature/storage cost optimization (#106)\n\n* Adding lifecycle policy for s3 data buckets\r\n\r\nMaking No of days in Lifecycle policy configurable\r\n\r\nMaking storage classes configurable at schema level\r\n\r\n* PR comments\r\n\r\n* PR comments\r\n\r\n* PR Comments\r\n\r\n* PR Comments\r\n\r\n* PR Comments\r\n\r\n* fix to run terraform when apiary_managed_schemas is empty"}}, {hash:"fa109033da045468d612fe8eae1a2f903e30e128", properties:{date:"2020-03-19 10:43:45", author:"Max Jahn", is_merge:false, message:"Changed ExpressRoute tier to Local to avoid cost for egress traffic"}}, {hash:"f2f4deb8bb44988eeb0b64b919e51fb556aef4fb", properties:{date:"2018-12-18 12:29:27", author:"Dalton Hubble", is_merge:false, message:"Change AWS default type from t2.small to t3.small\n\n* T3 is the next generation general purpose burstable\ninstance type. Compared with t2.small, the t3.small is\ncheaper, has 2 vCPU (instead of 1) and provides 5 Gbps\nof pod-to-pod bandwidth (instead of 1 Gbps)"}}, {hash:"aaa8e0261a01a62fa4a343788b3df20b9e93ee38", properties:{date:"2019-03-30 15:12:55", author:"Dalton Hubble", is_merge:false, message:"Add Google Cloud worker instances to a target pool\n\n* Background: A managed instance group of workers is used in backend\nservices for global load balancing (HTTP/HTTPS Ingress) and output\nfor custom global load balancing use cases\n* Add worker instances to a target pool load balancing TCP/UDP\napplications (NodePort or proxied). Output as `worker_target_pool`\n* Health check for workers with a healthy Ingress controller. Forward\nrules (regional) to target pools don't support different external and\ninternal ports so choosing nodes with Ingress allows proxying as a\nworkaround\n* A target pool is a logical grouping only. It doesn't add costs to\nclusters or worker pools"}}, {hash:"85252dec6ed7f0b24517089150ec89bf32b45fb2", properties:{date:"2021-12-07 15:19:08", author:"Dalton Hubble", is_merge:false, message:"Switch FCOS workers to official Fedora CoreOS AMIs\n\n* Fix worker nodes to use official Fedora CoreOS AMIs,\ninstead of the older Poseidon built AMIs (now removed).\nThis should have been part of #1038, but was missed in\ncode review\n* Poseidon build AMIs have been deleted (so I don't have\nto keep paying to host them for people)"}}, {hash:"2291a1ac7e47009d058a1a448760cd5559e5946e", properties:{date:"2018-06-04 23:27:39", author:"Kei Nohguchi", is_merge:false, message:"vars.tf: Increase the number of droplets to 40 each\n\nTo hit the 40Gig total with cheapest droplets :)"}}, {hash:"17007456991c1a8faa26b1f4ac993883f577d124", properties:{date:"2020-03-06 12:58:27", author:"Owain Llewellyn", is_merge:false, message:"feat: Cold Storage for S3 (#15)\n\nadds functionality to move old s3 objects into\r\ncold storage for cost saving"}}, {hash:"9ec3047d95969e8d2b729e6545672c3084ea846d", properties:{date:"2020-08-11 22:47:01", author:"Martijn Hemeryck", is_merge:false, message:"hcloud hetzner setup\n\nThey are much cheaper and you get much more RAM. Multicloud ftw."}}, {hash:"25ed0319bf8099f0cc79eceba9104c73d9507e0d", properties:{date:"2022-03-03 18:10:12", author:"carlomazzaferro", is_merge:false, message:"remove unneded configs and (expensive) resources"}}, {hash:"2809f4e2d78ff33b48e9c1742b58a256ebce986d", properties:{date:"2022-03-03 18:10:26", author:"carlomazzaferro", is_merge:false, message:"remove unneded configs and (expensive) resources"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"6e85cf4f7e7f76c159c2e30952a775d6facaf638", properties:{date:"2018-07-29 13:33:16", author:"Alan Clark", is_merge:false, message:"As customer KMS keys cost money, adding option to use S3 default key"}}, {hash:"53588dad5dd4c13903a6c582f74e1afe2671d33e", properties:{date:"2019-08-17 15:58:54", author:"kondo takeshi", is_merge:false, message:"Minimamize spec to save the cost"}}, {hash:"832682e0b54ede90b021b4ed575dcc9e761135ce", properties:{date:"2020-06-02 18:47:01", author:"Douglas McGowan", is_merge:false, message:"Finished adding in networking components. To keep costs down, default config has only one AZ"}}, {hash:"941e316bcd70779e868311253f663f8acd5ef155", properties:{date:"2020-08-07 22:21:51", author:"Douglas McGowan", is_merge:false, message:"Removing ssm endpoints due to costs. Enabling dynamodb endpoints"}}, {hash:"667f5715c19534bfe5b01ad692979447412fd033", properties:{date:"2021-07-03 08:55:25", author:"Mads Hartmann", is_merge:false, message:"Make WAF optional. Disable on all sites due to cost"}}, {hash:"83f393acfdc39810b29f898ff2d8a3f247571aa6", properties:{date:"2019-01-22 18:34:37", author:"David Poindexter", is_merge:false, message:"Get bastion working, save cost snapshot"}}, {hash:"3799ee8b9677d02254eb6d6f50f3732df4c8374e", properties:{date:"2019-01-17 15:08:47", author:"Michael DeCorte", is_merge:false, message:"dynamodb support for pay per request"}}, {hash:"2e2092ec94b27a4c3f0b9f4ee4d46a1983a72518", properties:{date:"2020-06-10 02:53:23", author:"Kai Sun", is_merge:false, message:"minor updates: use 1 master to save cost; volume_size as variable"}}, {hash:"ad841964564c461513643bb13531dc07111efc7d", properties:{date:"2016-08-16 20:35:41", author:"davidski", is_merge:false, message:"Move to AZ us-west-2a by default for cheaper spot-instances"}}, {hash:"f69ce3812180a20bbda69ff1432a1cd36342bc3b", properties:{date:"2018-12-10 12:31:58", author:"Dominic Byrne", is_merge:false, message:"Removed ALB for cost and time taken to build/destroy"}}, {hash:"200e62726a588acf05f58a1087d71eb1b98f4e0a", properties:{date:"2021-12-03 14:49:34", author:"Patryk Futa", is_merge:false, message:"Decrease costs"}}, {hash:"08ff1d9788127d4fb9aa6616e22ed0b4ed406106", properties:{date:"2020-12-29 22:25:31", author:"Graham Gilbert", is_merge:false, message:"Man this is expensive"}}, {hash:"6089a019df4c39231e596af627ebd910877d11d0", properties:{date:"2018-01-28 22:09:55", author:"Defn Nghiem", is_merge:false, message:"no fargate, cost monies"}}, {hash:"521bae59a4002a616eac44c1681ca5066bbd00c8", properties:{date:"2019-10-23 16:40:49", author:"Josh", is_merge:false, message:"Updated instance size to reduce cost of lab."}}, {hash:"a9ea9d09727825f9a047e70d94caf73c99e6b2a8", properties:{date:"2017-04-08 13:32:51", author:"Tom Dooner", is_merge:false, message:"Remove health check of disclosure-backend-static\n\nIt's costing me $2.75/mo. What a gigantic waste of money! /s"}}, {hash:"39a9cabac6765c75591ba258fef0d10ba7ae0f9e", properties:{date:"2021-06-06 17:08:27", author:"Stuart Ellis", is_merge:false, message:"Add module for billing alerts"}}, {hash:"e78aad174927ca59a43a622d7e82f664e3005790", properties:{date:"2020-08-17 00:00:33", author:"Matei-Alexandru Gardus", is_merge:false, message:"Add Minecraft AWS instance provisioning config\n\nUpdate cost table to reflect instance changes.\n\nUltimately, we've decided on hosting Minecraft on AWS simply because\nwe might be saving costs in the long term."}}, {hash:"43b3c46b84b984800a6a013a93555b7bedf5c81a", properties:{date:"2021-03-27 13:05:28", dmm_unit_complexity:1.0, author:"weiztech", is_merge:false, dmm_unit_interfacing:1.0, message:"add cost control code + terraform deployment code to GCP", dmm_unit_size:0.574468085106383}}, {hash:"4356e9ebf89921898e9459f85f1173d44f3a3a6f", properties:{date:"2019-02-14 10:54:36", author:"akumar5", is_merge:false, message:"cost optimized ebs first checking"}}, {hash:"fa5f7fb35b0b44020fb81dd5c4e3b9ceaca1f967", properties:{date:"2021-11-01 12:48:03", author:"Tom Godkin", is_merge:false, message:"Use cheaper nodes"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"9cbfebaab11cb3466b160d18ef2eb46c0b875d55", properties:{date:"2020-03-23 23:09:38", author:"hodl-farm", is_merge:false, message:"cheaper vms"}}, {hash:"5675965b57d05932ae8b806bad2cd219d15fe516", properties:{date:"2020-11-25 13:09:38", author:"Dirk Mueller", is_merge:false, message:"Use Aurora DB as external database\n\nThat is slightly cheaper, and does the job as well."}}, {hash:"02210a3d3ba4a770c29623825b7f54f3ff33f3c7", properties:{date:"2018-01-14 14:21:26", author:"thomasshouler", is_merge:false, message:"Make the concourse cluster cheaper\n\n- no longer uses a load balancer\n- no longer uses more expensive VMs"}}, {hash:"1e208af4c83d093c900f4cccedbca6183142a07f", properties:{date:"2015-08-21 13:04:09", author:"Dan Buch", is_merge:false, message:"Add \"ubuntu-trusty-micro-playground\" instance\n\nfor easy/forever access to an Ubuntu Trusty machine in GCE, estimated monthly\ncost of ~$4.75"}}, {hash:"5127d7a6eccc6965d1e51928d50ee01a46b38871", properties:{date:"2020-07-20 13:11:59", author:"thiringai-evans", is_merge:false, message:"provide an instance \n\n A t3.nano instance is provided, its checked for cost estimation monthly using the policies provided."}}, {hash:"e5742d6f4f93dd432c9d8d0a31493d43c45aaff1", properties:{date:"2019-11-12 23:48:46", author:"Stephen Grier", is_merge:false, message:"Add NAT instances to ecs module\n\nThe ecs module creates NAT gateways for the ECS hosts to use for\negressing out to the internet. However, NAT gateways are rediculously\nexpensive. The solution is to use NAT instances instead, which are EC2\ninstances configured to act as NAT boxes. Because they are just EC2\ninstances we can use spot pricing to massively reduce the cost.\n\nTo be resilient we need a NAT instance in each availability zone. To\nensure this is the case we need an ASG in each AZ which maintains\nexactly one spot instance. We also create an ENI for each NAT instance,\nwhich will persist as spot instances come and go and provide a static ID\nwhich can be used in routing tables."}}, {hash:"742f35a1fdf66b24ddb1f6a514b2af5a1f2b4282", properties:{date:"2020-01-15 10:17:20", author:"Adeel Ahmed Khan", is_merge:false, message:"corrected resource parameters for low cost and changed version"}}, {hash:"0e69a9978eae9e3432de8f16c2ca1b38033c23a7", properties:{date:"2019-06-06 14:17:08", author:"Xabier Arbulu Insausti", is_merge:false, message:"Add cost optimized variables to libvirt"}}, {hash:"948727c5b1e87b970a7a9dee4cd67bb84d19abf8", properties:{date:"2019-06-06 14:17:50", author:"Xabier Arbulu Insausti", is_merge:false, message:"Add cost optimized variables to the cloud providers"}}, {hash:"93ee12adde6ac773c76b590fe89c24df372f326b", properties:{date:"2021-09-28 17:48:45", author:"Stefano Torresi", is_merge:false, message:"change default azure vm size and disk type to be cheaper"}}, {hash:"c82a19d98673c1aeeb1fa26afb983acbfbea272f", properties:{date:"2018-10-31 12:07:59", dmm_unit_complexity:0.72, author:"Dilip Kola", is_merge:false, dmm_unit_interfacing:0.6933333333333334, message:"Add ec2 cost optimination using tags", dmm_unit_size:0.41333333333333333}}, {hash:"5e8b6f6b88db49a0508ea670d71070c92cfdbaca", properties:{date:"2018-01-18 16:02:07", author:"Ayan Sen", is_merge:false, message:"changed variable names and moved es inside vpc to prevent egress cost"}}, {hash:"e51b9583b2df3154b5c82da361d411d65ed23bab", properties:{date:"2019-08-10 15:42:04", author:"Ryan Liang", is_merge:false, message:"Destroy private subnets cuz expensive"}}, {hash:"6ca41e5ad697201a1d225e5d15134e547ee6ced3", properties:{date:"2020-09-15 14:47:03", author:"lasseb", is_merge:false, message:"Add variable for creation of NAT Gateway(s)\n\nAdd option to not create NAT Gateways for private subnets to save costs."}}, {hash:"4e67a501bb3f5187a3e9af523921ac62b8a88469", properties:{date:"2018-08-13 12:30:25", author:"Jeremy Frasier", is_merge:false, message:"Change code to use the cheaper r4.xlarge instances type.\n\nI watched the memory consumption while running BOD scanning, and it\nappears to consume about 13GB.  I could probably get by with 16GB of\nRAM, but this is an economical option that has almost 32GB of RAM."}}, {hash:"7b8d9247a679295e0e1791b13d6c437c473e44b8", properties:{date:"2021-10-26 16:59:06", author:"Jeremy Frasier", is_merge:false, message:"Upgrade volumes from gp2 to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2.\n\nAlso remove delete_on_termination lines from root volume configs.\ndelete_on_termination = true is the default, so there is no need to\nspecify it."}}, {hash:"3971011e4253cb5b98fdf77a558f5ef8f34d2653", properties:{date:"2015-10-08 07:15:51", author:"Julian C. Dunn", is_merge:false, message:"Switch to Centos 7 for cheaper costs"}}, {hash:"8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2", properties:{date:"2019-10-04 13:56:56", author:"Jeff McCune", is_merge:false, message:"Add preemptible feature flag, default to true\n\nCreate preemptible instances by default to reduce cost.  The managed\ninstance group will recreate preempted instances.\n\nSee: https://cloud.google.com/compute/docs/instances/preemptible"}}, {hash:"265d6c5b8a1e01032402d4b2c94d12d5365e5e6e", properties:{date:"2021-08-13 10:30:47", author:"Adam Lewis", is_merge:false, message:"Prometheus grafana (#733)\n\n* add grafana traefik route\r\n\r\n* grafana working\r\n\r\n* prometheus-helm-chart-working\r\n\r\n* initial integration - wip\r\n\r\n* add external-url variable\r\n\r\n* add external-url variable\r\n\r\n* add tls var\r\n\r\n* add tls var\r\n\r\n* add tls var\r\n\r\n* cluster monitoring docs\r\n\r\n* fix debug change\r\n\r\n* fix formatting, delete ingress\r\n\r\n* add monitoring by default, fix routing service name\r\n\r\n* terraform format\r\n\r\n* Update monitoring instructions\r\n\r\n* don't include helm chart in repo\r\n\r\n* terraform format\r\n\r\n* terraform format\r\n\r\n* add the values file back\r\n\r\n* remove values files\r\n\r\n* terraform fmt\r\n\r\n* terraform fmt\r\n\r\n* up minikube memory\r\n\r\n* set CI minikube memory to 6500mb\r\n\r\n* move kubernetes tests to new file\r\n\r\n* use self-hosted action runner (cirun.io)\r\n\r\n* add .cirun.yml\r\n\r\n* Misc fixes\r\n\r\n- move yaml to root\r\n- fix syntax\r\n- install python from miniconda\r\n- install node\r\n- install cypress dependencies\r\n\r\n* Install cypress after k8s tests\r\n\r\n* use cheapest acceptable DO droplet\r\n\r\n* add release notes\r\n\r\nCo-authored-by: Adam Lewis <balast@users.noreply.github.com>\r\nCo-authored-by: Adam-D-Lewis <>\r\nCo-authored-by: Amit Kumar <dtu.amit@gmail.com>"}}, {hash:"8475fbe51281a76757f7046c6c591056db182286", properties:{date:"2020-11-23 15:54:14", author:"Richard Towers", is_merge:false, message:"Enable envoy access logs for all apps\n\nAs described in the AWS docs on AppMesh \"Observability\":\n\nhttps://docs.aws.amazon.com/app-mesh/latest/userguide/observability.html\n\n> When you send Envoy access logs to /dev/stdout, they are mixed in with\n> the Envoy container logs. You can export them to a log storage and\n> processing service like CloudWatch Logs using standard Docker log\n> drivers such as awslogs. For more information, see Using the awslogs Log\n> Driver in the Amazon ECS Developer Guide. To export only the Envoy\n> access logs (and ignore the other Envoy container logs), you can set the\n> ENVOY_LOG_LEVEL to off. For more information, see Access logging in the\n> Envoy documentation.\n\nIt's possible that this approach would get expensive at\nproduction-levels of traffic. I think it's worth doing for now though,\nas it might help use troubleshoot issues while we're developing."}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"c130862a29878f0e483551bc115d2ca5bdc4bf5c", properties:{date:"2020-03-20 23:28:08", author:"amezousan", is_merge:false, message:"Disable unneeded methods for saving costs"}}, {hash:"02c710b8259f493c475021fc9eac23b871305ae6", properties:{date:"2018-04-23 14:48:39", author:"Ken Matsui", is_merge:false, message:"cost reduction\nhttps://aws.amazon.com/about-aws/whats-new/2017/06/amazon-rds-enables-encryption-at-rest-for-additional-t2-instance-types"}}, {hash:"79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07", properties:{date:"2019-02-27 01:23:17", author:"Jonas Odencrants", is_merge:false, message:"feat: aws spot fleet for cheap build agents"}}, {hash:"f62bfebb54530c9466cfdb21336794f24bcd63a7", properties:{date:"2019-07-15 17:02:27", dmm_unit_complexity:0.4864864864864865, author:"Jonas Odencrants", is_merge:false, dmm_unit_interfacing:1.0, message:"feat: optimize cost and upgrade to terraform12\n\n* feat: remove task load balancer\r\n* feat: update dns on task state change\r\n* feat: enable drone built-in autocert for https\r\n* fix: allow less with improved dns policy\r\n* fix: default port for build agent\r\n* feat: convert to terraform12 syntax and functions (#7)", dmm_unit_size:0.17567567567567569}}, {hash:"1e588a004172338404c487e679df5d503f0cab48", properties:{date:"2021-12-03 15:57:58", author:"Chris Banks", is_merge:false, message:"Reduce external-dns's polling interval and enable watches.\n\nThe idea here is to reduce the QPS to Route53, since Route53 has a hard\nlimit of 5 QPS. The watches should be comparatively cheap as long as we\ndon't create an unreasonable number of Ingresses+Services (and we'd\nalmost certainly hit other scaling limits first anyway).\n\nSee https://github.com/kubernetes-sigs/external-dns/blob/1b57fd7/docs/tutorials/aws.md#throttling\nand https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html#limits-api-requests-route-53"}}, {hash:"a51a3bfcd73fd55ecd43aa36ce3f266f0cefc2dc", properties:{date:"2021-12-08 18:27:11", author:"Chris Banks", is_merge:false, message:"Give the EKS environment its own frontend memcache.\n\nWe can't share the Frontend memcache with the EC2 environments, because\nFrontend uses it to cache rendered HTML which contains links to Rails\nassets. My mistake 🤦\n\nAlso:\n\n- Tweak the config for the shared Redis while we're there; it's very\n  similar to the memcache one so let's make the two consistent.\n- Remove the defaults for instance types and added those vars to the\n  per-environment `.tfvars`, to make it less likely that we'll forget to\n  set them appropriately when adding staging and prod.\n- Hardcode the standard ports for Redis and memcached; we'd never want\n  to run them on nonstandard ports so on balance it's cleaner to get rid\n  of the module variable and save on interface clutter.\n- Use a slightly smaller and cheaper instance type for Redis.\n- Use provider default tags to simplify tagging the Redis cluster and\n  associated resources. Saves the repeated boilerplate merge on every\n  tagged resource.\n\nTested: applied successfully in the test account. Clusters/instances\nshow up healthy in the AWS web console."}}, {hash:"ee2b2286a02d49c7e9992d0a39ce950583e16bb7", properties:{date:"2022-04-13 10:30:28", author:"Frederic Francois", is_merge:false, message:"Add k8s resources to Argo Workflows components\n\nThere are 3 types of Argo Workflows components: controller, server\nand executor where k8s resources can be set. They seem to have\ntheir default values removed from the [Helm chart](https://github.com/argoproj/argo-helm/blob/master/charts/argo-workflows/values.yaml)\n\nThe values are added back and were obtained from [here](https://argoproj.github.io/argo-workflows/cost-optimisation/)\n\nRef:\n1. [trello card](https://trello.com/c/54xe0QEk/892-add-resource-limits-to-workflow-and-job-pods)"}}, {hash:"ba858d94e29d03e3e81533df8cd8bc85b9f176f1", properties:{date:"2021-10-23 22:30:47", author:"guilhermerenew", is_merge:false, message:"mega-fix for adjustments in costing"}}, {hash:"3bc712aba0c797053b5cdc113e3e46afb6cff8a5", properties:{date:"2018-03-13 12:35:59", author:"Russell Shurts", is_merge:false, message:"Reduce instance size to keep costs down while experimenting"}}, {hash:"002bcce28e46728714fa1e0d20bec6f2559caba2", properties:{date:"2019-04-22 17:46:07", author:"Alvaro Mourino", is_merge:false, message:"Add prod var\n\nWhat if we want to use less (or cheaper) infrastructure for non-prod systems?"}}, {hash:"0ecf0a154918bd9bdc0f53557bc1f80920da6b14", properties:{date:"2020-07-07 12:39:50", author:"Petrik van der Velde", is_merge:false, message:"Remove the firewall because it's expensive!! And we're not going to have a public IP at the moment that\nis not a VPN anyway."}}, {hash:"411ab992ba07e698cb08b56eb4cfc9d6e001d43f", properties:{date:"2022-01-11 15:49:08", author:"jkstenzel95", is_merge:false, message:"Change dynamodb kv store billing mode"}}, {hash:"d016b96d89370b8039817fabdfa055576cf6b4cc", properties:{date:"2016-11-19 00:24:18", author:"ntk1000", is_merge:false, message:"billing alert"}}, {hash:"1af5d07714182455cafd972556b507409f9559ae", properties:{date:"2021-11-17 14:36:16", author:"Jakub Bielecki", is_merge:false, message:"in app1_ec2 change the VM to bitnami ready-made nginx\n\nThe bitnami library offers a ready-made http/https server, which saves\ntime during testing. On the previous ubuntu image, the path to have\nhttps was unneccessarily bumpy:\n- the inbound ssh needed to work\n- the user needed ssh/putty locally\n- apt update\n- apt install ngnix\n- for these commands, the outbound also always needed to work, yet\nanother difficulty.\n\nAll these steps are not needed with a ready-made image.\n\nThe bitnami image is free of cost as well.\n\ncommit-id:b903e3ed"}}, {hash:"ec2982c8742cc7bc294f8a3cc07ae9ba5ffcaced", properties:{date:"2020-05-03 14:57:10", author:"Naoki Oketani", is_merge:false, message:"create budget to notify me if actual cost > $30"}}, {hash:"4fe0be131b0f6b5f073391227b9fe54372506b42", properties:{date:"2021-05-18 08:26:20", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"bfa7b3ae90f1d64d957700976080f9b1921dba30", properties:{date:"2020-06-15 09:40:22", author:"Wieschie", is_merge:false, message:"Disable ssm endpoint (it's an interface and costs money)"}}, {hash:"c291c0954c89e1bfbdb76d4c8990baf9db986343", properties:{date:"2021-11-18 12:00:43", author:"jason-drouhard", is_merge:false, message:"Feature/billing alerts (#6)\n\n* Updated required_version as the previous one was way out of date.\r\n\r\n* Uncommented parts of code designed to be used for other regions.\r\n\r\n* Removed unnecessary variables in code.\r\n\r\n* Reverted the version as the new one broke stuff.\r\n\r\n* Added EventBridge rules, ran terraform FMT\r\n\r\n* Added Environment tag back into config rule and updated the name of the eventbridge rule.\r\n\r\n* Fixed a typo.\r\n\r\n* Updated terraform version.\r\n\r\n* Added billing alerts for billing anomalies"}}, {hash:"a49aaeed1776f0991256221e61ebc868ae5b60cb", properties:{date:"2020-09-16 00:15:58", author:"Alex Hodges", is_merge:false, message:"fix: update billing alarm source"}}, {hash:"0c679d7adfa5bf38d5c7846958f3508fc036b3e9", properties:{date:"2020-03-16 20:28:39", author:"Robert Lupinek", is_merge:false, message:"Adding set private IP addresses and allowing public IP addresses on non-jump hosts.  Too cheap for Nat instance. :)"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"d0741cddb32ed7970904693e3a697603fa21bbbb", properties:{date:"2020-06-07 15:05:42", author:"nisunisu", is_merge:false, message:":art: Start using terraform variables and Comment out Elastic-IP setting to prevent unexpected billings."}}, {hash:"71a0250ad3aeed1da2b11734ac22c21831f3595d", properties:{date:"2019-09-10 23:54:06", author:"Casey Lee", is_merge:false, message:"updates for cost optimization - essential vs preemptive ASGs"}}, {hash:"cc3460b79e8811df25a34a10c34c2a0ad2b6280f", properties:{date:"2019-10-14 10:06:56", author:"Lawrence Dine", is_merge:false, message:"Update terraform script DB edition\n\nUpdate the terraform script to set the DB edition to 'Standard' and the\nobjective name to 'S0' to prevent expensive databases being created by\ndefault. Projects can scale this up as required by changing their script\nmanually."}}, {hash:"ef1df1044df317c78987f7f8398b4e45f5a3ee0a", properties:{date:"2020-07-01 18:31:06", author:"Nicolas Maupu", is_merge:false, message:"GKE master are now on only one zone (billing)"}}, {hash:"c528b5e97d9d1b57087bd60644a885dd9b4a2294", properties:{date:"2021-01-19 04:42:15", author:"Maxim Glotov", is_merge:false, message:"added vpc_s3_endpoint to reduce traffic costs"}}, {hash:"6a56f400f7de3f4d5cef646d92e3f848608031c1", properties:{date:"2018-02-06 13:55:20", author:"Louis", is_merge:false, message:"Make CloudWatch metrics optional\n\nThis adds a terraform variable to choose whether to enable cloudwatch\nmetrics. This is for cost-savings, since put-metric-data calls are\ncharged per call and dashboards (coming soon) are multiple USD per month."}}, {hash:"81e606a72e7c2e06c2f6d9c204086157aa82eac3", properties:{date:"2017-02-01 13:53:17", author:"Defn Nghiem", is_merge:false, message:"use the cheapest ebs disk sc1"}}, {hash:"7cc487f270d553f819fea0cf96e872c374979305", properties:{date:"2017-02-01 16:17:44", author:"Defn Nghiem", is_merge:false, message:"use cheap ebs for root"}}, {hash:"301244e00d9f359f964242849462704f80e8db13", properties:{date:"2021-10-13 01:34:53", author:"ndebuhr", is_merge:false, message:"🧠 Parameterize Jupyter GPU provisioning, for more flexibility in AI/ML/GPU workload cost-performance decisions"}}, {hash:"14f065e5161fee14c286c34df7db9f5516ef9bb6", properties:{date:"2021-02-04 17:11:55", author:"steveburton4", is_merge:false, message:"Use GP3 which is much cheaper and shrink the size except for prod (#22)\n\n* Use GP3 which is much cheaper and shrink the size except for prod\r\n\r\n* Volume tags"}}, {hash:"348b52a2ae5d6d242c8802644f9e3a5e6460de1d", properties:{date:"2018-07-24 09:57:53", author:"Emile Swarts", is_merge:false, message:"Add Autoscaling to Logging API (#97)\n\nThis adds 2 Cloudwatch alarms, one when the CPU is above 50% for 5\r\nminutes and another when the CPU is below 10% for 10 minutes.\r\n\r\nThese alarms will trigger an autoscaling action, adding or removing\r\nanother task.\r\n\r\nWe want this behaviour to accommodate traffic spikes and to scale down\r\nafterwards to save costs."}}, {hash:"38d0a67cf70d46c26675ce60a7a647eef0f11e52", properties:{date:"2018-07-26 08:43:20", author:"Emile Swarts", is_merge:false, message:"Reduce memory for containers in our API cluster (#101)\n\nCurrently we have just under 2Gb (1900MB) memory reserved for each container.\r\nThe memory utilisation never goes above 5%.\r\nReduce this memory reservation by half to 950MB per container.\r\n\r\nThis will save on AWS costs as we need less EC2 instances.\r\nWe could reduce this further but would do that\r\nas a separate task after having seen this work in production for a\r\nwhile."}}, {hash:"d75eace6e505fe5645647593ab8a9bb018db64c2", properties:{date:"2018-12-19 14:14:00", author:"Emile Swarts", is_merge:false, message:"Remove staging GovWifi devices cluster (#163)\n\nWe are able to broadcast GovWifi Devices on the same SSID, so currently\r\nthere is no need to have a standalone cluster to do this.\r\n\r\nIt will also save costs as we don't need to be running these unused EC2\r\ninstances."}}, {hash:"b0660183c95f4b938dbf33c5607381b8e4e2bd68", properties:{date:"2019-11-23 22:11:44", author:"Jeremy Kitchen", is_merge:false, message:"add a shared vpc\n\nI only want to create one cloud NAT instance as I think it costs me\nmoney? Not entirely certain. shared VPC seems to be the way to do it"}}, {hash:"e3d337caa558830f8e337d24edaab577ee9d43a2", properties:{date:"2019-11-24 15:39:55", author:"Jeremy Kitchen", is_merge:false, message:"set up a load balancer for vault.kitchen.horse\n\nI'm not sure I like this model.\nI like the forwarding rule -> http/https proxy -> backends (by rules)\nthing, but I think the mapping of proxy -> rule -> backend should be an\nexternal resource so I can make one load balancer for everything in\ngcp-central and just attach things to it. This would save me from having\nto have a bunch of external IPs that I have to pay for, or from having\nto centralize all of my load balancer configuration"}}, {hash:"fe1f2665b198308a438ec3d46b24843089df1a2a", properties:{date:"2020-04-13 00:09:30", author:"Jeremy Kitchen", is_merge:false, message:"turn off the NAT instance because suuuuuper expensive. Meh."}}, {hash:"45053a0862bf97f0525862c411fa4da5d59ac397", properties:{date:"2020-03-06 09:22:11", author:"hodl-farm", is_merge:false, message:"switch to cheaper e2 GCP vms"}}, {hash:"e357e4e6879f9f6fb09cf28a40684d30d0e63400", properties:{date:"2018-02-17 05:39:08", author:"Christopher.Bischoff", is_merge:false, message:"[feature/Create-terraform-remote-state-bucket] Completed deployment\n\n- removed backend state; maintained locally\n- removed kms due to cost\n- paramertized my infra deployments"}}, {hash:"f4113a8f7e52991dfb75f63688aeba77bac76b01", properties:{date:"2021-03-31 17:10:50", author:"Dincho Todorov", is_merge:false, message:"Use 3 int-sync nodes on cheaper instance (#21)"}}, {hash:"4ba7a9dc3085ab701c85737a4f36dd57fcd7596f", properties:{date:"2022-03-15 14:55:43", author:"ToruMakabe", is_merge:false, message:"improve: cost reduction (test env.)"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"84628710c900b2d1db058aa0e339134f24e6d20c", properties:{date:"2020-07-25 12:06:27", author:"Alexis Nava", is_merge:false, message:"billing_cloudwatch_alarm module documentation (#5)\n\n* Rename cloudwatch_alarm to billing_cloudwatch_alarm\r\n\r\n* Add documentation for the billing_cloudwatch_alarm module"}}, {hash:"8cd62acc20ce3418eaf4cdd9d8b472091101cdbd", properties:{date:"2020-07-25 12:30:21", author:"Alexis Nava", is_merge:false, message:"Fix the issue with threshold variable of the billing_cloudwatch_alarm module (#6)"}}, {hash:"206394bcc75866953f64cbf3bd6214e4e6f96e91", properties:{date:"2018-09-14 15:34:33", author:"Christopher J. McClellan", is_merge:false, message:"Right size Kong instance\n\nKong is serverely under-utilized in every environment,\nincluding prod.\nBring the instance down to a less expensive option."}}, {hash:"5ff37f12a421fdd902d8eb1e6d7491ee181fd179", properties:{date:"2020-04-11 19:44:38", author:"Jeremy Green", is_merge:false, message:"t2.nano costs half as much as t2.micro."}}, {hash:"effee9cbc473af5d07cfc3aacece50aa6e59753a", properties:{date:"2021-10-19 12:15:31", author:"Guillaume Khayat", is_merge:false, message:"use cheaper t4g.nano instance"}}, {hash:"30be6aa1969e37d512153b558540fe714b635c4c", properties:{date:"2021-07-02 20:27:21", author:"Allan Hardy", is_merge:false, message:"disable nat gateways in vpc to save cost for now"}}, {hash:"f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac", properties:{date:"2021-07-02 20:29:05", author:"Allan Hardy", is_merge:false, message:"disable nat gateways in vpc to save cost for now"}}, {hash:"b26b9e5d1b13602a4c192d9697a12df7770906b2", properties:{date:"2021-07-02 20:30:32", author:"Allan Hardy", is_merge:false, message:"disable nat gateway save cost"}}, {hash:"6085ce34a95fbc4a8d651a3f6a0405811952af93", properties:{date:"2015-06-05 10:07:42", author:"Dan Carley", is_merge:false, message:"aws: Remove router-int load balancer\n\nThis was used by Ansible on AWS to configure the Nginx sslproxy machines to\nreverse-proxy to the routers. The hostname was referenced in the variable\n`hipache_host_internal_lb`. We no longer need this since moving Nginx to the\nsame machines as the router.\n\nAlthough we might want to revisit this again later when we test one\napplication talking to another application through the router - which we\nwouldn't want to pay external traffic for."}}, {hash:"998be8119321e8812884075b078a1d5fb36cfa69", properties:{date:"2021-12-04 10:12:57", author:"Claudson Oliveira", is_merge:false, message:"Use EC2 spot instances to reduce cost"}}, {hash:"ce576be106257496e20d946d6eab5f8783dada92", properties:{date:"2020-12-07 15:23:32", author:"Alex Chan", is_merge:false, message:"Use gp3 for our persistent EBS volumes\n\nIt's ~20% cheaper and the 3000 IOPS we previously got as burst are now\navailable as sustained, for free."}}, {hash:"4b495fef39e68590aea98af324340adafadfb334", properties:{date:"2021-05-27 15:22:35", author:"Alex Chan", is_merge:false, message:"Only run a single RDS instance for Archivematica\n\nWe don't put much load on the database, and each db.r5.large costs ~$170/mo."}}, {hash:"7e1b0531992b592980c232994b7248801073fcd0", properties:{date:"2017-05-19 17:50:16", author:"Paul Bowsher", is_merge:false, message:"Configure VPC\n\nUses Ash’s NAT instance module for a t2.nano instead of the expense of\nan AWS NAT Gateway."}}, {hash:"197502b1ac4bab77b9ab017b755c4d75ddaa218b", properties:{date:"2020-01-07 16:05:31", author:"sco0k", is_merge:false, message:"Add billing alerts"}}, {hash:"cebf7f883b1325a4db1c0e7b3cd0d6684a7c41b0", properties:{date:"2020-01-09 12:14:24", author:"sco0k", is_merge:false, message:"Fix billing alert subscriptions"}}, {hash:"516075e2987bdd1063f22768d451c1c1eb647175", properties:{date:"2022-03-26 11:33:30", author:"Matthias Kay", is_merge:false, message:"feat: add spot instances to save costs (#41)"}}, {hash:"840ed0938bea8867caba921446b8a77a2f1c9e7d", properties:{date:"2022-03-26 11:49:27", author:"Matthias Kay", is_merge:false, message:"docs: add cost estimation based on 1.9.1 (#43)"}}, {hash:"894fb1d80c7a3953b7a51d7acd5e9b942faced8f", properties:{date:"2019-01-14 09:26:47", author:"Andrew Graham", is_merge:false, message:"added ability to sleep nat gateway to save cost when idle"}}, {hash:"4f641b162fa877aef842481631906d5bfe874781", properties:{date:"2017-01-09 15:00:00", author:"Dan Buch", is_merge:false, message:"Drop down some staging instance sizes for great cost savings glory\n\n- 2 * c3.4xlarge + 2 * t2.medium =~ $1295/mo.\n+ 2 * c4.large + 2 * t2.micro =~ $164/mo."}}, {hash:"0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6", properties:{date:"2018-03-14 20:49:14", author:"Dan Buch", is_merge:false, message:"Use a custom machine type for NAT hosts\n\nper recommendation from GCE, thereby reducing monthly costs by ~$21/host\nin production."}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"0c38902905b96c598715a08d5c3880ad01ce5fea", properties:{date:"2022-03-20 22:46:10", author:"Emmanuel Yasa", is_merge:false, message:"changes:\n* setup fake service as api and web\n* make use of bastion as client-web (to minimize aws costs)\n* attach necessary security group and user data to bastion instance to act as a consul client\n* removes unnecessary security group on client"}}, {hash:"fed8be2748bc2286a6f9888d282d66763ba612ed", properties:{date:"2022-05-09 11:24:21", author:"Justin O'Connor", is_merge:false, message:"default dynamodb to pay per request"}}, {hash:"cfe92035f1b281cddfcf62664ec6b96e85e0ac32", properties:{date:"2017-01-25 23:24:58", author:"Alexey Kuleshevich", is_merge:false, message:"improved persistent-ebs-volumes module, made encryption optional. lowered default instance types for ELK stack to reduce dev/test costs"}}, {hash:"6488091456429ed61264b9cad841eeb6bf871e32", properties:{date:"2017-11-07 15:35:45", author:"Timothy Mower", is_merge:false, message:"Use all of available glacier time for backups\n\nGlacier charges an [early delete\nfee](https://aws.amazon.com/premiumsupport/knowledge-center/glacier-early-delete-fees/)\nfor deleting objects which are stored for less than 90 days. This\nappears to be calculated by charging you for 90 days of storage\nregardless of the length of time things are stored in glacier, and\ncalling this an early deletion fee. This is a footnote on the [pricing\npage](https://aws.amazon.com/glacier/pricing/) which reads\n\n> Glacier archives have a minimum 90 days of storage, and archives\n> deleted before 90 days incur a pro-rated charge equal to the storage\n> charge for the remaining days\n\nWe may as well make use of this\nadditional time as we are already paying for it through the early\ndeletion fee."}}, {hash:"6cfda6ada5137b232ff442ae9f2aedc8520ee1b4", properties:{date:"2017-11-30 13:52:52", author:"Dean Wilson", is_merge:false, message:"Move from m4.large to m5.large\n\nThe new gen have more CPU and are cheaper.\n\n           ECPU\nm4.large   6.5  8  EBS Only  $0.111 per Hour\nm5.large   10   8  EBS Only  $0.107 per Hour"}}, {hash:"aeb3bfbe393cdfc02e62b812843ed75cf5f245e4", properties:{date:"2017-11-30 13:57:19", author:"Dean Wilson", is_merge:false, message:"Move from m4.xlarge to m5.xlarge\n\nThe new gen have more CPU and are cheaper."}}, {hash:"5fa5da9756f12559b490217dd5b173db48e7f2a9", properties:{date:"2018-01-08 11:29:22", author:"Ana Fernandez", is_merge:false, message:"Resize graphite machine type\n\nUpdate machine type to m5.xlarge. It should be cheaper, we tried to\nresize it before but it didn't work because of disk labels. Trying again\nafter the 'Device' tag was added to the EBS volume."}}, {hash:"2ee1ff690416016dfed50dab6f516559f2270bf9", properties:{date:"2018-04-16 09:59:01", author:"Paul Bowsher", is_merge:false, message:"Make our monitoring instances m5.large instead of t2\n\nThe monitoring instance that runs Icinga and Smokey in Integration has\nbegun running out of CPU credits. This is making it difficult to\ndiagnose problems elsewhere in the stack. Making it an m5.large costs\n~$77pcm instead of ~$36pcm, and doubles the RAM."}}, {hash:"cc8cb3ab5e257109ea9f6c19f4d034b1ac7ca4ca", properties:{date:"2020-01-07 16:17:46", author:"Robert Kenny", is_merge:false, message:"Snapshot bucket (#4132)\n\n* Adds an S3 bucket for Elastic Cloud snapshots\r\n\r\nWe currently rely on Elastic Cloud to hold our snapshots for the catalogue API ES cluster.\r\n\r\nIn order to make working with Catalogue API ES data easy to do locally and to do outside of Elastic Cloud for reduced time and expense, it is useful and more arguably more reliable to hold these in an S3 bucket we have direct access to.\r\n\r\nTo complete this change we will need to make some changes to the Elastic Cloud configuration.\r\n\r\nSee: https://www.elastic.co/guide/en/cloud/current/ec-aws-custom-repository.html\r\n\r\n* add some documentation for ES snapshot storage\r\n\r\n* moved to critical stack\r\n\r\n* principals needs to be a list"}}, {hash:"d7afb9018e20ef85f1fbee2300dbf5c5cdf3cb0e", properties:{date:"2019-03-28 15:39:00", author:"Igor", is_merge:false, message:"Re-create live-1 MTP resources in AWS eu-west-2\n…excluding prod RDS which is expensive and not yet needed"}}, {hash:"a39ed520b0048d54886d16c10c988ca905f64c58", properties:{date:"2021-05-22 23:08:00", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"19d187e4a29147cbcf1cfae456cfcbfa8ad52b45", properties:{date:"2019-02-07 09:51:39", author:"Ruben Arakelyan", is_merge:false, message:"Increase PostgreSQL primary DB to next instance class\n\nThis commit increases the PostgreSQL primary DB instances to the next instance class to provide more CPUs and RAM. This is due to CKAN now using this database, resuting in increased load. The instances are changed from M4 to M5 since they have improved performance and are cheaper for the equivalent instances than M4.\n\nThe changes will be made during the next maintenance window, which is Monday 4-6am, since `apply_immediately` is not set and defaults to `false`."}}, {hash:"5d30d7d7ca658bed21677b1aa56c72a0e0cd737b", properties:{date:"2019-02-19 12:04:31", author:"Karl Baker", is_merge:false, message:"Upgrade data-science-2 instance type tp p3.8xlarge\n\nThis commit upgrades the `data-science-2` EC2 instance type from `p3.2xlarge` to `p3.8xlarge`.\n\nThis instance is being used to evaulate the implementation of a GraphSAGE algorithm which will be used to generate related links for content pages across GOV.UK. To perform this evaluation, it is necessary to run the algorithm against a set of sample data.\n\nCurrently on the `p3.2xlarge` instance, it takes approximately 20 minutes to evaluate one page of the sample data (one content item) using the algorithm. By switching the instance type to `p3.8xlarge`, we roughly estimate that this time can be brought down to 5 minutes per page of the sample data.\n\nBy speeding up the evaluation process, we will be able to determine the suitability of the algorithm for the purpose of generating related links and will then productionise the process to be able to evaluate ~200K content items for the actual A/B test.\n\nIn terms of cost (at the time of writing), the `p3.8xlarge` is priced at $12.24/hr; we anticipate that we will need up to 8 hours of compute time, which would result in a total cost of $97.92. In comparison, the `p3.2xlarge` currently costs $3.06/hr - this would result in the same total cost of $97.92 as we anticipate it would take up to four times as long to completely evaluate our sample data."}}, {hash:"fbd513a3c74bf20ecdb67a4243d30356e8b86a01", properties:{date:"2019-05-15 10:30:10", author:"Sebastian Schmieschek", is_merge:false, message:"Bump the search instance size from t2 to c5\n\n- We have been seeing search-api instances run out of CPU credits. At\nthe moment they are manually set to be \"unlimited\".\n- Using c5 removes CPU credits. As we seem to be using burst mode 30-40\npercent of the time, this change should not increase cost.\n\nsolo: @schmie"}}, {hash:"74fe1ac392549eb3aad67d239310b92cc9f0dd10", properties:{date:"2019-05-21 12:35:34", author:"Camille Descartes", is_merge:false, message:"Update app-elasticsearch5 for Training environment\n\nAdd backend to build app-elasticsearch5 in the Training environment.\n\nAdd parameters to select which domain to use with the DNS records (Training\ndoes not use the stack domain).\n\nTraining elasticsearch runs with with fewer instances and t2.smalls to save\non costs."}}, {hash:"ed67711a54ca65473c9c7b788161d680914ef1c7", properties:{date:"2016-04-14 14:04:01", author:"jonauman", is_merge:false, message:"sets up S3 bucket for transition logs\n\nWe want the lowest-cost storage class for these logs as they will\nseldomly be accessed, such as in a DR scenario. Unfortunately\nterraform does not currently support lifecycle configuration, so\nwe will need to manage this aspect manually."}}, {hash:"ac105ab0a5ae38fbf69167e072f8970a4a61c3e8", properties:{date:"2016-07-18 16:06:47", author:"Laura Martin", is_merge:false, message:"Enable lifecycles on MongoDB backup buckets\n\nWe have two different buckets:\n\n - The bucket which contains full backups taken every 15 minutes expires\n   after 7 days\n - The bucket which contains daily backups moves objects into cheaper\n   storage after 30 then 60 days, and then expires after 90 days"}}, {hash:"5199e517f5e08b8bed3f96334b102814b3e99200", properties:{date:"2020-10-15 14:56:02", author:"David Salgado", is_merge:false, message:"Add namespace tag to replica database\n\nThe replica RDS instance does not have a value for \"namespace\", so its\ncosts are not being allocated correctly."}}, {hash:"137c1c3085bb95b74e2d5a695c3343ca25830fd3", properties:{date:"2018-10-19 12:30:40", author:"Michael Moussa", is_merge:false, message:"Fix error when creating 0 instances\n\nWhy would anyone want to create zero instances?\n\nSuppose there are templates being re-used for multiple environments, and in\na development or test environment, multiple major application roles/functions\n(let's call them \"foo\" and \"bar\") are handled by a single instance to save on\ncosts. In production, however, each major application role lives on its own\ninstance(s) for better resiliency.\n\nSince Terraform doesn't support conditional invocation of modules,\nspecifying an `instance_count` of `0` for \"foo\" and \"bar\" in dev/test\nand an `instance_count` of `1` for \"foobar\", while specifying an\n`instance_count` of `1` for \"foo\" and \"bar\", respectively, and `0` for\n\"foobar\", would permit reuse across environments and avoid a lot of\ncopy-paste that may drift.\n\n**Note:** The SSM document association portion was the only part of this\ntemplate that was currently producing errors, so it's the only one I\naddressed. This will technically still create all of the other base\nresources like roles, iam policies, etc. We can tie those to\n`instance_count` as well, if desired."}}, {hash:"e91c7912b25beb51199ccfff2414668bcc69186e", properties:{date:"2020-01-31 15:24:34", author:"Karl Baker", is_merge:false, message:"Change instance type to r4.2xlarge\n\nThe Knowledge Graph is running out of memory on start-up when it generates the data it needs. Changing the instance type from `m5.2xlarge` to `r4.2xlarge` doubles the amount of RAM available (from 32GB to 64GB), whilst minimally increasing cost."}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"ef79a5aec29133d4c479652863c61f943fbdb42b", properties:{date:"2020-02-28 11:57:17", author:"Issy Long", is_merge:false, message:"postgresql: Bump production database instance size to db.m5.8xlarge\n\n- We're seeing spiky CPU usage, going up to 99%, when scheduled\n  publishing occurs at 0930, and emails are sent out at various points\n  during the day.\n- Tuning the apps would take longer and maybe not even be feasible as\n  scheduled publishing has to happen, and so does sending urgent emails.\n- We could investigate splitting the databases out into\n  `publishing-api-postgresql` and `email-alert-api-postgresql`, but we\n  attempted that before and [resolved to not do\n  it](https://github.com/alphagov/govuk-aws/commit/c51e8bbf879dd867b73bec4f71ba7271703e1909)\n  (also for\n  [publishing-api](https://github.com/alphagov/govuk-aws/pull/1086/commits/3f7cc071b4361e5df15ac1dfb2a1e3c565bb8678)).\n- According to\n  https://www.ec2instances.info/rds/?region=eu-west-1&cost_duration=monthly,\n  base cost for the old instance type is ~$1150/month. The bigger\n  instance type specified here costs ~$2300/month. That's an increase of\n  $1150 / month, or  $13,800 / year."}}, {hash:"6283dd7b80fd26ff09d242555a6e56c2eb75471b", properties:{date:"2020-03-16 15:35:19", author:"Issy Long", is_merge:false, message:"postgres: Increase instance size to db.m5.12xlarge\n\n- We're using too old a Postgres version (9.6.old-patch) for Amazon to\n  let us use `db.m5.8xlarge`:\n\n```\n* module.postgresql-primary_rds_instance.aws_db_instance.db_instance: 1 error occurred:\n* aws_db_instance.db_instance: Error modifying DB Instance blue-postgresql-primary: InvalidParameterCombination: RDS does not support creating a DB instance with the following combination: DBInstanceClass=db.m5.8xlarge, Engine=postgres, EngineVersion=9.6.11, LicenseModel=postgresql-license. For supported combinations of instance class and database engine version, see the documentation.\n```\n\n- Instead, we're upgrading to the next unrestricted database instance.\n  This costs an extra $2254/month compared to what we have _now_\n  (`db.m5.4xlarge`)"}}, {hash:"b4094f63c5d4a216ed7ade1a51ea3653222cf222", properties:{date:"2020-12-22 15:39:29", author:"Richard Towers", is_merge:false, message:"Configure memcached_instance_type\n\nWe probably want to use a smaller memcached instance in integration (and\nlower environments), as the default costs about $2k / year.\n\nWe'll raise a govuk-aws-data PR to set this to cache.t3.small in\nintegration."}}, {hash:"f844cd8e254b161bebef04101f8ce177bcd0840c", properties:{date:"2021-01-06 15:53:43", author:"Karl Baker", is_merge:false, message:"Add lifecycle rules within govuk-data-infrastructure-integration bucket\n\nThis commit adds lifecycle rules within the `govuk-data-infrastructure-integration` bucket to keep only the last 30 days of data. This is necessary as we currently hold more data which is never used, so by only keeping the most recent month's worth of data we can reduce costs and remove noise."}}, {hash:"806b1a2a47f2f4e580e524b2cf8cc5928749d972", properties:{date:"2021-07-06 18:01:03", author:"Chris Banks", is_merge:false, message:"Make Prometheus storage volume configurable and upgrade to gp3.\n\nThis enables us to add more timeseries storage space in prod, which was\nrunning out.\n\ngp3 is cheaper and faster, so no reason not to use it."}}, {hash:"8d7d2ebe0dbe9ebf8009572d1d710c4700cf245e", properties:{date:"2021-11-03 16:31:21", author:"Chris Banks", is_merge:false, message:"Use cheaper and faster gp3 storage for CI agent EBS volumes.\n\ngp3 is 20% cheaper than gp2 and includes 3000 IOPS at any size instead\nof 3 IOPS/GB. This should speed up builds at least a bit.\n\nWhile we're there, define the values once instead of copy-pasting."}}, {hash:"d7f24bafaa9f80e9d3e834dc34b8fbe950a6c437", properties:{date:"2022-02-27 19:39:10", author:"Max Curran", is_merge:false, message:"Stop hosting in GCP as it's very expensive"}}, {hash:"e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66", properties:{date:"2017-07-15 18:37:55", author:"Ivan Fetch", is_merge:false, message:"feat(vpc): Optionally use NAT instances instead of NAT gateways\n\nIF NAT instances are used, optional inputs are whether to use Elastic\nIPs, an SSH key name, and the EC2 instance type. The latest Amazon VPC\nNAT AMI is used. The use of NAT instances can be less expensive than NAT\ngateways for development VPCs. NAT instances can be stopped when not in\nuse."}}, {hash:"782a0a3c30cf83bcaeacc942789ccc903576fe8a", properties:{date:"2022-04-13 10:29:34", author:"Mevan Samaratunga", is_merge:false, message:"allow configuring node without eip or fixed domains allowing for a minimal low-cost setup"}}, {hash:"2709680d633653ca9bd68a023981a75427daaa7a", properties:{date:"2021-08-14 19:16:22", author:"Artur Tamborski", is_merge:false, message:"convert bastion to NAT GW, change type to cheapest one avaiable"}}, {hash:"81dc1d3f98034672d5f62f440f2cc3abc58ce2a2", properties:{date:"2020-12-09 15:45:28", author:"masa3", is_merge:false, message:"fixed cost"}}, {hash:"a873443bd618ac9c14d12210ed4d12a11cc1f733", properties:{date:"2019-05-15 21:14:38", author:"exequielrafaela", is_merge:false, message:"BBL-33 nat gateway disable in binbash-dev account for cost saving purposes"}}, {hash:"19c37f7e4e65d14e760f1ff8cf60cfd1e98c1a8b", properties:{date:"2019-05-15 21:14:38", author:"exequielrafaela", is_merge:false, message:"BBL-33 nat gateway disable in binbash-dev account for cost saving purposes"}}, {hash:"bbfbd2484ace2819ffceac9155b995ab870ee3a3", properties:{date:"2019-05-15 21:14:38", author:"exequielrafaela", is_merge:false, message:"BBL-33 nat gateway disable in binbash-dev account for cost saving purposes"}}, {hash:"ccd141993815d0b1f444d12bbd2bdcdd9548e20e", properties:{date:"2022-02-08 16:16:10", author:"Pat Heard", is_merge:false, message:"feat: set satellite bucket object expire to 14 days (#118)\n\nUpdate the S3 module version so that it is possible to control if\r\ndelete markers are replicated to the destination bucket.\r\n\r\nBy doing this, and not enabling delete marker replication, it means\r\na shorter object expiration of 14 days can be set on the satellite\r\nbucket objects which will save storage costs.\r\n\r\nThe central log archive bucket will keep its 90 day object expire\r\nlifecycle rule so we'll still have the logs if needed."}}, {hash:"10bb572d477197bd3874532bfd364de1cb496d05", properties:{date:"2022-02-24 11:28:29", author:"Pat Heard", is_merge:false, message:"feat: CloudWatch alarm for billing changes (#126)\n\nAdd a CloudWatch alarm, SNS topic and Slack notification Lambda\r\nfor estimated billing changes that are greater than a percentage\r\nchange threshold in a six hour period.\r\n\r\nNote that billing alerts must be enabled on the payer account\r\nfor the `EstimatedCharges` metric to be available in CloudWatch."}}, {hash:"ad9ba03731ec0520164bb23a90968f2100dca517", properties:{date:"2022-05-03 14:22:34", author:"Cheyenne", is_merge:false, message:"Update billing alarm (#143)\n\n* Update billing alarm\r\n\r\nChanging the period to 12 hours because according to AWS:\r\n\r\n>The ML algorithm we use currently works well with dense data that exhibit seasonality and trends. In this case, since this metric is expected to have only 1 datapoint every 12 hours, this feature may not work well for this metric...(metric being 'billing' in this case)\r\n\r\nSo in light of this increasing period to 12 hours, and number of evalution periods to compare to alarm points.\r\n\r\n* Revert comparison operator"}}, {hash:"cd97b1881cb0d1c145b8b6236a3702a970c671c2", properties:{date:"2021-03-27 19:13:15", author:"Kakaranish", is_merge:false, message:"+ added persistent_resources for \"cheap\" resources creation"}}, {hash:"2afa0c4652393014778f9b2fefcf975d6ca22ae2", properties:{date:"2019-11-14 23:51:48", author:"exequielrafaela", is_merge:false, message:"jenkins stack temporary destroyed to save costs"}}, {hash:"7a9c468b88d2edee19007cff6529a20a38eeb363", properties:{date:"2020-09-14 16:30:08", author:"Jeff McCune", is_merge:false, message:"Add preemptible input var, defaults to false\n\nPreemptible instances are 20% of the cost of normal instances, which are\nwell suited for development and testing."}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"620750695d8f83d79451948d2a43bf920b48c062", properties:{date:"2020-09-25 17:12:47", author:"Jeff McCune", is_merge:false, message:"Autoscaler\n\n * Setup iperf on endpoints for autoscale testing\n * Configure endpoints in the same zone to reduce zone egress network\n   costs.\n * Switch endpoints to Debian 10 for iperf2 multi-client support\n * Run iperf directly from the startup script, it was misbehaving when\n   run from systemd.\n * Run 180 sequential iperf runs, 10 seconds each to create persistent\n   upward pressure on the autoscaler and TCP window sizes.\n * Add role label with value of multinic-endpoint, iperf-client, or\n   iperf-server to help build charts in the Monitoring console.\n * Set max replicas per zone to 6"}}, {hash:"f5b50d8dfbec87dba0b824369021dc6b22058840", properties:{date:"2021-05-15 08:35:49", author:"Fahd Rahman", is_merge:false, message:"Choosing only availabilty zone for cost optimaization"}}, {hash:"6de6d83d930bd9459e1cf8c311fa7b45c3f90987", properties:{date:"2019-11-06 14:43:22", author:"Gary Bland", is_merge:false, message:"Removed extraneous global secondary indices that just cost money"}}, {hash:"2bd01358b3a30d1680074f9bbd120da3a1456450", properties:{date:"2020-03-30 16:45:26", author:"Stephen Badger", is_merge:false, message:"Switch to a public-only setup\n\nAside from being cheaper to operate due to not having a NAT gateway, \nthis should help understand the benefits and limitations of calico."}}, {hash:"71f034f3e13e9118a2a954e1fc3c0d35153184f0", properties:{date:"2020-08-27 15:48:07", author:"Idan Elad", is_merge:false, message:"add billing budget and cerebro project (#1)\n\nadd billing budget and cerebro project"}}, {hash:"0208ae3bc238f029b1faf6bdc3552dbe6147657b", properties:{date:"2021-01-19 10:29:12", author:"Diego OJeda (BinBash)", is_merge:false, message:"Rename EKS 'vpc' layer as 'network' and fix an issue with nodes not b… (#175)\n\n* Rename EKS 'vpc' layer as 'network' and fix an issue with nodes not being able to join the cluster due to NACL rules blocking traffic between private subnets\r\n\r\n* Disable NATGW to save costs"}}, {hash:"ddcc1a8abc1d29e8e32ed3c2e92ed9755dd17014", properties:{date:"2020-10-16 14:22:41", author:"David Salgado", is_merge:false, message:"Add \"namespace\" tag to created Elasticache cluster\n\nFor cost allocation."}}, {hash:"8a71bbe9588b78351fe231a4341d07a5e2101ebb", properties:{date:"2018-11-29 23:18:17", author:"Bhavik Kumar", is_merge:false, message:"Add billing policy to admin group"}}, {hash:"bac050d515cd6991e17cd1a34197d84982f5931d", properties:{date:"2018-03-08 17:23:34", author:"Royce Remer", is_merge:false, message:"Gcp (#1)\n\n* switch to google cloud (cheaper and more performant)\r\n* break aptdaemon dep out of compute provisioner into its own module\r\n* rm ntp module, since minecraft server complains about time changes and does not require perfect time\r\n* setup acls for ssh from generated public nat ip of provisioner\r\n* assert/generate public rsa key from private on provisioning\r\n* deploy with persistent volume"}}, {hash:"c00d24a1626e7d88a33431e4b403651acf158e05", properties:{date:"2021-01-21 11:52:56", author:"Diego OJeda (BinBash)", is_merge:false, message:"EKS updates (#177)\n\n* Rename EKS 'vpc' layer as 'network' and fix an issue with nodes not being able to join the cluster due to NACL rules blocking traffic between private subnets\r\n\r\n* Disable NATGW to save costs\r\n\r\n* Update EKS private subnets NACL to allow all traffic betwen them. Also fix the highest port number in another rule"}}, {hash:"0662f7e1bfc70e21d8229e142b98b6c303addbc3", properties:{date:"2021-10-27 13:41:22", author:"Luis M. Gallardo D", is_merge:false, message:"Change to SNS topic for costs"}}, {hash:"772c5ad20818738b09d01cd70ca3de80cbf66dcb", properties:{date:"2020-08-06 18:55:06", author:"Elliot Pryde", is_merge:false, message:"Disable a few of the health checks to reduce costs"}}, {hash:"7c4205cd130c5463d7f39aa6f281e198c143d0d9", properties:{date:"2021-05-20 20:18:27", author:"Elliot Pryde", is_merge:false, message:"reduce number of health checks to save on costs"}}, {hash:"af5af0b8e6a59a9c5879fde7eaaa86d694c2bfa2", properties:{date:"2020-08-27 15:23:11", author:"dexterchan", is_merge:false, message:"reduce cost by reducing vpc endpoint deployment to one subnet only"}}, {hash:"89fd3ebb3ba1ccc9a9019ad250b93a336d4bc03e", properties:{date:"2022-04-19 13:04:46", author:"exequielrafaela", is_merge:false, message:"Adding kms permissions for SNS encrypted topic + std cost-management alerts in proper topic"}}, {hash:"bded5e3007349a6c47c509336ee9306d234902d6", properties:{date:"2019-12-31 21:01:25", author:"ssfsx17", is_merge:false, message:"define SSH keypair for bastions through variable\nwork on private VPC module some more - untested due to cost"}}, {hash:"ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead", properties:{date:"2018-02-07 14:47:40", author:"Gregory Szorc", is_merge:false, message:"Add s3 bucket to store Mercurial backups\n\nWe have several gigabytes of old repos sitting on an NFS volume\nin SCL3. It's cheaper to store them in S3. Plus, we'll soon be\nmigrating a bunch of data and it is easier if we have less data to\nmigrate."}}, {hash:"e2295fe41d430f42795605b6356e69b393625999", properties:{date:"2020-03-19 10:41:46", author:"Max Jahn", is_merge:false, message:"Changed ExpressRoute tier to Local to avoid cost for egress traffic"}}, {hash:"484b85587d32f2f2a6d54ffe16d5c759841961f8", properties:{date:"2021-05-22 23:00:53", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"4eed76f9bfd4f93181660178ea689d98cd6d66d5", properties:{date:"2018-02-22 15:07:36", dmm_unit_complexity:1.0, author:"Austin Davis", is_merge:false, dmm_unit_interfacing:1.0, message:"removed private subnet/nat to reduce cost", dmm_unit_size:0.0}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7", properties:{date:"2020-01-27 23:04:10", author:"Kazuki Sawada", is_merge:false, message:"cost optimization"}}, {hash:"c16481a84d5823b65ce96bd811a265222385b43b", properties:{date:"2020-01-22 21:45:52", author:"Jonathan Rau", is_merge:false, message:"Reduced preset variables for better cost optimization"}}, {hash:"f0bbb7e656d0f9785f1cc7cead6b420e1862f4df", properties:{date:"2020-12-31 15:10:06", author:"Michael", is_merge:false, message:"Allow easy deploy/tear down of dev agent\n\nTo avoid costs of long lived instances I made this to let me apply / destroy\nagents as needed along with updating my ssh config\n\nThis should let me have a custom on demand box as needed."}}, {hash:"ce89df3cebc6487146391afe9517661053229f77", properties:{date:"2022-01-24 07:54:43", author:"tbirk-bhs", is_merge:false, message:"optimize costs"}}, {hash:"b49579fbecbe8002932fdfb86146f83efd60bfcf", properties:{date:"2022-01-24 08:49:17", author:"tbirk-bhs", is_merge:false, message:"optimize costs"}}, {hash:"8733c7f4d1b395d6a8e236d0106cfae56d4ded06", properties:{date:"2022-02-22 11:54:49", author:"Marty Fox", is_merge:false, message:"Removing SNS and alarm actions from Development account as unnecessary cost"}}, {hash:"e5dd13d33c1e927f932971d067d8f70e9041b5f3", properties:{date:"2019-12-16 14:14:28", author:"David Salgado", is_merge:false, message:"Reduce live-1 worker node instance size\n\nThis changes the worker nodes from r5.2xlarge to\nr5.xlarge\n\nThis change should still leave plenty of extra\ncapacity to accomodate some growth, while saving\nthe MoJ almost $5,000/month in AWS hosting costs.\n\nNB: After merging this change, we need to do a\nkops update and rolling update of the cluster,\nbefore the change takes effect."}}, {hash:"271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0", properties:{date:"2020-07-16 09:36:58", author:"Alex Chan", is_merge:false, message:"Add a VPC endpoint for S3\n\nThe lack of any VPC endpoints is a non-trivial cost – about $400 a month\nin managed NAT Gateway, and that was before anybody started using\nArchivematica for serious work.\n\nThis change adds an S3 VPC endpoint to the workflow and workflow-stage\nVPC, which should dramatically cut those costs.\n\nI haven't set up other endpoints yet because I'm not sure what other\nservices we're using; I'm guessing S3 is probably the bulk of the load."}}, {hash:"b9750f0bb88bc22256085b6bc8f060055e90a8c4", properties:{date:"2021-07-02 11:01:35", author:"Grant Young", is_merge:false, message:"Update AWS disk type to gp3\n\ngp2 is bursty and can lead to performance issues.\ngp3 is also cheaper."}}, {hash:"aef45215a4fe18d7fd03b7556fa3070815c57a22", properties:{date:"2020-11-14 11:40:55", author:"Andrew Graham", is_merge:false, message:"init kms seperately to save cost"}}, {hash:"e88177b8ea5d4ef9f53f70ade27232de7a360800", properties:{date:"2021-05-15 10:00:55", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"3378831be84bb1825c847a001c3c240318d991dc", properties:{date:"2021-08-11 16:53:46", author:"Evgeniy Polyarush", is_merge:false, message:"minimized db server costs"}}, {hash:"28b9313a2bb11c357deeaa256950fb0acf220bc4", properties:{date:"2021-08-11 16:53:46", author:"Evgeniy Polyarush", is_merge:false, message:"minimized db server costs"}}, {hash:"3228ee1c5bfdf89e57e898659b086364122d58c1", properties:{date:"2022-03-28 01:28:42", author:"98WuG", is_merge:false, message:"Move to Rocky Linux instead of RHEL no-cost license"}}, {hash:"e3b6520960a88aacbf03339dc1368f680a8bee9a", properties:{date:"2022-03-03 21:11:07", author:"Robert de Bock", is_merge:false, message:"Development cheaper, deduplicate, fix and sort ami_patterns."}}, {hash:"cca186a0f7165b361f372c87524011e91b28f41a", properties:{date:"2021-06-02 16:29:25", author:"Darren Oakley", is_merge:false, message:"Delete the test SQL Server databases\n\nThey're not needed just yet and they're pretty expensive to leave just\nsitting there..."}}, {hash:"9e3285b91b2a95271c3b4d0c8777f5363bfdfd40", properties:{date:"2021-02-08 08:14:40", author:"Major Hayden", is_merge:false, message:"Remove external VPC endpoints\n\nInterface-style VPC endpoints are not needed for our external\ninfrastructure and they are causing our AWS bill to increase by a large\namount.\n\nSigned-off-by: Major Hayden <major@redhat.com>"}}, {hash:"f6c64d1b6ed367803a833da293e84d61573a7fd8", properties:{date:"2020-02-07 14:56:06", author:"Tomasz Setkowski", is_merge:false, message:"[PRMT-932] Added DNS servers as part of MHS deployment\n\nThis allows to stop using expensive AWS DNS resolver.\n\nWe only need to forward the ncrs.nhs.uk to the HSCN DNS servers. It is\nnot accomplished by having 2 EC2 instances running an unbound DNS."}}, {hash:"2eb42357d986ad2c3d8693907df99895cee25c63", properties:{date:"2018-04-20 14:45:07", author:"Senai Asfaha", is_merge:false, message:"Added new policies to prevent users causing huge costs; created  changelog.md"}}, {hash:"189d96ce0f96c107ebf62dbaf73734e6fd20883a", properties:{date:"2018-05-06 23:21:53", author:"Dalton Hubble", is_merge:false, message:"Use global HTTP/TCP proxy load balancing for Ingress on GCP\n\n* Switch Ingress from regional network load balancers to global\nHTTP/TCP Proxy load balancing\n* Reduce cost by ~$19/month per cluster. Google bills the first 5\nglobal and regional forwarding rules separately. Typhoon clusters now\nuse 3 global and 0 regional forwarding rules.\n* Worker pools no longer include an extraneous load balancer. Remove\nworker module's `ingress_static_ip` output.\n* Add `ingress_static_ipv4` output variable\n* Add `worker_instance_group` output to allow custom global load\nbalancing\n* Deprecate `controllers_ipv4_public` module output\n* Deprecate `ingress_static_ip` module output. Use `ingress_static_ipv4`"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"1c619d5df3f2e7f49dd9a3a47150aa41b0de497f", properties:{date:"2021-07-26 18:19:47", author:"Emmanuel Ojeah", is_merge:false, message:"separate delegation set ID\n\nseparating delegation set ID ensures that the same name servers are not destroyed when trying to destroy all resources to save cost\n\nrunning terraform destroy main.tf will not destroy the delgation set id\n\nhttps://stackoverflow.com/questions/60823339/deterministic-name-server-addresses"}}, {hash:"be1245d8634025277ba79a4155ee88d7eaffcdfb", properties:{date:"2019-04-19 13:00:22", author:"Keith McDuffee", is_merge:false, message:"- Updated Ubuntu to 16.04\n- Instance type is not t3.nano (cheaper)\n- terraform fmt\n- Modifications to userdata.sh to adhere to new Ubuntu version, DNS\nchanges, and handling of apt upgrade without CLI."}}, {hash:"4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942", properties:{date:"2020-12-13 08:31:09", author:"dandill-eng", is_merge:false, message:"Updated VM size to B2s to reduce cost\n\nUpdated from A0 to B2s to reduce cost"}}, {hash:"bc7484cd34698f2724e5d9f241fd9f53d953e3a3", properties:{date:"2021-04-02 17:35:21", author:"Pat Heard", is_merge:false, message:"feat(alerts): billing threshold alert\n\nAlso includes Terragrunt project structure setup."}}, {hash:"908c3fd85a60090cdd06f6f4b46893ceeeaf99fb", properties:{date:"2019-09-20 22:08:04", author:"Sebastian Trebitz", is_merge:false, message:"enable cloudbilling.googleapis.com by default\n\nThe Cloud Billing API is required to attach a billing account to the\nproject."}}, {hash:"77116ea84b2e8d088c644723e787ad5d6d9677fd", properties:{date:"2020-12-09 13:57:27", author:"Charles Oliveira", is_merge:false, message:"terraform: s3: enable S3 Glacier backups\n\nThis will replicate any incoming data to S3 bucket into\na backup bucket with \"Glacier Deep Archive\" storage type [1].\n\nThis storage type costs $ 0.00099 / GB / month. It's dirt cheap\nand it's made for cases where rare access is required, like\nonce or twice a year.\n\nOnly drawback of this storage type is the retriving time. It might\ntake up to 12 hours to retrive a file storage in Deep Archive mode.\n\nStoring files in standard S3 storage already has a redundancy, so having\na backup is a fall back of a fall back if data ever gets lost at some\npoint.\n\n[1] https://aws.amazon.com/blogs/aws/new-amazon-s3-storage-class-glacier-deep-archive/"}}, {hash:"e4003aa3c51b789e2a2b5828768a7d0f34659209", properties:{date:"2020-01-30 08:29:56", author:"Bernardo Smaniotto", is_merge:false, message:"feat(terraform): remove private subnets and NAT setup\n\nThis is due an unnecessary cost increase due to the NAT pricing"}}, {hash:"48015a86eda461d99b580b69db5922acbe5bd28e", properties:{date:"2019-02-03 19:53:15", author:"Richard Hughes", is_merge:false, message:"Add billing budget"}}, {hash:"3c48151cd75447f7fbd3e6ce14c491cd28e2442c", properties:{date:"2021-03-25 11:47:50", author:"Kent 'picat' Gruber", is_merge:false, message:"Bump client machine type\n\nMight change back to the cheaper one by default, but having more power for clients out-of-the-box has been preferable in my situation."}}, {hash:"636097557e403eb1d6b6211b09e30c47e7f39466", properties:{date:"2021-01-26 12:46:46", author:"Mikael Kalms", is_merge:false, message:"Reduce build nodes to 16-vCPU, delays during bootups are costly"}}, {hash:"9edee1a04f6056f367ce5ef678775c1203d6a778", properties:{date:"2020-06-26 15:41:32", author:"Ramiz Polić", is_merge:false, message:"infra: switch to cheaper region"}}, {hash:"028bbe114d099b0388be9a46adcab80d9383a518", properties:{date:"2020-03-29 12:04:12", author:"Rob Mills", is_merge:false, message:"Add an AWS Budget for this service\n\nKeep costs under close supervision with an AWS Budget and notification.\nThe budgeted amount was based on the [ngrok.io pricing for the _Pro_\ntier](https://ngrok.com/pricing) since that's most comparable in terms\nof final features.\n\nFilters costs based on a customr _Service_ resource tag and sends an\nalert at 80% of forecasted monthly budget."}}, {hash:"da24f25924b6584137d7315e6eea61a31be86406", properties:{date:"2020-05-17 09:25:20", author:"Marcelo Boeira", is_merge:false, message:"Add CloudFront Section + Lab with Distribuction\n\nIt is disabled because of the costs, but it is easy to enable it"}}, {hash:"985612e94b1ba7d6a881c6b2fe074449f47dd45d", properties:{date:"2020-05-22 11:13:00", author:"Marcelo Boeira", is_merge:false, message:"Remove database and cache to avoid costs"}}, {hash:"7e135499d33f0a5c51602a506fefe258cac072c6", properties:{date:"2021-10-13 12:39:01", author:"arnhaa", is_merge:false, message:"cost alarm v1"}}, {hash:"de97a6b8033c866c3b711468207aa4890049daaa", properties:{date:"2019-11-23 23:47:33", author:"Sean", is_merge:false, message:"use a slightly cheaper instance"}}, {hash:"d5ac10f438b093d600047b0c9790e71bbbaa0ab2", properties:{date:"2021-05-17 17:22:16", author:"James Woolfenden", is_merge:false, message:"costing fo razure"}}, {hash:"44016d6a8e496b69308a81e88af8c9ef8b710ab3", properties:{date:"2021-09-30 19:14:57", author:"Dylan Taylor", is_merge:false, message:"Change root to 15GB to reduce storage costs"}}, {hash:"ab28ba331929475431fe695036d0863d329cdac2", properties:{date:"2021-05-18 08:24:40", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"c3c8dd8bebf14f91518253cadadc6d8a88b5ea09", properties:{date:"2020-10-18 15:33:49", author:"Jessica Blackburn", is_merge:false, message:"Add enabled variable (#56)\n\n## what\r\nThis allows the ALB to be created selectively.\r\n\r\n## why\r\nAs a cost saving measure, I want to be able to create an ALB per AWS account for a given application and then create multiple target groups.  \r\n\r\n## references\r\n* This addresses https://github.com/cloudposse/terraform-aws-alb/issues/55.\r\n* Closes #55"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"665692a86bb65ddfa6c001f296c76c17288e2944", properties:{date:"2020-05-11 19:40:40", author:"Sebastian J", is_merge:false, message:"Lower costs by deactivating verbose logging & long archive period"}}, {hash:"a252266af60f5ab828ad9b81b17bb7b16a2fc52f", properties:{date:"2017-07-12 16:21:46", author:"jonnyshaw89", is_merge:false, message:"Developer environment optimisations\nOptimised developer_defaults.tf to reduce cost of running dev environments\nUpdated default values to match production\nRemoved unused variable\nUpdated readme to target git commit rather and tagged version of alexeymedvedchikov.rabbitmq"}}, {hash:"79845fe095cd87287346f40d2adce9b28a32ef35", properties:{date:"2018-09-18 10:51:36", author:"jonnyshaw89", is_merge:false, message:"User t3 instances for ECS\n - They are cheaper and faster\n - Removed the max limits on DynamoDB"}}, {hash:"6eaf697bf9f111214a6d74ee3094e5784a57d1bb", properties:{date:"2019-01-31 15:13:20", author:"jonnyshaw89", is_merge:false, message:"Switch to on-demand billing for DynamoDB"}}, {hash:"c784bc0a3f747b66ab7cd01f23bbbdbad3bfe705", properties:{date:"2021-09-03 13:44:32", author:"Joe Ferris", is_merge:false, message:"Disable annotations/labels in logs by default\n\nFluent Bit can add the pod annotations and labels to log output which\nmakes it possible to find and aggregate logs by labels. While this could\nbe useful, it creates extremely large log entries, which can be\nexpensive in Cloudwatch.\n\nThis removes most of the Kubernetes metadata from the log output. It\nleaves namespace, container name, and pod name, which makes it possible\nto filter by a particular application or process."}}, {hash:"a662717d80209735e93b6b8e537f21b53c06b469", properties:{date:"2020-07-06 00:38:09", dmm_unit_complexity:1.0, author:"Cloud geek", is_merge:false, dmm_unit_interfacing:1.0, message:"Added project 2 files\n\nDesign, Provision and Monitor AWS Infrastructure at Scale\r\nIn this project, you will plan, design, provision, and monitor infrastructure in AWS using industry-standard and open source tools. You will practice the skills you have learned throughout the course to optimize infrastructure for cost and performance. You will also use Terraform to provision and configure AWS services in a global configuration.", dmm_unit_size:1.0}}, {hash:"70904707a36ff8e5167e695de3529d8318911ba4", properties:{date:"2022-02-12 11:35:47", author:"Holger Dunkel", is_merge:false, message:"cost update"}}, {hash:"ac39d3b9140e90bfd4b9eaa01200385bf10cc15d", properties:{date:"2020-04-16 16:59:36", author:"Abhi Yerra", is_merge:false, message:"Egress Only Internet Gatway (#97)\n\nReduce the cost of not running a NAT.\r\nLimits are you can only access IPv6 Endpoints."}}, {hash:"e8c7b2eb22d08ddd1a1bb375cb6efa4165c9098f", properties:{date:"2020-10-08 00:27:14", author:"Rui Deng", is_merge:false, message:"Change DynamoDB billing mode to On-Demand"}}, {hash:"0d7b5b0f6f92ff6cfde1f17ad96d1b1459a0957a", properties:{date:"2019-03-19 23:35:13", author:"Kunal Mishra", is_merge:false, message:"Updated example instances to use newer, cheaper instance types"}}, {hash:"99fd319a72d25441acf36fd2c167a875e9028935", properties:{date:"2021-10-26 16:29:13", author:"Jeremy Frasier", is_merge:false, message:"Upgrade the root volume type to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2."}}, {hash:"803640f6e77857520f69700ccc27c772ee7564e4", properties:{date:"2020-04-12 01:05:01", author:"Tom Larkworthy", is_merge:false, message:"Minecraft (#18)\n\nMinecraft recipe\r\n\r\nFeatures\r\n\r\nRuns itzg/minecraft-server Docker image\r\nPreemtible VM (cheapest), shuts down automatically within 24h if you forget to stop the VM\r\nReserves a stable public IP, so the minecraft clients do not need to be reconfigured\r\nReserves the disk, so game data is remembered across sessions\r\nRestricted service account, VM has no ability to consume GCP resources beyond its instance and disk\r\n2$ per month\r\nReserved IP address costs: $1.46 per month\r\nReserved 10Gb disk costs: $0.40\r\nVM cost: $0.01 per hour, max session cost $0.24"}}, {hash:"ddc29467494ee63c323d0eb6493de6e8440c113e", properties:{date:"2020-04-03 07:03:48", author:"Bill Baumgartner", is_merge:false, message:"consolidated oger node pools\n\nTo save cost when idle, the individual oger node pools (one for each ontology) have been replaced with a single node pool."}}, {hash:"81f82740760a357a86b3a77f9ed400624edcb218", properties:{date:"2020-01-17 08:55:48", author:"Dmitry Gorbov", is_merge:false, message:"DynamoDB costs optimisation"}}, {hash:"43bba3db97631d8730160950395fde42793adbc2", properties:{date:"2016-12-10 13:14:41", author:"Reid Burke", is_merge:false, message:"Migrate infrastructure to Microsoft Azure.\n\nMicrosoft offers $5,000/year in credits to non-profit organizations,\nincluding churches. This allows for us to eliminate all costs with\nrunning our live video system a few hours a week.\n\nhttps://www.microsoft.com/en-us/philanthropies/product-donations/products/azure\n\nDeployments take about 2-3 minutes, which is considerably worse than\nDigitalOcean which only took about 20-30 seconds. Teardowns are also\nworse: 10+ minutes instead of under 1 minute. The verbose specification\ncompared to DigitalOcean is also a bit more complex to understand.\nHowever, the price is right. Thanks Microsoft!"}}, {hash:"42c288d84b5f7853c36dcc55d181b8e16d3304a5", properties:{date:"2020-07-18 11:42:58", author:"Pumbaa's Dad", is_merge:false, message:"Fix billing-alarm"}}, {hash:"faaecdc2e201a146f76f4a94f51e9fd5c5a428f3", properties:{date:"2020-11-09 16:50:07", author:"Chun Wu", is_merge:false, message:"terraform destroy to save costs"}}, {hash:"bc346a5604045d29b4b427c926f3e70d69440698", properties:{date:"2021-08-26 08:33:36", author:"Piotr Grzeskowiak", is_merge:false, message:"enable PITR to squash CKV_AWS_28\n\nEnables continuous backups. In this case the cost is negligeable due to low volumes of data being stored in this data base. https://aws.amazon.com/dynamodb/pricing/on-demand/"}}, {hash:"4ec6d54e4d36ab02b0a7daf042e727717371eaec", properties:{date:"2021-06-30 11:15:57", dmm_unit_complexity:1.0, author:"Sam Towne", is_merge:false, dmm_unit_interfacing:1.0, message:"Await Athena Query Completion\n\nBucket notifications are used to continue app flow after Athena Query\nresults arrive. The reason for designing the application like this is to\nlimit Lambda Function runtime. This is done by invoking each function asynchronously.\n\n1. The user submits the google form.\n2. The API Gateway receives the post and triggers the collection Lambda\nFunction.\n3. The collection Lambda Function stores the post data and triggers the\nsetup_processing Lambda Function.\n4. The setup_processing Lambda Function starts execution of an Athena Query.\n5. The Athena Query results file creation invokes the processing Lambda Function (via bucket notification).\n6. The processing Lambda Function starts execution of an Athena Query.\n7. The Athena Query results file creation invokes the response Lambda Function (via bucket notification).\n8. The response Lambda Function formats the data into an email, sends\nit, and invokes the cleanup Lambda Function.\n9. The cleanup Lambda Function runs to remove temp files.\n10. The user receives the Shooting Insights email.\n\n- Athena query completion times can vary greatly and bucket\nnotifications are used to trigger lambda functions that require the\nquery results\n- New Lambda function setup_processing ensures that the Athena table is\ncreated before any queries are run against it\n- Add a processing s3 bucket\n- Add a temp bucket\n  - This bucket is used for sharing data between the lambda functions (primarilly the new event data\n  and athena invocation IDs)\n- Add bucket lifecycles to expire old data, incomplete uploads, and to\ntransition data to cheaper storage tiers\n  - The intelligent archiving option is being used\n  - It may be better to explicitly specify a storage type transition\n  after x number of days instead of using intelligent archiving\n- Bucket notifications\n  1. Processing\n    - Notification attached to processing s3 bucket\n    - Invokes processing lambda\n    - Awaits create table athena query completion\n  2. Response\n    - Notification attached to athena s3 bucket\n    - Invokes response lambda\n    - Awaits select query completion", dmm_unit_size:0.06}}, {hash:"d6df68da5ae58fb5c650c6be15d9d8e676a129db", properties:{date:"2019-07-16 09:49:42", author:"Beau Labs", is_merge:false, message:"a more cheaper instance"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"cce6b14692fccd30c027851607a9526151d4c3d2", properties:{date:"2020-06-12 13:06:52", author:"jenkins-x-bot", is_merge:false, message:"using on-demand as default billing for dynamodb\n\nadding info on dynamodb\n\nfixing copy error"}}, {hash:"8b563a7d3c7d90ddd2359500d9781547347cc56a", properties:{date:"2022-01-30 12:44:45", author:"Harmelodic", is_merge:false, message:"Removing infra because I'm not using it and it costs"}}, {hash:"40eb651a50d0dfd5cf047ef62c8a6259c1c66e02", properties:{date:"2018-12-10 16:38:49", author:"jonnyshaw89", is_merge:false, message:"Set billing_mode to PAY_PER_REQUEST"}}, {hash:"4a9e2c05092acca34f0608394638776c75496a99", properties:{date:"2021-10-01 17:48:44", author:"Damien Duportal", is_merge:false, message:"feat: increase cik8s worker nodes sizing to m5a.4xlarge\n\n- Goal: comply with https://github.com/jenkins-infra/jenkins-infra/pull/1872\n- m5a.4xlarge\tonly costs 2x more,  for 16 vCPUs (AMD EPYC),\t64 GiB\n- That would allow ~3-4 pods per machine (let's consider 3)\n- Max of 50 machines: that should increase containers cap. to 150\n\nSigned-off-by: Damien Duportal <damien.duportal@gmail.com>"}}, {hash:"53ed24b573947c73ea9f0f4f8b477c44b7de2d54", properties:{date:"2018-05-25 15:25:39", author:"Roman Sokolkov", is_merge:false, message:"Use cheaper resources by default (#97)\n\n* Use cheaper resources by defalt\r\n\r\n* Fix worker vm size"}}, {hash:"25bbff736936b64a6120ef9608498830ecec33c0", properties:{date:"2019-02-28 16:43:15", author:"Aliaksei Maiseyeu", is_merge:false, message:"NAT cost optimization (#4)\n\n* Issue \"NAT cost optimization #2\" (#3)\r\n\r\nsome improvements:\r\n* add ability to disable NAT\r\n* restore ability to setup only one NAT in case if it ec2-based\r\n* add auto-detecting latest Amazon NAT AMI\r\n* add test example\r\n* remove redundant parameters\r\n* Update README.md"}}, {hash:"300ed87cba6912103723b03d62c9b0bf93df36ea", properties:{date:"2020-01-07 16:17:46", author:"Robert Kenny", is_merge:false, message:"Snapshot bucket (#4132)\n\n* Adds an S3 bucket for Elastic Cloud snapshots\r\n\r\nWe currently rely on Elastic Cloud to hold our snapshots for the catalogue API ES cluster.\r\n\r\nIn order to make working with Catalogue API ES data easy to do locally and to do outside of Elastic Cloud for reduced time and expense, it is useful and more arguably more reliable to hold these in an S3 bucket we have direct access to.\r\n\r\nTo complete this change we will need to make some changes to the Elastic Cloud configuration.\r\n\r\nSee: https://www.elastic.co/guide/en/cloud/current/ec-aws-custom-repository.html\r\n\r\n* add some documentation for ES snapshot storage\r\n\r\n* moved to critical stack\r\n\r\n* principals needs to be a list"}}, {hash:"9f8227bf53ebc2b1bb0b99d0697f9f66eed7ab6d", properties:{date:"2021-01-22 10:39:03", author:"Brad Culberson", is_merge:false, message:"optimize ebs costs"}}, {hash:"ab8808de2e078c572e9d88fdc57ff91b8e4acc36", properties:{date:"2019-06-06 11:54:58", author:"Aniruddha Maru", is_merge:false, message:"Remove dataflow since that pattern is prohibitively expensive (#3)"}}, {hash:"0cb5e776b8695da57892560c89010a8abd817afc", properties:{date:"2021-02-08 19:25:15", author:"Tamir Kamara", is_merge:false, message:"Include role-service (#39)\n\n* move to app service premuim\r\n\r\n* move the sql serverless to save costs\r\n\r\n* add role-service app\r\n\r\n* add a new trial\r\n\r\n* move to mssql\r\n\r\n* update sql\r\n\r\n* create a tfvars file\r\n\r\n* update ports\r\n\r\n* update\r\n\r\n* update\r\n\r\n* Update terraform/trial_rg/modules/kv/main.tf"}}, {hash:"43182470f02a463a4b9ee5ed3ec899f5d7de9653", properties:{date:"2018-09-26 19:39:34", author:"Lucas Hanke", is_merge:false, message:"descrease max capacity of rds cluster for cost efficiency"}}, {hash:"935d9d683608b4d8a97ef6ccc2c8ab7c14eec0d0", properties:{date:"2019-02-16 21:19:40", author:"Mike Wilkinson", is_merge:false, message:"reduce read/write capacity to 1 for min cost.\nChange list to map."}}, {hash:"587d3a91c12aae8f0dd4b34a46d03f919ea385c6", properties:{date:"2021-01-21 23:39:10", author:"Mudathir Lawal", is_merge:false, message:"\"feat: Remove update domain options\"\n\nRemove fault domain count as well as\nupdate domain count options from scale\n(availability) set. This keeps both the\nfault domains and update domains at five\neach. This is necessary since we are try-\ning  to minimize cost."}}, {hash:"773446c8f3192a447b8956f71b1ac90e7a9b8afa", properties:{date:"2021-03-30 12:29:52", author:"Tri Van BUI", is_merge:false, message:"Update cost"}}, {hash:"3ba302c69eb2a491a5b23e94084b4ddd24a4a703", properties:{date:"2018-02-11 20:25:37", author:"Adrian Neatu", is_merge:false, message:"billing alert"}}, {hash:"12cf2cb526ed6b2d12106894ca735cf81ba432ff", properties:{date:"2018-02-12 06:24:54", author:"Adrian Neatu", is_merge:false, message:"billing alert"}}, {hash:"bacda9d75b329997eb849183cf36ff8f97a9ee83", properties:{date:"2019-06-01 13:49:56", author:"Dalton Hubble", is_merge:false, message:"Change DO worker_type default from s-1vcpu-1gb to s-1vcpu-2gb\n\n* On DigitalOcean, `s-1vcpu-1gb` worker nodes have 1GB of RAM, which\nis too small as a default, even for most cost constrained developers"}}, {hash:"d27b48345a3827b8a10cb5388e42bd5cbea484bb", properties:{date:"2018-11-06 11:35:52", author:"Matt Conway", is_merge:false, message:"allow a less redundant (cheaper) NAT setup for the vpc"}}, {hash:"f4363ad27d366385f2388d073ce8af796e035406", properties:{date:"2019-04-13 10:12:15", author:"Doug Kerwin", is_merge:false, message:"added billing cloudwatch alarms"}}, {hash:"09636724e63599b1f589065c92074575471ac234", properties:{date:"2020-02-02 15:28:43", author:"Lewis Kirkaldie", is_merge:false, message:"-add 'secondary_az' var for cheaper VPCs\n-cleanup"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"066049972b995fb019bf29be7f0f307064a2f00e", properties:{date:"2020-10-09 10:09:40", author:"kmalkin", is_merge:false, message:"Feature/fr 0001 open vpn bolt on (#13)\n\n* FR-0001: split out open vpn into module. made pihole a module. and have gone down the split ec2 isntance route for the most diverse options\r\n\r\n* FR-0001: removed the unfinished iam user as its just creating cost / confusion issues.\r\n\r\n* FR-0001: added additional tags values which will be mapped through to every resource later\r\n\r\n* FR-0001: completed new ec2 instance for openvpn . just need to check open vpn installation config to see how easy it is to install via user data\r\n\r\n* FR-0001: added remapped proper outputs. updated Readmes\r\n\r\n* FR-0001: added remapped proper outputs. updated Readmes\r\n\r\n* FR-0001: added segragated isolated module for backend config should someone want it\r\n\r\n* FR-0001: removed hardcoded backend state config. will be using it locally for my use. but as in README not enforcing it yet\r\n\r\n* FR-0001: added my tfvars to ignore\r\n\r\n* FR-0001: added more tags for id\r\n\r\n* FR-0001: added cert identifiers to ignore incase someone downloads and forgets to move them\r\n\r\n* FR-0001: added ovpn certs to ignore to stop accidental commital if using the vpn version\r\n\r\n* FR-0001: setup the config user data for the openvpn install\r\n\r\n* FR-0001: added new files for remote state vs non remote state. so its easier to choose without much effort\r\n\r\n* FR-0001: added new files for remote state vs non remote state. so its easier to choose without much effort\r\n\r\n* FR-0001: added ovpn certs to ignore to stop accidental commital if using the vpn version and fixed user data\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: adding addtional sg group so that the openvpn instance can actually access the dns server ports in pi hole instance\r\n\r\n* FR-0001: updated readme\r\n\r\n* FR-0001: halved the volume requirements. They were using 8% of the 20GB .. so it seemed like too much and might as well be smaller volumes\r\n\r\n* FR-0001: halved the volume requirements. They were using 8% of the 20GB .. so it seemed like too much and might as well be smaller volumes\r\n\r\n* FR-0001: halved the volume requirements. They were using 8% of the 20GB .. so it seemed like too much and might as well be smaller volumes\r\n\r\n* FR-0001: adding all info to changelog\r\n\r\n* FR-0001: adding all info to changelog and fixed the locking table\r\n\r\n* FR-0001: adding all info to changelog and fixed the locking table\r\n\r\n* FR-0001: re-added port 80/443 as i forgot they were there for pi hole admin access due to their original names.\r\n\r\n* FR-0001: making modules optional\r\n\r\n* FR-0001: making modules optional\r\n\r\n* FR-0001: making modules optional, precommit updates and some refactoring\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: complete rework to make it more controlable and more reusable in many different configs.\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: precommit stuff\r\n\r\n* FR-0001: fixed an issue with the userdata... now the single instance install works completely without manual intervention\r\n\r\n* FR-0001: fixed an issue with the userdata... now the single instance install works completely without manual intervention\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: single instance install should now be completely automatic and even configure itself to vpn push traffic through the pihole.\r\n\r\n* FR-0001: added vars for hostnames, ami ids, volume allocations and instance type\r\n\r\n* FR-0001: added hooks for self populating README's from the tf-docs hooks\r\n\r\n* FR-0001: added hooks for self populating README's from the tf-docs hooks\r\n\r\n* FR-0001: added hooks for self populating README's from the tf-docs hooks\r\n\r\n* FR-0001: updated tools\r\n\r\n* FR-0001: updated changlog and readme\r\n\r\n* FR-0001: updated changlog and readme\r\n\r\nCo-authored-by: Karl Malkin <kmalkin@williamhill.co.uk>"}}, {hash:"034908d914982eacea51b0ac61f2781069387412", properties:{date:"2018-11-19 11:08:43", author:"Kaushik Chandrashekar", is_merge:false, message:"Added ability to save costs if no private subnets required"}}, {hash:"adaf03ac0d5a324880e9e6aa10d54b9de6b4e635", properties:{date:"2021-04-13 11:42:30", author:"Sjuul Janssen", is_merge:false, message:"updated costs alerts to use generic monitor 0.5.1"}}, {hash:"df4c2102d59c5cae88c9ed30489b2d00bc75aafd", properties:{date:"2022-02-01 14:58:01", author:"youngookkim", is_merge:false, message:"fix(s3): intelligent-tiering archive opt-out option (#34)\n\n* fix(s3): intelligent-tiering archive opt-out option\r\n\r\n* docs(s3): intelligent-tiering archive blog\r\n\r\n* feat(s3): random petname for s3 bucket name\r\n\r\n* docs(s3): lifecycle rule screenshot\r\n\r\n* docs(s3): storage cost optimization whitepaper"}}, {hash:"24fa52712f844e2b459329e28af96bc369024d25", properties:{date:"2021-12-06 10:59:35", author:"Vijay Dharap", is_merge:false, message:"Minor tweaks to use single CP machine and spot instances to reduce costs. Also added role creation details for external-dns"}}, {hash:"bf59a4c995822ccfdeee64781345c12ebefa967f", properties:{date:"2021-07-22 12:51:14", author:"Nigel Leck", is_merge:false, message:"reduced costs"}}, {hash:"f106917bb7b2d8d4428022bb119585bf9f35769c", properties:{date:"2020-07-22 23:49:23", author:"Felipe Espinoza", is_merge:false, message:"Restore t3a.medium and adding a duplicaed cheap_compute2 instance with count"}}, {hash:"ec5ec7bac99558a4e95e95788f846eb618edb861", properties:{date:"2022-04-14 16:03:04", author:"Darren Oakley", is_merge:false, message:"Remove/Disable the `ppud-data-transfer` EC2 instance.\n\nNow we've imported the current PPUD snapshot, spin everything down so\nthat we're not incurring unnecessary costs."}}, {hash:"174486319f3b956807d56e5433880f9978884f93", properties:{date:"2019-05-06 13:42:21", author:"sbogacz", is_merge:false, message:"use DynamoDB On Demand billing for the lock table to save on cost"}}, {hash:"a433a5d5788a358e7437cb15097d68bd1220eda7", properties:{date:"2020-06-23 09:17:06", author:"Nick", is_merge:false, message:"First release 0.2.0\n\n## [0.2.0] - 2020-06-23\n### Added\n- Fastly now has 2 backends to loadbalance between instead of just 1 instance.\n- Instances now use cheapest spot instances by default for demonstration purposes.\n- Changelog with human-friendly updates.\n\n### Changed\n- App name is now interpolated into tag and resource names instead of hardcoded.\n\n### Security\n- Moved subdomain url and ssh key name to .tfvars file"}}, {hash:"4a00ffcbf9576d7e5febdbdf94a31d4735fc8035", properties:{date:"2021-05-19 13:02:12", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"d34dcd505074546f77367786f5362891050c3440", properties:{date:"2019-01-29 19:26:40", author:"Toby Lorne", is_merge:false, message:"Make network consistent in all environments\n\nWe shouldn't have different network topologies, what affects cost is the\nnumber of boxes/apps, the additional subnet/nat gateway is not expensive\n\nNetwork load balancers have weird config which cannot change which\nforces us to have 3 IPs but we cannot have two IPs in the same subnet.\n\nThis makes the network consistent in all environments, and is\nterraformed everywhere"}}, {hash:"75771876ca81699edfb4bb1afa202d6426abae1e", properties:{date:"2020-02-16 12:46:25", author:"v3nd3774", is_merge:false, message:"got terraform to start planning emr cluster, need to analyze expected cost and actually turn on and log in to notebook on cluster now"}}, {hash:"70a31f9b9a167e5025bb4099cc584044c47e699b", properties:{date:"2021-01-22 09:42:40", author:"John Watts", is_merge:false, message:"HUB-748 Remove hosted instance of Sentry\n\nNow that we use the cloud version of Sentry we don't need to host our own version.  Sending `staging` events to the cloud version is more cost effective than running an ec2 instance and database etc.\n\nThis should remove anything that is used solely by the hoseted instance.  Variables remain for use by with the cloud instance."}}, {hash:"65e44242c0b5f27d64ff714e5a8eed71ca02ab26", properties:{date:"2021-06-28 16:44:35", author:"Marnik Bercx", is_merge:false, message:"AWS: Update versions and fix issues (#6)\n\n* Update versions and fix issues\r\n\r\n* Remove adminuser in config\r\n\r\n* Update the \"tested with\" versions in README.\r\n\r\n* Update terraform lock file.\r\n\r\n* Set default region to Stockholm (should be cheaper than Ireland).\r\n\r\n* Adjust autoscaler parameters.\r\n\r\n* Update bot policy.\r\n\r\n* Replace t3a.medium with t3.medium for the core instance.\r\n\r\n* Update autoscaler policy and role name.\r\n\r\nCo-authored-by: Simon Adorf <simon.adorf@epfl.ch>"}}, {hash:"681a3f8b4942be495b3f2528fb9ee40d7a4eb08a", properties:{date:"2020-11-07 13:09:32", author:"stealthHat", is_merge:false, message:"nat gateway is verry expensive"}}, {hash:"a86d89369aaf5a20c1e4d8415a8a771aa7de7d10", properties:{date:"2020-03-29 16:02:32", author:"Khoa Le", is_merge:false, message:"provision a droplet with cheapest price"}}, {hash:"7244eed07a1008675f45cc4349bf68141bb29edc", properties:{date:"2020-04-03 15:50:30", author:"YuviPanda", is_merge:false, message:"Use less expensive nodes for kubernetes by default\n\nWe are still testing, tearing things up and down - cheaper\nis better."}}, {hash:"cf842d48df037476a754b221f7b4115bb4f5ddf1", properties:{date:"2021-05-19 22:27:47", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"cb45bf17da799afaa789206e3fcd39d9403e0567", properties:{date:"2021-07-08 20:41:21", author:"Bernd Haberstumpf", is_merge:false, message:"Changed dynamoDB to pay per use model"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"3e543412b6680057ffb10b0fbba777ccb3205882", properties:{date:"2022-04-12 17:33:21", author:"Smerc", is_merge:false, message:"feat: adding terraform configurations for blog (#8)\n\n* feat: adding terraform configurations for blog\r\n\r\nPreviously, terraform was used to create a k8s cluster and run the blog on it. This PR switches the blog to run as a digital ocean app rather than on a dedicated kubernetes cluster for cost reasons.\r\n\r\n- Adding terraform for DO App as a module\r\n- Adding terraform for updating/deploy the do app module\r\n- Adding DNS records for @smerc.dev and @smerc.io email aliases\r\n- Output & variables for the associated modules & infrastructure."}}, {hash:"c10b476d869282ed6cf55def47445b9c703788fe", properties:{date:"2020-07-18 22:29:59", dmm_unit_complexity:1.0, author:"T.Yoshikawa", is_merge:false, dmm_unit_interfacing:1.0, message:"Add aws bill alert :sparkles: (#6)\n\n* [feat] add budget cost module :sparkles:\r\n\r\n* [feat] add budget notification alert :sparkles:\r\n\r\n* [feat] lambda notification go src ver1 :+1:\r\n\r\n* [feat] use logging library :orange_book:\r\n\r\n* [feat] add lambda module :sparkles:\r\n\r\n* [structure] rename dir :railway_car:\r\n\r\n* [fear] create Makefile :sparkles:\r\n\r\n* [feat] fix details :shirt:\r\n\r\n* [feat] put ssm_parameter by terraform :sparkles:\r\n\r\n* [fix] make terraform formt :orange_book:\r\n\r\n* [fix] fix method scope :shirt:\r\n\r\n* [fix] fix dependency :bug:\r\n\r\n* [fix] del unused data :shirt:\r\n\r\n* [feat] add cloudwatch logs module :sparkles:", dmm_unit_size:0.6909090909090909}}, {hash:"759b1d641a430bf189354e9a4866e72fe56c22dc", properties:{date:"2020-11-30 15:53:05", author:"Gus Narea", is_merge:false, message:"Upgrade instances to the expensive, CPU-optimised ones\n\nMake it rain!"}}, {hash:"b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f", properties:{date:"2022-01-12 23:55:31", author:"Matthew Sanabria", is_merge:false, message:"Scale down default Redis size\n\nThe P3 size has 26GB of cache and costs $1485.17 per month. The P1 has 6GB of cache and costs $370.96 per month. The 6GB size is more than enough for intense workloads."}}, {hash:"50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9", properties:{date:"2019-08-21 20:58:42", author:"Dave Rix", is_merge:false, message:"Remove admin elb, asg, etc due to cost"}}, {hash:"fc054a7183757d1e51e371e7329c5cf848cc6dd8", properties:{date:"2021-08-11 18:13:51", author:"rajesh", is_merge:false, message:"feat:save costs for personal organization"}}, {hash:"eaf81b5f5ca1dbdd8951d4179a631818139566a5", properties:{date:"2021-10-19 18:07:21", author:"rajesh", is_merge:false, message:"feat:destroy dns zones when not in use to save cost"}}, {hash:"0db462f5528100ece08d85366fc777cd59fad473", properties:{date:"2021-11-07 00:31:52", author:"rajesh", is_merge:false, message:"feat:create spoke dns zones on demand to save cost"}}, {hash:"e89519dc59655ddbd3ecf56a4d680d7d01128152", properties:{date:"2022-01-17 08:34:31", author:"Robin Bryce", is_merge:false, message:"* Disable redis provider for traefik (using CRD's exclusively)\n* Disable google memorystore - its too expensive and its not being used*"}}, {hash:"3138943ab4d15cc256d322e1128862ef11383c73", properties:{date:"2021-10-26 12:26:24", author:"Jeremy Frasier", is_merge:false, message:"Upgrade all volume types to gp3\n\ngp3 is 20% cheaper, and the baseline configuration offers better\nperformance than gp2 for volumes smaller than 2TB.  It also allows the\nvolume size and IOPS to be configured separately, whereas the two are\nintertwined with gp2."}}, {hash:"f751747d53b467f72498c50deef79828c2b378be", properties:{date:"2020-04-05 20:31:58", author:"Kengo Suzuki", is_merge:false, message:"remove security feature from tokyo region for cost purpose"}}, {hash:"5298263d68548372c064b9d9c76977325a7373c8", properties:{date:"2021-07-25 12:08:06", author:"Tom Mitchell", is_merge:false, message:"Upgrade instance size - costs seem reasonable"}}, {hash:"24c07bfd5c31438fff6374e9ba3d577e6402d777", properties:{date:"2018-10-05 09:57:04", author:"Austin Workman", is_merge:false, message:"f-centos-7 - Support for cheaper CentOS 7/t3 instances, visibility fixes (#23)\n\n* Adding support for CentOS 7(cheaper), moved to t3 instances(cheaper) for non t2.micro(free-tier), hostnaming/display name visibility improvements\r\n\r\n* Fixing ami name change typo, fixing docker consul dns configuration"}}, {hash:"432683fcf7921a699f1557e89818b3bef5dba61a", properties:{date:"2021-11-15 14:28:58", author:"David Mikalova", is_merge:false, message:"Removing cache due to costs"}}, {hash:"4a89f4b8235961275fa0e6aaf20848f2b8b7e733", properties:{date:"2021-02-10 17:38:26", dmm_unit_complexity:1.0, author:"ajarombek", is_merge:false, dmm_unit_interfacing:1.0, message:"budget alarms for high costs, budget & cloudtrail tests", dmm_unit_size:1.0}}, {hash:"61e07012be3f140daf18d33b3be19c80147f12f2", properties:{date:"2021-07-17 16:31:47", dmm_unit_complexity:1.0, author:"ajarombek", is_merge:false, dmm_unit_interfacing:1.0, message:"daily cost lambda infrastructure", dmm_unit_size:1.0}}, {hash:"11234f631f7370dd80ee5fbc5dd7bdbc12dcbf49", properties:{date:"2021-10-13 12:14:50", author:"Cosmin Briscaru", is_merge:false, message:"add per project billing alerts"}}, {hash:"bffc023eeff075ef281b1fd261897f4c7216b354", properties:{date:"2019-01-30 19:04:57", author:"Ben Fortuna", is_merge:false, message:"Update default instance for more cost-effective choice"}}, {hash:"5be96c3735b14c16dbe87f4c544f5ab1c75ab93a", properties:{date:"2015-06-30 10:50:34", author:"Steven Swor", is_merge:false, message:"update auto stop to 1hr. we get billed a minimum of 1h anyway"}}, {hash:"4894def3589d532789cc8af0c0b197727e0fb3f4", properties:{date:"2020-09-07 08:04:26", author:"Julie Ng", is_merge:false, message:"tf: remove Azure Container Registry for cost savings"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"605e74facfa2ff519ba5cda6e57474666901bd8c", properties:{date:"2015-09-09 16:12:42", author:"Matt Cowger", is_merge:false, message:"Allow for cheaper instances and choosing instance types"}}, {hash:"83d8b928ecb3f271a058bb30eaa1e05ce10e0434", properties:{date:"2020-03-28 18:33:15", author:"Markus Katharina Brechtel", is_merge:false, message:"reduce costs of infrastructure"}}, {hash:"0019704e14723aaf326840ab36c594c3f514a2d4", properties:{date:"2019-11-10 11:59:13", author:"ninthnails", is_merge:false, message:"Specs and optional resources for cost optimization during development."}}, {hash:"9438dcebde79c0726d69ae6a15c99b9c5c0f461c", properties:{date:"2019-11-11 19:53:03", author:"ninthnails", is_merge:false, message:"Stand alone cluster support, cost optimization for development"}}, {hash:"35d26fd046185ae079e09fa6435c41ae685e679e", properties:{date:"2017-02-15 15:20:06", author:"Tom McLaughlin", is_merge:false, message:"Disable NAT gateways for now.  We don't need them and they cost $$$"}}, {hash:"decdbce98d33cf2599aee554779ef5d8b5361d8f", properties:{date:"2018-07-31 17:55:11", dmm_unit_complexity:0.0, author:"Steve Kehlet", is_merge:false, dmm_unit_interfacing:0.0, message:"updated lambda to use SQS as an event source; added NAT instance option (cheaper than NAT GW)", dmm_unit_size:0.0}}, {hash:"8bd6e745475f635d6f6b6929a545afa2e1d9dd57", properties:{date:"2019-11-11 11:10:56", author:"Ximon Eighteen", is_merge:false, message:"FIX: Default to a smaller Droplet size as when iterating on the scripts the cost can add up fast."}}, {hash:"37f66bc43f57b1b7a5a897c58cefe09900afd7ef", properties:{date:"2022-02-19 16:33:41", author:"Kreidl", is_merge:false, message:"made default pool cost effective"}}, {hash:"8454c8ee25e821abde10b73a2fec691269e41822", properties:{date:"2019-08-09 10:33:01", author:"Julian Simioni", is_merge:false, message:"Update default variable values for cluster sizing\n\nIt's gotten cheaper and easier to run a full planet cluster!"}}, {hash:"5ea19806f7fcba7727e8111fc5ff4946b9ba72c8", properties:{date:"2020-04-05 12:06:07", author:"Sergio Guillen", is_merge:false, message:"Add module to create low cost vpc with 2 AZs and a nat instance"}}, {hash:"d750e25615e7e37914119cb257fbd9c7fad3a52a", properties:{date:"2021-03-08 20:53:43", author:"TJ Potenza", is_merge:false, message:"Begin to decouple the workers from requiring a static DNS address, so I can run the control plane in an ASG without paying for an NLB."}}, {hash:"349c94aeffffb4eef513107d281d59ef6dd33962", properties:{date:"2022-03-03 16:06:29", author:"Justin Béra", is_merge:false, message:":sparkles:(terraform) possibility to deploy stacks of instances\n\nWe will use small instances because they are cheaper, but we cannot\nsupport too many instances on the same conference. Thus, we have to\nseparate meet-torture instances in stacks."}}, {hash:"e8004aa1293b04a63fe33895e81ed2b9e6d3af94", properties:{date:"2021-05-22 11:24:15", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"7e5c997c23683a707aa384b6a07801210b1839b8", properties:{date:"2021-03-01 20:52:40", author:"Kiara Grouwstra", is_merge:false, message:"monitor costs"}}, {hash:"da9e2869456610a0228cb14f850c6eccddbb15e0", properties:{date:"2020-12-02 20:20:02", author:"Joshua Roys", is_merge:false, message:"Decrease root volume to 20G to save costs"}}, {hash:"0160ab1f89489abec4120ef4102bf5964b0af2fe", properties:{date:"2020-04-04 17:03:57", author:"UriKatsirPrivate", is_merge:false, message:"Use billing account with variable"}}, {hash:"9928d58017829d85789bdf45f467b6d32c6354b2", properties:{date:"2017-06-09 13:37:20", author:"Alexey Bezhan", is_merge:false, message:"Raise log streaming lambda function timeout to 10s\n\nWe've seen some occasional (a few per day) timeouts on the log\nstreaming lambda functions likely caused by slow Elasticsearch\nresponses.\n\nRaising the timeout value from 5s to 10s might help reduce the number\nof failed runs. We don't want a very high timeout value since if\nElasticsearch at any point starts to respond to requests very slowly\nour functions will spend more time waiting which can very quickly\nraise the AWS Lambda costs."}}, {hash:"7190744187e0aed2df8ce84f2a944294d6d4fc5b", properties:{date:"2020-05-10 16:37:28", author:"Eric Gottesman", is_merge:false, message:"Redid networking ton one subnet to eliminate costly NAT, added SSH in"}}, {hash:"638430604158044fcf123adaf8dfdcc91b1a873e", properties:{date:"2022-04-26 12:03:11", author:"Jose Ignacio Jerez Rodriguez", is_merge:false, message:"Creates an AWS spot instance instead of the normal one for cost reduction.\n\nThe spot instance cannot use an AMI with RHEL 8.5 at the moment, AWS returns an error; it can use a RHEL 8.4 though\n\nSigned-off-by: Jose Ignacio Jerez Rodriguez <jjerezro@redhat.com>"}}, {hash:"8391f1bd4322fec04fda7509b537c5f66cddbbd9", properties:{date:"2022-02-09 04:00:09", author:"Amanda Karina Lopes de Oliveira", is_merge:false, message:"fix: data_access_logs_enabled now enables read and write audit logs, defaults to false for cost savings (#630)\n\n* Comment enabling Read and Write\r\n\r\n* Fix code review issues\r\n\r\n* Fix code review issues\r\n\r\n* Changes default value to false\r\n\r\n* Fix build error\r\n\r\n* Fix dynamic code"}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{hash:"9df6f6e72cd4fa33003fa5498c796bd129c99d0f", properties:{date:"2021-05-22 11:19:17", author:"James Woolfenden", is_merge:false, message:"costs"}}, {hash:"7b2a446b0915a3ad26093f8234f7493ff152138a", properties:{date:"2018-08-21 10:14:28", author:"Steve Jones", is_merge:false, message:"Update variables.tf\n\nReduced default values for cost purposes during development..."}}, {hash:"6e25b2cfb1cb80fd45ab6627a04e52735bb2fb5e", properties:{date:"2021-08-03 19:36:37", author:"marcus.aspin", is_merge:false, message:"ALS-2957 Set default placement strategy to AZ-balanced bin-pack\nto save on EC2 costs while maintaining service reliability/resilience."}}, {hash:"afed4b83a174335ec2b371061c81bc92938ecda3", properties:{date:"2018-04-15 13:26:52", author:"Javier López", is_merge:false, message:"cheapest-aws-gpu-spot-instance.* => scripts"}}, {hash:"4676fee3828f732d296feb81be51f9602610f537", properties:{date:"2021-11-25 10:50:33", author:"Yulei Liu", is_merge:false, message:"reduce cost"}}, {hash:"95c70a0a304c55adacc3ba0605dd2b9aa2730f6f", properties:{date:"2021-10-26 09:25:20", author:"Emile Swarts", is_merge:false, message:"Expire old versions of ECR images to save on costs (#75)\n\nThis will remove an image after 14 days. Images of any version can be\r\nbuilt from version control."}}, {hash:"e0d0f044c54ebf491c122664d03e0cfe5d2b0823", properties:{date:"2020-06-03 10:17:02", author:"HarsheshShah08", is_merge:false, message:"Public networked created and private network has been masked to save the cost"}}, {hash:"3794d676f4375842364a080e78750b41d9af22d5", properties:{date:"2021-06-07 14:33:37", author:"Stavros Foteinopoulos", is_merge:false, message:"Add a cost allocation tag to postgres instances\n\nIf this commit applied the postgres instances will have a tag that is used for cost_allocation\nIssue: MM-36254"}}, {hash:"cb9f00a2f6f23b44f7db08863ef5fb0b9ea0bc0c", properties:{date:"2019-09-28 14:13:02", author:"Archimedes Trajano", is_merge:false, message:"Added lifecycle rule for the S3 bucket to reduce long term costs"}}, {hash:"aeab4d039020c0d63209d7f800f9c34fae4060e6", properties:{date:"2022-04-09 14:28:44", author:"Tobias Ecklebe", is_merge:false, message:"adapt aks creation, reduce the costs"}}, {hash:"94e101feda4af9eef9980dc024c9d1a95afe3e6f", properties:{date:"2021-03-23 08:36:42", author:"Tal Danzig", is_merge:false, message:"easily enable / disable (to save costs)"}}, {hash:"12f8972a912d97427fe0ef1b84becdc8a2993022", properties:{date:"2018-06-18 21:57:58", author:"Dalton Hubble", is_merge:false, message:"Change kube-apiserver port from 443 to 6443\n\n* Adjust firewall rules, security groups, cloud load balancers,\nand generated kubeconfig's\n* Facilitates some future simplifications and cost reductions\n* Bare-Metal users who exposed kube-apiserver on a WAN via their\nrouter or load balancer will need to adjust its configuration.\nThis is uncommon, most apiserver are on LAN and/or behind VPN\nso no routing infrastructure is configured with the port number"}}, {hash:"ef0372d2684ef920c6e54cf8b9f80d87db90e636", properties:{date:"2018-06-18 22:56:32", author:"Dalton Hubble", is_merge:false, message:"Combine NLBs to use one NLB per cluster\n\n* Simplify clusters to come with a single NLB\n* Listen for apiserver traffic on port 6443 and forward\nto controllers (with healthy apiserver)\n* Listen for ingress traffic on ports 80/443 and forward\nto workers (with healthy ingress controller)\n* Reduce cost of default clusters by 1 NLB ($18.14/month)\n* Keep using CNAME records to the `ingress_dns_name` NLB and\nthe nginx-ingress addon for Ingress (up to a few million RPS)\n* Users with heavy traffic (many million RPS) can create their\nown separate NLB(s) for Ingress and use the new output worker\ntarget groups\n* Fix issue where additional worker pools come with an\nextraneous network load balancer"}}, {hash:"e09126b45746f1c967d1990fa04ce781a0478c6d", properties:{date:"2018-12-18 12:29:27", author:"Dalton Hubble", is_merge:false, message:"Change AWS default type from t2.small to t3.small\n\n* T3 is the next generation general purpose burstable\ninstance type. Compared with t2.small, the t3.small is\ncheaper, has 2 vCPU (instead of 1) and provides 5 Gbps\nof pod-to-pod bandwidth (instead of 1 Gbps)"}}, {hash:"09e400452c1bde25fe393dd56c2fd608b84a18ac", properties:{date:"2018-10-28 02:29:05", author:"Jacob McSwain", is_merge:false, message:"Update infrastructure to be more cost-effective"}}, {hash:"d51caa0c810f6d5ad6f0846a317ec2432835aad7", properties:{date:"2018-10-28 14:36:12", author:"Jacob McSwain", is_merge:false, message:"Revert \"Update infrastructure to be more cost-effective\"\n\nThis reverts commit 09e400452c1bde25fe393dd56c2fd608b84a18ac."}}, {hash:"44d66328ea4467d05d7fb8092631aff5afbd8b26", properties:{date:"2018-10-28 15:12:24", author:"Jacob McSwain", is_merge:false, message:"Cost saving: Against my best practices\n\nSecurity groups are more than enough to secure the instance, but best practice says you should subnet it and keep the load balancer in the public subnet.\n\nSadly this requires a NAT gateway but it costs nearly 15 bucks a month on it's own.\n\nThis nearly halfs monthly charges"}}, {hash:"75fc899c58848b290a31ff92bab92c27b3f6bf53", properties:{date:"2022-02-08 12:49:56", author:"Pat Heard", is_merge:false, message:"feat: S3 delete marker replication status (#110)\n\nUpdate to allow the S3 bucket's replication rule to specify if delete\r\nmarkers are replicated to the destination bucket.\r\n\r\nThis is being done to support the Cloud Based Sensor so that\r\nsatellite buckets can have a shorter expiration time and save\r\nstorage costs."}}] AS row
CREATE (n:Commit{hash: row.hash}) SET n += row.properties;
UNWIND [{_id:3836, properties:{name:"alert", description:"denotes messages expressing concerns related to billing alarms enforcing an upper threshold on costs."}}, {_id:3837, properties:{name:"area", description:"denotes messages expressing concerns related to server or instance geographical location."}}, {_id:3838, properties:{name:"awareness", description:"denotes messages simply mentioning concerns with cost (without necessarily implying action)."}}, {_id:3839, properties:{name:"billing_mode", description:"denotes messages expressing concerns related to the type of billing plan being used (e.g., on-demand for development or normal plan for production)."}}, {_id:3840, properties:{name:"cluster", description:"denotes messages expressing concerns related to cluster configuration."}}, {_id:3841, properties:{name:"domain", description:"denotes messages expressing concerns related to domain name system and IP addresses."}}, {_id:3842, properties:{name:"feature", description:"denotes messages expressing concerns related to various features such as logging, load balancers or usage of third party libraries."}}, {_id:3843, properties:{name:"increase", description:"denotes messages expressing concerns related to increase in cost due to a change."}}, {_id:3844, properties:{name:"instance", description:"denotes messages expressing concerns related to computational instances (e.g., Amazon AWS t2.micro) used in the deployment."}}, {_id:3845, properties:{name:"networking", description:"denotes messages expressing concerns related to networking configuration."}}, {_id:3846, properties:{name:"policy", description:"denotes messages expressing concerns related to the implementation of general rules to prevent excessive charges."}}, {_id:3847, properties:{name:"provider", description:"denotes messages expressing concerns related to choosing a service providers (e.g., Amazon, Azure, Google)"}}, {_id:3848, properties:{name:"saving", description:"denotes mentioned changes made to save costs."}}, {_id:3849, properties:{name:"storage", description:"denotes messages expressing concerns related to storage solutions (e.g., Amazon gp2) used in the deployment."}}] AS row
CREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Code;
:commit
:begin
UNWIND [{start: {hash:"a86d89369aaf5a20c1e4d8415a8a771aa7de7d10"}, end: {_id:3848}, properties:{}}, {start: {hash:"681a3f8b4942be495b3f2528fb9ee40d7a4eb08a"}, end: {_id:3845}, properties:{}}, {start: {hash:"681a3f8b4942be495b3f2528fb9ee40d7a4eb08a"}, end: {_id:3838}, properties:{}}, {start: {hash:"4a00ffcbf9576d7e5febdbdf94a31d4735fc8035"}, end: {_id:3838}, properties:{}}, {start: {hash:"4a00ffcbf9576d7e5febdbdf94a31d4735fc8035"}, end: {_id:3849}, properties:{}}, {start: {hash:"88303c62ab59b1e7a538289112cf19354a8ed05f"}, end: {_id:3848}, properties:{}}, {start: {hash:"88303c62ab59b1e7a538289112cf19354a8ed05f"}, end: {_id:3839}, properties:{}}, {start: {hash:"02210a3d3ba4a770c29623825b7f54f3ff33f3c7"}, end: {_id:3848}, properties:{}}, {start: {hash:"02210a3d3ba4a770c29623825b7f54f3ff33f3c7"}, end: {_id:3840}, properties:{}}, {start: {hash:"002bcce28e46728714fa1e0d20bec6f2559caba2"}, end: {_id:3844}, properties:{}}, {start: {hash:"002bcce28e46728714fa1e0d20bec6f2559caba2"}, end: {_id:3838}, properties:{}}, {start: {hash:"49f447bdbb3cf23499e8194e78f852ea1e256d3a"}, end: {_id:3839}, properties:{}}, {start: {hash:"49f447bdbb3cf23499e8194e78f852ea1e256d3a"}, end: {_id:3838}, properties:{}}, {start: {hash:"d6df68da5ae58fb5c650c6be15d9d8e676a129db"}, end: {_id:3848}, properties:{}}, {start: {hash:"d6df68da5ae58fb5c650c6be15d9d8e676a129db"}, end: {_id:3844}, properties:{}}, {start: {hash:"c928fe0a05d1e9b8f1ecb1a7dacffecc2800e038"}, end: {_id:3848}, properties:{}}, {start: {hash:"c928fe0a05d1e9b8f1ecb1a7dacffecc2800e038"}, end: {_id:3839}, properties:{}}, {start: {hash:"02c710b8259f493c475021fc9eac23b871305ae6"}, end: {_id:3848}, properties:{}}, {start: {hash:"02c710b8259f493c475021fc9eac23b871305ae6"}, end: {_id:3847}, properties:{}}, {start: {hash:"6a696dfa2dd5716a65b10fc3277cd9e994b8b30a"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"6a696dfa2dd5716a65b10fc3277cd9e994b8b30a"}, end: {_id:3846}, properties:{}}, {start: {hash:"7247909ecd98c2d511316392f22cb3877f05250b"}, end: {_id:3838}, properties:{}}, {start: {hash:"7247909ecd98c2d511316392f22cb3877f05250b"}, end: {_id:3846}, properties:{}}, {start: {hash:"bc346a5604045d29b4b427c926f3e70d69440698"}, end: {_id:3838}, properties:{}}, {start: {hash:"bc346a5604045d29b4b427c926f3e70d69440698"}, end: {_id:3843}, properties:{}}, {start: {hash:"bc346a5604045d29b4b427c926f3e70d69440698"}, end: {_id:3847}, properties:{}}, {start: {hash:"ba858d94e29d03e3e81533df8cd8bc85b9f176f1"}, end: {_id:3848}, properties:{}}, {start: {hash:"0160ab1f89489abec4120ef4102bf5964b0af2fe"}, end: {_id:3839}, properties:{}}, {start: {hash:"0160ab1f89489abec4120ef4102bf5964b0af2fe"}, end: {_id:3838}, properties:{}}, {start: {hash:"4a89f4b8235961275fa0e6aaf20848f2b8b7e733"}, end: {_id:3838}, properties:{}}, {start: {hash:"61e07012be3f140daf18d33b3be19c80147f12f2"}, end: {_id:3838}, properties:{}}, {start: {hash:"be1245d8634025277ba79a4155ee88d7eaffcdfb"}, end: {_id:3848}, properties:{}}, {start: {hash:"be1245d8634025277ba79a4155ee88d7eaffcdfb"}, end: {_id:3844}, properties:{}}, {start: {hash:"4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942"}, end: {_id:3848}, properties:{}}, {start: {hash:"4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942"}, end: {_id:3849}, properties:{}}, {start: {hash:"ab8808de2e078c572e9d88fdc57ff91b8e4acc36"}, end: {_id:3848}, properties:{}}, {start: {hash:"ab8808de2e078c572e9d88fdc57ff91b8e4acc36"}, end: {_id:3842}, properties:{}}, {start: {hash:"7190744187e0aed2df8ce84f2a944294d6d4fc5b"}, end: {_id:3845}, properties:{}}, {start: {hash:"7190744187e0aed2df8ce84f2a944294d6d4fc5b"}, end: {_id:3848}, properties:{}}, {start: {hash:"6488091456429ed61264b9cad841eeb6bf871e32"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"6488091456429ed61264b9cad841eeb6bf871e32"}, end: {_id:3849}, properties:{}}, {start: {hash:"6cfda6ada5137b232ff442ae9f2aedc8520ee1b4"}, end: {_id:3848}, properties:{}}, {start: {hash:"6cfda6ada5137b232ff442ae9f2aedc8520ee1b4"}, end: {_id:3844}, properties:{}}, {start: {hash:"6cfda6ada5137b232ff442ae9f2aedc8520ee1b4"}, end: {_id:3838}, properties:{}}, {start: {hash:"aeb3bfbe393cdfc02e62b812843ed75cf5f245e4"}, end: {_id:3848}, properties:{}}, {start: {hash:"aeb3bfbe393cdfc02e62b812843ed75cf5f245e4"}, end: {_id:3844}, properties:{}}, {start: {hash:"5fa5da9756f12559b490217dd5b173db48e7f2a9"}, end: {_id:3848}, properties:{}}, {start: {hash:"5fa5da9756f12559b490217dd5b173db48e7f2a9"}, end: {_id:3844}, properties:{}}, {start: {hash:"2ee1ff690416016dfed50dab6f516559f2270bf9"}, end: {_id:3848}, properties:{}}, {start: {hash:"2ee1ff690416016dfed50dab6f516559f2270bf9"}, end: {_id:3844}, properties:{}}, {start: {hash:"2ee1ff690416016dfed50dab6f516559f2270bf9"}, end: {_id:3838}, properties:{}}, {start: {hash:"19d187e4a29147cbcf1cfae456cfcbfa8ad52b45"}, end: {_id:3848}, properties:{}}, {start: {hash:"19d187e4a29147cbcf1cfae456cfcbfa8ad52b45"}, end: {_id:3844}, properties:{}}, {start: {hash:"5d30d7d7ca658bed21677b1aa56c72a0e0cd737b"}, end: {_id:3848}, properties:{}}, {start: {hash:"5d30d7d7ca658bed21677b1aa56c72a0e0cd737b"}, end: {_id:3844}, properties:{}}, {start: {hash:"5d30d7d7ca658bed21677b1aa56c72a0e0cd737b"}, end: {_id:3838}, properties:{}}, {start: {hash:"fbd513a3c74bf20ecdb67a4243d30356e8b86a01"}, end: {_id:3848}, properties:{}}, {start: {hash:"fbd513a3c74bf20ecdb67a4243d30356e8b86a01"}, end: {_id:3844}, properties:{}}, {start: {hash:"74fe1ac392549eb3aad67d239310b92cc9f0dd10"}, end: {_id:3848}, properties:{}}, {start: {hash:"74fe1ac392549eb3aad67d239310b92cc9f0dd10"}, end: {_id:3844}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"e91c7912b25beb51199ccfff2414668bcc69186e"}, end: {_id:3848}, properties:{}}, {start: {hash:"e91c7912b25beb51199ccfff2414668bcc69186e"}, end: {_id:3844}, properties:{}}, {start: {hash:"ef79a5aec29133d4c479652863c61f943fbdb42b"}, end: {_id:3848}, properties:{}}, {start: {hash:"ef79a5aec29133d4c479652863c61f943fbdb42b"}, end: {_id:3844}, properties:{}}, {start: {hash:"ef79a5aec29133d4c479652863c61f943fbdb42b"}, end: {_id:3838}, properties:{}}, {start: {hash:"ef79a5aec29133d4c479652863c61f943fbdb42b"}, end: {_id:3849}, properties:{}}, {start: {hash:"6283dd7b80fd26ff09d242555a6e56c2eb75471b"}, end: {_id:3848}, properties:{}}, {start: {hash:"6283dd7b80fd26ff09d242555a6e56c2eb75471b"}, end: {_id:3844}, properties:{}}, {start: {hash:"6283dd7b80fd26ff09d242555a6e56c2eb75471b"}, end: {_id:3847}, properties:{}}, {start: {hash:"b4094f63c5d4a216ed7ade1a51ea3653222cf222"}, end: {_id:3848}, properties:{}}, {start: {hash:"b4094f63c5d4a216ed7ade1a51ea3653222cf222"}, end: {_id:3844}, properties:{}}, {start: {hash:"b4094f63c5d4a216ed7ade1a51ea3653222cf222"}, end: {_id:3838}, properties:{}}, {start: {hash:"f844cd8e254b161bebef04101f8ce177bcd0840c"}, end: {_id:3848}, properties:{}}, {start: {hash:"f844cd8e254b161bebef04101f8ce177bcd0840c"}, end: {_id:3842}, properties:{}}, {start: {hash:"806b1a2a47f2f4e580e524b2cf8cc5928749d972"}, end: {_id:3848}, properties:{}}, {start: {hash:"806b1a2a47f2f4e580e524b2cf8cc5928749d972"}, end: {_id:3844}, properties:{}}, {start: {hash:"8d7d2ebe0dbe9ebf8009572d1d710c4700cf245e"}, end: {_id:3848}, properties:{}}, {start: {hash:"8d7d2ebe0dbe9ebf8009572d1d710c4700cf245e"}, end: {_id:3844}, properties:{}}, {start: {hash:"8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2"}, end: {_id:3848}, properties:{}}, {start: {hash:"8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2"}, end: {_id:3844}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"af5af0b8e6a59a9c5879fde7eaaa86d694c2bfa2"}, end: {_id:3845}, properties:{}}, {start: {hash:"af5af0b8e6a59a9c5879fde7eaaa86d694c2bfa2"}, end: {_id:3848}, properties:{}}, {start: {hash:"40eb651a50d0dfd5cf047ef62c8a6259c1c66e02"}, end: {_id:3839}, properties:{}}, {start: {hash:"40eb651a50d0dfd5cf047ef62c8a6259c1c66e02"}, end: {_id:3838}, properties:{}}, {start: {hash:"b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f"}, end: {_id:3848}, properties:{}}, {start: {hash:"b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f"}, end: {_id:3844}, properties:{}}, {start: {hash:"b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f"}, end: {_id:3838}, properties:{}}, {start: {hash:"39a9cabac6765c75591ba258fef0d10ba7ae0f9e"}, end: {_id:3836}, properties:{}}, {start: {hash:"39a9cabac6765c75591ba258fef0d10ba7ae0f9e"}, end: {_id:3838}, properties:{}}, {start: {hash:"24c07bfd5c31438fff6374e9ba3d577e6402d777"}, end: {_id:3848}, properties:{}}, {start: {hash:"24c07bfd5c31438fff6374e9ba3d577e6402d777"}, end: {_id:3844}, properties:{}}, {start: {hash:"f5b50d8dfbec87dba0b824369021dc6b22058840"}, end: {_id:3848}, properties:{}}, {start: {hash:"f5b50d8dfbec87dba0b824369021dc6b22058840"}, end: {_id:3837}, properties:{}}, {start: {hash:"066049972b995fb019bf29be7f0f307064a2f00e"}, end: {_id:3848}, properties:{}}, {start: {hash:"066049972b995fb019bf29be7f0f307064a2f00e"}, end: {_id:3849}, properties:{}}, {start: {hash:"189d96ce0f96c107ebf62dbaf73734e6fd20883a"}, end: {_id:3848}, properties:{}}, {start: {hash:"189d96ce0f96c107ebf62dbaf73734e6fd20883a"}, end: {_id:3844}, properties:{}}, {start: {hash:"189d96ce0f96c107ebf62dbaf73734e6fd20883a"}, end: {_id:3838}, properties:{}}, {start: {hash:"4eed76f9bfd4f93181660178ea689d98cd6d66d5"}, end: {_id:3845}, properties:{}}, {start: {hash:"4eed76f9bfd4f93181660178ea689d98cd6d66d5"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"53ed24b573947c73ea9f0f4f8b477c44b7de2d54"}, end: {_id:3848}, properties:{}}, {start: {hash:"321b1aee88f7d15dafe46aede2b86ced70061025"}, end: {_id:3848}, properties:{}}, {start: {hash:"321b1aee88f7d15dafe46aede2b86ced70061025"}, end: {_id:3844}, properties:{}}, {start: {hash:"70904707a36ff8e5167e695de3529d8318911ba4"}, end: {_id:3844}, properties:{}}, {start: {hash:"70904707a36ff8e5167e695de3529d8318911ba4"}, end: {_id:3838}, properties:{}}, {start: {hash:"5afcf39a85fc972eb9bb3486e5dc8aeeba77d3ee"}, end: {_id:3845}, properties:{}}, {start: {hash:"5afcf39a85fc972eb9bb3486e5dc8aeeba77d3ee"}, end: {_id:3848}, properties:{}}, {start: {hash:"d7f24bafaa9f80e9d3e834dc34b8fbe950a6c437"}, end: {_id:3848}, properties:{}}, {start: {hash:"d7f24bafaa9f80e9d3e834dc34b8fbe950a6c437"}, end: {_id:3847}, properties:{}}, {start: {hash:"e5dd13d33c1e927f932971d067d8f70e9041b5f3"}, end: {_id:3848}, properties:{}}, {start: {hash:"e5dd13d33c1e927f932971d067d8f70e9041b5f3"}, end: {_id:3844}, properties:{}}, {start: {hash:"e5dd13d33c1e927f932971d067d8f70e9041b5f3"}, end: {_id:3838}, properties:{}}, {start: {hash:"ddcc1a8abc1d29e8e32ed3c2e92ed9755dd17014"}, end: {_id:3838}, properties:{}}, {start: {hash:"4e67a501bb3f5187a3e9af523921ac62b8a88469"}, end: {_id:3848}, properties:{}}, {start: {hash:"4e67a501bb3f5187a3e9af523921ac62b8a88469"}, end: {_id:3844}, properties:{}}, {start: {hash:"4e67a501bb3f5187a3e9af523921ac62b8a88469"}, end: {_id:3838}, properties:{}}, {start: {hash:"7b8d9247a679295e0e1791b13d6c437c473e44b8"}, end: {_id:3848}, properties:{}}, {start: {hash:"7b8d9247a679295e0e1791b13d6c437c473e44b8"}, end: {_id:3844}, properties:{}}, {start: {hash:"bf753832a519b0649f8d58d93aa643afe3f94fc7"}, end: {_id:3848}, properties:{}}, {start: {hash:"bf753832a519b0649f8d58d93aa643afe3f94fc7"}, end: {_id:3839}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"09e400452c1bde25fe393dd56c2fd608b84a18ac"}, end: {_id:3848}, properties:{}}, {start: {hash:"09e400452c1bde25fe393dd56c2fd608b84a18ac"}, end: {_id:3838}, properties:{}}, {start: {hash:"d51caa0c810f6d5ad6f0846a317ec2432835aad7"}, end: {_id:3848}, properties:{}}, {start: {hash:"d51caa0c810f6d5ad6f0846a317ec2432835aad7"}, end: {_id:3838}, properties:{}}, {start: {hash:"44d66328ea4467d05d7fb8092631aff5afbd8b26"}, end: {_id:3845}, properties:{}}, {start: {hash:"44d66328ea4467d05d7fb8092631aff5afbd8b26"}, end: {_id:3848}, properties:{}}, {start: {hash:"44d66328ea4467d05d7fb8092631aff5afbd8b26"}, end: {_id:3838}, properties:{}}, {start: {hash:"d750e25615e7e37914119cb257fbd9c7fad3a52a"}, end: {_id:3848}, properties:{}}, {start: {hash:"8b563a7d3c7d90ddd2359500d9781547347cc56a"}, end: {_id:3848}, properties:{}}, {start: {hash:"8b563a7d3c7d90ddd2359500d9781547347cc56a"}, end: {_id:3842}, properties:{}}, {start: {hash:"6de6d83d930bd9459e1cf8c311fa7b45c3f90987"}, end: {_id:3848}, properties:{}}, {start: {hash:"6de6d83d930bd9459e1cf8c311fa7b45c3f90987"}, end: {_id:3842}, properties:{}}, {start: {hash:"7696353632379532ab7006f9eda39fbf14e25532"}, end: {_id:3848}, properties:{}}, {start: {hash:"f8af6bc22bd3d827566e7e65deb63c13cdaf6031"}, end: {_id:3848}, properties:{}}, {start: {hash:"f8af6bc22bd3d827566e7e65deb63c13cdaf6031"}, end: {_id:3844}, properties:{}}, {start: {hash:"cf842d48df037476a754b221f7b4115bb4f5ddf1"}, end: {_id:3838}, properties:{}}, {start: {hash:"cf842d48df037476a754b221f7b4115bb4f5ddf1"}, end: {_id:3849}, properties:{}}, {start: {hash:"ba317d7e402f014589e230fad8c7384016211ba2"}, end: {_id:3848}, properties:{}}, {start: {hash:"ba317d7e402f014589e230fad8c7384016211ba2"}, end: {_id:3839}, properties:{}}, {start: {hash:"636097557e403eb1d6b6211b09e30c47e7f39466"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"636097557e403eb1d6b6211b09e30c47e7f39466"}, end: {_id:3844}, properties:{}}, {start: {hash:"f4363ad27d366385f2388d073ce8af796e035406"}, end: {_id:3836}, properties:{}}, {start: {hash:"f4363ad27d366385f2388d073ce8af796e035406"}, end: {_id:3838}, properties:{}}, {start: {hash:"5be96c3735b14c16dbe87f4c544f5ab1c75ab93a"}, end: {_id:3848}, properties:{}}, {start: {hash:"5be96c3735b14c16dbe87f4c544f5ab1c75ab93a"}, end: {_id:3839}, properties:{}}, {start: {hash:"0ecf0a154918bd9bdc0f53557bc1f80920da6b14"}, end: {_id:3845}, properties:{}}, {start: {hash:"0ecf0a154918bd9bdc0f53557bc1f80920da6b14"}, end: {_id:3848}, properties:{}}, {start: {hash:"521bae59a4002a616eac44c1681ca5066bbd00c8"}, end: {_id:3848}, properties:{}}, {start: {hash:"521bae59a4002a616eac44c1681ca5066bbd00c8"}, end: {_id:3844}, properties:{}}, {start: {hash:"3228ee1c5bfdf89e57e898659b086364122d58c1"}, end: {_id:3848}, properties:{}}, {start: {hash:"3228ee1c5bfdf89e57e898659b086364122d58c1"}, end: {_id:3847}, properties:{}}, {start: {hash:"aef45215a4fe18d7fd03b7556fa3070815c57a22"}, end: {_id:3848}, properties:{}}, {start: {hash:"411ab992ba07e698cb08b56eb4cfc9d6e001d43f"}, end: {_id:3848}, properties:{}}, {start: {hash:"411ab992ba07e698cb08b56eb4cfc9d6e001d43f"}, end: {_id:3839}, properties:{}}, {start: {hash:"411ab992ba07e698cb08b56eb4cfc9d6e001d43f"}, end: {_id:3849}, properties:{}}, {start: {hash:"6a56f400f7de3f4d5cef646d92e3f848608031c1"}, end: {_id:3848}, properties:{}}, {start: {hash:"6a56f400f7de3f4d5cef646d92e3f848608031c1"}, end: {_id:3842}, properties:{}}, {start: {hash:"3a3e9f6d19da0730f2b077b0c160a467102f5666"}, end: {_id:3848}, properties:{}}, {start: {hash:"3a3e9f6d19da0730f2b077b0c160a467102f5666"}, end: {_id:3837}, properties:{}}, {start: {hash:"4fe0be131b0f6b5f073391227b9fe54372506b42"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"25ed0319bf8099f0cc79eceba9104c73d9507e0d"}, end: {_id:3848}, properties:{}}, {start: {hash:"2809f4e2d78ff33b48e9c1742b58a256ebce986d"}, end: {_id:3848}, properties:{}}, {start: {hash:"a49aaeed1776f0991256221e61ebc868ae5b60cb"}, end: {_id:3836}, properties:{}}, {start: {hash:"a49aaeed1776f0991256221e61ebc868ae5b60cb"}, end: {_id:3838}, properties:{}}, {start: {hash:"34d80ece7d0ef598414baffceb074c6580dd819b"}, end: {_id:3848}, properties:{}}, {start: {hash:"34d80ece7d0ef598414baffceb074c6580dd819b"}, end: {_id:3844}, properties:{}}, {start: {hash:"5e63c8390cb1001daf4ad74bb2926cc060c0de08"}, end: {_id:3845}, properties:{}}, {start: {hash:"5e63c8390cb1001daf4ad74bb2926cc060c0de08"}, end: {_id:3848}, properties:{}}, {start: {hash:"5e63c8390cb1001daf4ad74bb2926cc060c0de08"}, end: {_id:3844}, properties:{}}, {start: {hash:"5e63c8390cb1001daf4ad74bb2926cc060c0de08"}, end: {_id:3838}, properties:{}}, {start: {hash:"53588dad5dd4c13903a6c582f74e1afe2671d33e"}, end: {_id:3848}, properties:{}}, {start: {hash:"09636724e63599b1f589065c92074575471ac234"}, end: {_id:3848}, properties:{}}, {start: {hash:"5675965b57d05932ae8b806bad2cd219d15fe516"}, end: {_id:3848}, properties:{}}, {start: {hash:"5675965b57d05932ae8b806bad2cd219d15fe516"}, end: {_id:3849}, properties:{}}, {start: {hash:"4356e9ebf89921898e9459f85f1173d44f3a3a6f"}, end: {_id:3848}, properties:{}}, {start: {hash:"6f802267c2d43803eebbdb383da9e3815c1c68bd"}, end: {_id:3848}, properties:{}}, {start: {hash:"6f802267c2d43803eebbdb383da9e3815c1c68bd"}, end: {_id:3837}, properties:{}}, {start: {hash:"43bba3db97631d8730160950395fde42793adbc2"}, end: {_id:3848}, properties:{}}, {start: {hash:"43bba3db97631d8730160950395fde42793adbc2"}, end: {_id:3838}, properties:{}}, {start: {hash:"43bba3db97631d8730160950395fde42793adbc2"}, end: {_id:3847}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"ed67711a54ca65473c9c7b788161d680914ef1c7"}, end: {_id:3848}, properties:{}}, {start: {hash:"ed67711a54ca65473c9c7b788161d680914ef1c7"}, end: {_id:3849}, properties:{}}, {start: {hash:"ac105ab0a5ae38fbf69167e072f8970a4a61c3e8"}, end: {_id:3848}, properties:{}}, {start: {hash:"ac105ab0a5ae38fbf69167e072f8970a4a61c3e8"}, end: {_id:3849}, properties:{}}, {start: {hash:"484b85587d32f2f2a6d54ffe16d5c759841961f8"}, end: {_id:3838}, properties:{}}, {start: {hash:"46f76d50b8569f450ce909e04f3c5fa81b97737a"}, end: {_id:3848}, properties:{}}, {start: {hash:"c7bc0ce6f3fcaffcbbe7753f1a9d8437809bc167"}, end: {_id:3848}, properties:{}}, {start: {hash:"c7bc0ce6f3fcaffcbbe7753f1a9d8437809bc167"}, end: {_id:3844}, properties:{}}, {start: {hash:"516075e2987bdd1063f22768d451c1c1eb647175"}, end: {_id:3848}, properties:{}}, {start: {hash:"840ed0938bea8867caba921446b8a77a2f1c9e7d"}, end: {_id:3838}, properties:{}}, {start: {hash:"47e62f2fc73a96611606cd619c084d1ded9d844d"}, end: {_id:3848}, properties:{}}, {start: {hash:"47e62f2fc73a96611606cd619c084d1ded9d844d"}, end: {_id:3842}, properties:{}}, {start: {hash:"47e62f2fc73a96611606cd619c084d1ded9d844d"}, end: {_id:3849}, properties:{}}, {start: {hash:"ef1df1044df317c78987f7f8398b4e45f5a3ee0a"}, end: {_id:3839}, properties:{}}, {start: {hash:"ef1df1044df317c78987f7f8398b4e45f5a3ee0a"}, end: {_id:3838}, properties:{}}, {start: {hash:"4a9e2c05092acca34f0608394638776c75496a99"}, end: {_id:3848}, properties:{}}, {start: {hash:"4a9e2c05092acca34f0608394638776c75496a99"}, end: {_id:3838}, properties:{}}, {start: {hash:"4a9e2c05092acca34f0608394638776c75496a99"}, end: {_id:3849}, properties:{}}, {start: {hash:"6e25b2cfb1cb80fd45ab6627a04e52735bb2fb5e"}, end: {_id:3848}, properties:{}}, {start: {hash:"6e25b2cfb1cb80fd45ab6627a04e52735bb2fb5e"}, end: {_id:3844}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0"}, end: {_id:3845}, properties:{}}, {start: {hash:"271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0"}, end: {_id:3848}, properties:{}}, {start: {hash:"271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0"}, end: {_id:3838}, properties:{}}, {start: {hash:"c16481a84d5823b65ce96bd811a265222385b43b"}, end: {_id:3848}, properties:{}}, {start: {hash:"0e69a9978eae9e3432de8f16c2ca1b38033c23a7"}, end: {_id:3838}, properties:{}}, {start: {hash:"948727c5b1e87b970a7a9dee4cd67bb84d19abf8"}, end: {_id:3838}, properties:{}}, {start: {hash:"93ee12adde6ac773c76b590fe89c24df372f326b"}, end: {_id:3848}, properties:{}}, {start: {hash:"93ee12adde6ac773c76b590fe89c24df372f326b"}, end: {_id:3844}, properties:{}}, {start: {hash:"93ee12adde6ac773c76b590fe89c24df372f326b"}, end: {_id:3849}, properties:{}}, {start: {hash:"f70410061b8c6b9249895571e05dfb7a142efb18"}, end: {_id:3848}, properties:{}}, {start: {hash:"f70410061b8c6b9249895571e05dfb7a142efb18"}, end: {_id:3844}, properties:{}}, {start: {hash:"f70410061b8c6b9249895571e05dfb7a142efb18"}, end: {_id:3838}, properties:{}}, {start: {hash:"f70410061b8c6b9249895571e05dfb7a142efb18"}, end: {_id:3849}, properties:{}}, {start: {hash:"cbd8ce761041eac3afbdfbf74e001895895682f2"}, end: {_id:3848}, properties:{}}, {start: {hash:"cbd8ce761041eac3afbdfbf74e001895895682f2"}, end: {_id:3844}, properties:{}}, {start: {hash:"742f35a1fdf66b24ddb1f6a514b2af5a1f2b4282"}, end: {_id:3838}, properties:{}}, {start: {hash:"1c619d5df3f2e7f49dd9a3a47150aa41b0de497f"}, end: {_id:3848}, properties:{}}, {start: {hash:"4ec6d54e4d36ab02b0a7daf042e727717371eaec"}, end: {_id:3848}, properties:{}}, {start: {hash:"4ec6d54e4d36ab02b0a7daf042e727717371eaec"}, end: {_id:3849}, properties:{}}, {start: {hash:"034908d914982eacea51b0ac61f2781069387412"}, end: {_id:3845}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"034908d914982eacea51b0ac61f2781069387412"}, end: {_id:3848}, properties:{}}, {start: {hash:"c130862a29878f0e483551bc115d2ca5bdc4bf5c"}, end: {_id:3848}, properties:{}}, {start: {hash:"c130862a29878f0e483551bc115d2ca5bdc4bf5c"}, end: {_id:3842}, properties:{}}, {start: {hash:"0edcb1dbd7337eab4155be2f2a7683a77cc3cc6d"}, end: {_id:3845}, properties:{}}, {start: {hash:"0edcb1dbd7337eab4155be2f2a7683a77cc3cc6d"}, end: {_id:3848}, properties:{}}, {start: {hash:"038d43dc5f17870bc6681e1d8699e0a0951a859e"}, end: {_id:3848}, properties:{}}, {start: {hash:"038d43dc5f17870bc6681e1d8699e0a0951a859e"}, end: {_id:3839}, properties:{}}, {start: {hash:"14f065e5161fee14c286c34df7db9f5516ef9bb6"}, end: {_id:3848}, properties:{}}, {start: {hash:"14f065e5161fee14c286c34df7db9f5516ef9bb6"}, end: {_id:3839}, properties:{}}, {start: {hash:"ddc29467494ee63c323d0eb6493de6e8440c113e"}, end: {_id:3848}, properties:{}}, {start: {hash:"0c38902905b96c598715a08d5c3880ad01ce5fea"}, end: {_id:3848}, properties:{}}, {start: {hash:"0c38902905b96c598715a08d5c3880ad01ce5fea"}, end: {_id:3847}, properties:{}}, {start: {hash:"163a9de084161e21cb62c19033b4bff7d3a5e649"}, end: {_id:3845}, properties:{}}, {start: {hash:"163a9de084161e21cb62c19033b4bff7d3a5e649"}, end: {_id:3848}, properties:{}}, {start: {hash:"e2a2ef243deb0374ccfe3f37e0d1395d4338969c"}, end: {_id:3848}, properties:{}}, {start: {hash:"e2a2ef243deb0374ccfe3f37e0d1395d4338969c"}, end: {_id:3842}, properties:{}}, {start: {hash:"b9750f0bb88bc22256085b6bc8f060055e90a8c4"}, end: {_id:3848}, properties:{}}, {start: {hash:"b9750f0bb88bc22256085b6bc8f060055e90a8c4"}, end: {_id:3844}, properties:{}}, {start: {hash:"b9750f0bb88bc22256085b6bc8f060055e90a8c4"}, end: {_id:3847}, properties:{}}, {start: {hash:"087f2caeff6ecaa2a18ecc2f20b7313a70d2d191"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"087f2caeff6ecaa2a18ecc2f20b7313a70d2d191"}, end: {_id:3849}, properties:{}}, {start: {hash:"77c58fa499829785825e45aa90e1bb6c7058c5a2"}, end: {_id:3848}, properties:{}}, {start: {hash:"77c58fa499829785825e45aa90e1bb6c7058c5a2"}, end: {_id:3840}, properties:{}}, {start: {hash:"cff3747c70722eba940317dec58dc9c22b3b4939"}, end: {_id:3845}, properties:{}}, {start: {hash:"cff3747c70722eba940317dec58dc9c22b3b4939"}, end: {_id:3838}, properties:{}}, {start: {hash:"cff3747c70722eba940317dec58dc9c22b3b4939"}, end: {_id:3843}, properties:{}}, {start: {hash:"2eb42357d986ad2c3d8693907df99895cee25c63"}, end: {_id:3848}, properties:{}}, {start: {hash:"2eb42357d986ad2c3d8693907df99895cee25c63"}, end: {_id:3846}, properties:{}}, {start: {hash:"803640f6e77857520f69700ccc27c772ee7564e4"}, end: {_id:3844}, properties:{}}, {start: {hash:"803640f6e77857520f69700ccc27c772ee7564e4"}, end: {_id:3838}, properties:{}}, {start: {hash:"fa5f7fb35b0b44020fb81dd5c4e3b9ceaca1f967"}, end: {_id:3848}, properties:{}}, {start: {hash:"fa5f7fb35b0b44020fb81dd5c4e3b9ceaca1f967"}, end: {_id:3844}, properties:{}}, {start: {hash:"4f641b162fa877aef842481631906d5bfe874781"}, end: {_id:3848}, properties:{}}, {start: {hash:"4f641b162fa877aef842481631906d5bfe874781"}, end: {_id:3844}, properties:{}}, {start: {hash:"4f641b162fa877aef842481631906d5bfe874781"}, end: {_id:3838}, properties:{}}, {start: {hash:"0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6"}, end: {_id:3845}, properties:{}}, {start: {hash:"0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6"}, end: {_id:3848}, properties:{}}, {start: {hash:"0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6"}, end: {_id:3838}, properties:{}}, {start: {hash:"8a71bbe9588b78351fe231a4341d07a5e2101ebb"}, end: {_id:3838}, properties:{}}, {start: {hash:"8a71bbe9588b78351fe231a4341d07a5e2101ebb"}, end: {_id:3846}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"81dc1d3f98034672d5f62f440f2cc3abc58ce2a2"}, end: {_id:3848}, properties:{}}, {start: {hash:"81dc1d3f98034672d5f62f440f2cc3abc58ce2a2"}, end: {_id:3844}, properties:{}}, {start: {hash:"e89519dc59655ddbd3ecf56a4d680d7d01128152"}, end: {_id:3848}, properties:{}}, {start: {hash:"e89519dc59655ddbd3ecf56a4d680d7d01128152"}, end: {_id:3838}, properties:{}}, {start: {hash:"e89519dc59655ddbd3ecf56a4d680d7d01128152"}, end: {_id:3849}, properties:{}}, {start: {hash:"0d21bea79e1936e2bdaee58bd6e328dd08e59b30"}, end: {_id:3848}, properties:{}}, {start: {hash:"0d21bea79e1936e2bdaee58bd6e328dd08e59b30"}, end: {_id:3838}, properties:{}}, {start: {hash:"0d21bea79e1936e2bdaee58bd6e328dd08e59b30"}, end: {_id:3849}, properties:{}}, {start: {hash:"605e74facfa2ff519ba5cda6e57474666901bd8c"}, end: {_id:3844}, properties:{}}, {start: {hash:"605e74facfa2ff519ba5cda6e57474666901bd8c"}, end: {_id:3838}, properties:{}}, {start: {hash:"c3c8dd8bebf14f91518253cadadc6d8a88b5ea09"}, end: {_id:3848}, properties:{}}, {start: {hash:"c3c8dd8bebf14f91518253cadadc6d8a88b5ea09"}, end: {_id:3847}, properties:{}}, {start: {hash:"86a0795540edb426c3226775d73fcd4ce807d36a"}, end: {_id:3848}, properties:{}}, {start: {hash:"86a0795540edb426c3226775d73fcd4ce807d36a"}, end: {_id:3844}, properties:{}}, {start: {hash:"2e2092ec94b27a4c3f0b9f4ee4d46a1983a72518"}, end: {_id:3848}, properties:{}}, {start: {hash:"c50fd3b3f25f87a6326684ad44d507d187e24874"}, end: {_id:3838}, properties:{}}, {start: {hash:"c50fd3b3f25f87a6326684ad44d507d187e24874"}, end: {_id:3842}, properties:{}}, {start: {hash:"d9b4b9dcb95b96bdfb09f9631acd91ab34aa7dcf"}, end: {_id:3838}, properties:{}}, {start: {hash:"d9b4b9dcb95b96bdfb09f9631acd91ab34aa7dcf"}, end: {_id:3842}, properties:{}}, {start: {hash:"206394bcc75866953f64cbf3bd6214e4e6f96e91"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"206394bcc75866953f64cbf3bd6214e4e6f96e91"}, end: {_id:3844}, properties:{}}, {start: {hash:"9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c"}, end: {_id:3836}, properties:{}}, {start: {hash:"9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c"}, end: {_id:3838}, properties:{}}, {start: {hash:"665692a86bb65ddfa6c001f296c76c17288e2944"}, end: {_id:3848}, properties:{}}, {start: {hash:"665692a86bb65ddfa6c001f296c76c17288e2944"}, end: {_id:3842}, properties:{}}, {start: {hash:"b0660183c95f4b938dbf33c5607381b8e4e2bd68"}, end: {_id:3845}, properties:{}}, {start: {hash:"b0660183c95f4b938dbf33c5607381b8e4e2bd68"}, end: {_id:3838}, properties:{}}, {start: {hash:"b0660183c95f4b938dbf33c5607381b8e4e2bd68"}, end: {_id:3843}, properties:{}}, {start: {hash:"e3d337caa558830f8e337d24edaab577ee9d43a2"}, end: {_id:3838}, properties:{}}, {start: {hash:"fe1f2665b198308a438ec3d46b24843089df1a2a"}, end: {_id:3845}, properties:{}}, {start: {hash:"fe1f2665b198308a438ec3d46b24843089df1a2a"}, end: {_id:3838}, properties:{}}, {start: {hash:"fe1f2665b198308a438ec3d46b24843089df1a2a"}, end: {_id:3843}, properties:{}}, {start: {hash:"f29cf1138d21a2eba8aaccec3185e461cb8675bd"}, end: {_id:3843}, properties:{}}, {start: {hash:"dfc9a7ea4a62b6e6c14e09b2f08c7fb5c63ca711"}, end: {_id:3843}, properties:{}}, {start: {hash:"e78aad174927ca59a43a622d7e82f664e3005790"}, end: {_id:3838}, properties:{}}, {start: {hash:"e78aad174927ca59a43a622d7e82f664e3005790"}, end: {_id:3847}, properties:{}}, {start: {hash:"71a0250ad3aeed1da2b11734ac22c21831f3595d"}, end: {_id:3848}, properties:{}}, {start: {hash:"71a0250ad3aeed1da2b11734ac22c21831f3595d"}, end: {_id:3842}, properties:{}}, {start: {hash:"9928d58017829d85789bdf45f467b6d32c6354b2"}, end: {_id:3838}, properties:{}}, {start: {hash:"9928d58017829d85789bdf45f467b6d32c6354b2"}, end: {_id:3847}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"53d023dc22daa7b4181b8ea51ce72c6b857aa553"}, end: {_id:3848}, properties:{}}, {start: {hash:"53d023dc22daa7b4181b8ea51ce72c6b857aa553"}, end: {_id:3842}, properties:{}}, {start: {hash:"17007456991c1a8faa26b1f4ac993883f577d124"}, end: {_id:3848}, properties:{}}, {start: {hash:"17007456991c1a8faa26b1f4ac993883f577d124"}, end: {_id:3849}, properties:{}}, {start: {hash:"75fc899c58848b290a31ff92bab92c27b3f6bf53"}, end: {_id:3848}, properties:{}}, {start: {hash:"75fc899c58848b290a31ff92bab92c27b3f6bf53"}, end: {_id:3849}, properties:{}}, {start: {hash:"545b0bb763a4dbaab6b262c4b9642767e2434d07"}, end: {_id:3838}, properties:{}}, {start: {hash:"545b0bb763a4dbaab6b262c4b9642767e2434d07"}, end: {_id:3846}, properties:{}}, {start: {hash:"59c40286757e1fa5cb5391421c5380e5ad506387"}, end: {_id:3848}, properties:{}}, {start: {hash:"59c40286757e1fa5cb5391421c5380e5ad506387"}, end: {_id:3844}, properties:{}}, {start: {hash:"59c40286757e1fa5cb5391421c5380e5ad506387"}, end: {_id:3838}, properties:{}}, {start: {hash:"0c679d7adfa5bf38d5c7846958f3508fc036b3e9"}, end: {_id:3845}, properties:{}}, {start: {hash:"0c679d7adfa5bf38d5c7846958f3508fc036b3e9"}, end: {_id:3848}, properties:{}}, {start: {hash:"e4558e322cd6af610c43a840a59af8dad41f307f"}, end: {_id:3848}, properties:{}}, {start: {hash:"301244e00d9f359f964242849462704f80e8db13"}, end: {_id:3838}, properties:{}}, {start: {hash:"301244e00d9f359f964242849462704f80e8db13"}, end: {_id:3842}, properties:{}}, {start: {hash:"2291a1ac7e47009d058a1a448760cd5559e5946e"}, end: {_id:3848}, properties:{}}, {start: {hash:"2291a1ac7e47009d058a1a448760cd5559e5946e"}, end: {_id:3849}, properties:{}}, {start: {hash:"68171be117d3997b84253258f41fad6daedbc76a"}, end: {_id:3848}, properties:{}}, {start: {hash:"68171be117d3997b84253258f41fad6daedbc76a"}, end: {_id:3844}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"decdbce98d33cf2599aee554779ef5d8b5361d8f"}, end: {_id:3845}, properties:{}}, {start: {hash:"decdbce98d33cf2599aee554779ef5d8b5361d8f"}, end: {_id:3848}, properties:{}}, {start: {hash:"ab28ba331929475431fe695036d0863d329cdac2"}, end: {_id:3848}, properties:{}}, {start: {hash:"ab28ba331929475431fe695036d0863d329cdac2"}, end: {_id:3849}, properties:{}}, {start: {hash:"84628710c900b2d1db058aa0e339134f24e6d20c"}, end: {_id:3836}, properties:{}}, {start: {hash:"84628710c900b2d1db058aa0e339134f24e6d20c"}, end: {_id:3838}, properties:{}}, {start: {hash:"8cd62acc20ce3418eaf4cdd9d8b472091101cdbd"}, end: {_id:3836}, properties:{}}, {start: {hash:"8cd62acc20ce3418eaf4cdd9d8b472091101cdbd"}, end: {_id:3838}, properties:{}}, {start: {hash:"e19dd7497737376a07e62042ed9fb3e8ad9739a9"}, end: {_id:3838}, properties:{}}, {start: {hash:"c11dabf1ea02c0e044c62448986bb3f9abdf3967"}, end: {_id:3848}, properties:{}}, {start: {hash:"c11dabf1ea02c0e044c62448986bb3f9abdf3967"}, end: {_id:3842}, properties:{}}, {start: {hash:"4ba7a9dc3085ab701c85737a4f36dd57fcd7596f"}, end: {_id:3848}, properties:{}}, {start: {hash:"4ba7a9dc3085ab701c85737a4f36dd57fcd7596f"}, end: {_id:3842}, properties:{}}, {start: {hash:"633eb938742a43be09612b944c29aaaf70dac119"}, end: {_id:3844}, properties:{}}, {start: {hash:"633eb938742a43be09612b944c29aaaf70dac119"}, end: {_id:3838}, properties:{}}, {start: {hash:"ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead"}, end: {_id:3848}, properties:{}}, {start: {hash:"ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead"}, end: {_id:3838}, properties:{}}, {start: {hash:"ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead"}, end: {_id:3849}, properties:{}}, {start: {hash:"12f8972a912d97427fe0ef1b84becdc8a2993022"}, end: {_id:3838}, properties:{}}, {start: {hash:"ef0372d2684ef920c6e54cf8b9f80d87db90e636"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"ef0372d2684ef920c6e54cf8b9f80d87db90e636"}, end: {_id:3840}, properties:{}}, {start: {hash:"e09126b45746f1c967d1990fa04ce781a0478c6d"}, end: {_id:3848}, properties:{}}, {start: {hash:"e09126b45746f1c967d1990fa04ce781a0478c6d"}, end: {_id:3844}, properties:{}}, {start: {hash:"79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07"}, end: {_id:3848}, properties:{}}, {start: {hash:"79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07"}, end: {_id:3844}, properties:{}}, {start: {hash:"79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07"}, end: {_id:3849}, properties:{}}, {start: {hash:"f62bfebb54530c9466cfdb21336794f24bcd63a7"}, end: {_id:3848}, properties:{}}, {start: {hash:"f62bfebb54530c9466cfdb21336794f24bcd63a7"}, end: {_id:3846}, properties:{}}, {start: {hash:"43182470f02a463a4b9ee5ed3ec899f5d7de9653"}, end: {_id:3848}, properties:{}}, {start: {hash:"43182470f02a463a4b9ee5ed3ec899f5d7de9653"}, end: {_id:3840}, properties:{}}, {start: {hash:"349c94aeffffb4eef513107d281d59ef6dd33962"}, end: {_id:3848}, properties:{}}, {start: {hash:"349c94aeffffb4eef513107d281d59ef6dd33962"}, end: {_id:3844}, properties:{}}, {start: {hash:"9f8227bf53ebc2b1bb0b99d0697f9f66eed7ab6d"}, end: {_id:3848}, properties:{}}, {start: {hash:"9f8227bf53ebc2b1bb0b99d0697f9f66eed7ab6d"}, end: {_id:3844}, properties:{}}, {start: {hash:"4fd89da7e37ce7f22d920e3584761f702383a8ba"}, end: {_id:3836}, properties:{}}, {start: {hash:"4fd89da7e37ce7f22d920e3584761f702383a8ba"}, end: {_id:3838}, properties:{}}, {start: {hash:"0cb5e776b8695da57892560c89010a8abd817afc"}, end: {_id:3848}, properties:{}}, {start: {hash:"0cb5e776b8695da57892560c89010a8abd817afc"}, end: {_id:3849}, properties:{}}, {start: {hash:"3c48151cd75447f7fbd3e6ce14c491cd28e2442c"}, end: {_id:3844}, properties:{}}, {start: {hash:"3c48151cd75447f7fbd3e6ce14c491cd28e2442c"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"8391f1bd4322fec04fda7509b537c5f66cddbbd9"}, end: {_id:3848}, properties:{}}, {start: {hash:"8391f1bd4322fec04fda7509b537c5f66cddbbd9"}, end: {_id:3842}, properties:{}}, {start: {hash:"998be8119321e8812884075b078a1d5fb36cfa69"}, end: {_id:3848}, properties:{}}, {start: {hash:"998be8119321e8812884075b078a1d5fb36cfa69"}, end: {_id:3844}, properties:{}}, {start: {hash:"c82a19d98673c1aeeb1fa26afb983acbfbea272f"}, end: {_id:3848}, properties:{}}, {start: {hash:"c82a19d98673c1aeeb1fa26afb983acbfbea272f"}, end: {_id:3842}, properties:{}}, {start: {hash:"991915ce492e074d8df658aa54c902b52f9c4cc5"}, end: {_id:3848}, properties:{}}, {start: {hash:"991915ce492e074d8df658aa54c902b52f9c4cc5"}, end: {_id:3840}, properties:{}}, {start: {hash:"7f2ffcc3cbb8538f82cb14377edb08b49105baf7"}, end: {_id:3838}, properties:{}}, {start: {hash:"7f2ffcc3cbb8538f82cb14377edb08b49105baf7"}, end: {_id:3849}, properties:{}}, {start: {hash:"587d3a91c12aae8f0dd4b34a46d03f919ea385c6"}, end: {_id:3841}, properties:{}}, {start: {hash:"587d3a91c12aae8f0dd4b34a46d03f919ea385c6"}, end: {_id:3848}, properties:{}}, {start: {hash:"587d3a91c12aae8f0dd4b34a46d03f919ea385c6"}, end: {_id:3838}, properties:{}}, {start: {hash:"d016b96d89370b8039817fabdfa055576cf6b4cc"}, end: {_id:3836}, properties:{}}, {start: {hash:"d016b96d89370b8039817fabdfa055576cf6b4cc"}, end: {_id:3838}, properties:{}}, {start: {hash:"3f27fe4cb4b75bffb7c1cf754f3f22a61cad9bfd"}, end: {_id:3845}, properties:{}}, {start: {hash:"3f27fe4cb4b75bffb7c1cf754f3f22a61cad9bfd"}, end: {_id:3848}, properties:{}}, {start: {hash:"c291c0954c89e1bfbdb76d4c8990baf9db986343"}, end: {_id:3836}, properties:{}}, {start: {hash:"c291c0954c89e1bfbdb76d4c8990baf9db986343"}, end: {_id:3838}, properties:{}}, {start: {hash:"5ff37f12a421fdd902d8eb1e6d7491ee181fd179"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"5ff37f12a421fdd902d8eb1e6d7491ee181fd179"}, end: {_id:3844}, properties:{}}, {start: {hash:"7e135499d33f0a5c51602a506fefe258cac072c6"}, end: {_id:3836}, properties:{}}, {start: {hash:"7e135499d33f0a5c51602a506fefe258cac072c6"}, end: {_id:3838}, properties:{}}, {start: {hash:"9604c14a781530129e47e7a7684a90db86a7f7a0"}, end: {_id:3848}, properties:{}}, {start: {hash:"9604c14a781530129e47e7a7684a90db86a7f7a0"}, end: {_id:3844}, properties:{}}, {start: {hash:"a39ed520b0048d54886d16c10c988ca905f64c58"}, end: {_id:3848}, properties:{}}, {start: {hash:"a39ed520b0048d54886d16c10c988ca905f64c58"}, end: {_id:3849}, properties:{}}, {start: {hash:"25cda0b77ff329a89551cc6f14fe8c62820fd424"}, end: {_id:3836}, properties:{}}, {start: {hash:"25cda0b77ff329a89551cc6f14fe8c62820fd424"}, end: {_id:3838}, properties:{}}, {start: {hash:"c6b2c1bee4c1e53e87fd3d94fc8c07cf64342d7b"}, end: {_id:3848}, properties:{}}, {start: {hash:"c6b2c1bee4c1e53e87fd3d94fc8c07cf64342d7b"}, end: {_id:3844}, properties:{}}, {start: {hash:"fed8be2748bc2286a6f9888d282d66763ba612ed"}, end: {_id:3839}, properties:{}}, {start: {hash:"fed8be2748bc2286a6f9888d282d66763ba612ed"}, end: {_id:3838}, properties:{}}, {start: {hash:"edbb68b29f7e055a50c16f62a71ee7be8c019407"}, end: {_id:3844}, properties:{}}, {start: {hash:"edbb68b29f7e055a50c16f62a71ee7be8c019407"}, end: {_id:3838}, properties:{}}, {start: {hash:"edbb68b29f7e055a50c16f62a71ee7be8c019407"}, end: {_id:3843}, properties:{}}, {start: {hash:"d0741cddb32ed7970904693e3a697603fa21bbbb"}, end: {_id:3848}, properties:{}}, {start: {hash:"d0741cddb32ed7970904693e3a697603fa21bbbb"}, end: {_id:3839}, properties:{}}, {start: {hash:"f106917bb7b2d8d4428022bb119585bf9f35769c"}, end: {_id:3844}, properties:{}}, {start: {hash:"f106917bb7b2d8d4428022bb119585bf9f35769c"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"638430604158044fcf123adaf8dfdcc91b1a873e"}, end: {_id:3848}, properties:{}}, {start: {hash:"638430604158044fcf123adaf8dfdcc91b1a873e"}, end: {_id:3844}, properties:{}}, {start: {hash:"ec2982c8742cc7bc294f8a3cc07ae9ba5ffcaced"}, end: {_id:3836}, properties:{}}, {start: {hash:"ec2982c8742cc7bc294f8a3cc07ae9ba5ffcaced"}, end: {_id:3838}, properties:{}}, {start: {hash:"cc8cb3ab5e257109ea9f6c19f4d034b1ac7ca4ca"}, end: {_id:3844}, properties:{}}, {start: {hash:"cc8cb3ab5e257109ea9f6c19f4d034b1ac7ca4ca"}, end: {_id:3843}, properties:{}}, {start: {hash:"0d4fbd0a7b296a5c9377a835dff89d1499716082"}, end: {_id:3838}, properties:{}}, {start: {hash:"0d4fbd0a7b296a5c9377a835dff89d1499716082"}, end: {_id:3842}, properties:{}}, {start: {hash:"7ac9544b0c651fd8193eb063079514d0aa41e290"}, end: {_id:3848}, properties:{}}, {start: {hash:"fc054a7183757d1e51e371e7329c5cf848cc6dd8"}, end: {_id:3848}, properties:{}}, {start: {hash:"fc054a7183757d1e51e371e7329c5cf848cc6dd8"}, end: {_id:3837}, properties:{}}, {start: {hash:"eaf81b5f5ca1dbdd8951d4179a631818139566a5"}, end: {_id:3841}, properties:{}}, {start: {hash:"eaf81b5f5ca1dbdd8951d4179a631818139566a5"}, end: {_id:3848}, properties:{}}, {start: {hash:"0db462f5528100ece08d85366fc777cd59fad473"}, end: {_id:3841}, properties:{}}, {start: {hash:"0db462f5528100ece08d85366fc777cd59fad473"}, end: {_id:3848}, properties:{}}, {start: {hash:"4907fd7598d0083705494182d985c6b3b58db2c0"}, end: {_id:3848}, properties:{}}, {start: {hash:"4907fd7598d0083705494182d985c6b3b58db2c0"}, end: {_id:3837}, properties:{}}, {start: {hash:"c10b476d869282ed6cf55def47445b9c703788fe"}, end: {_id:3836}, properties:{}}, {start: {hash:"c10b476d869282ed6cf55def47445b9c703788fe"}, end: {_id:3838}, properties:{}}, {start: {hash:"908c3fd85a60090cdd06f6f4b46893ceeeaf99fb"}, end: {_id:3836}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"908c3fd85a60090cdd06f6f4b46893ceeeaf99fb"}, end: {_id:3838}, properties:{}}, {start: {hash:"7b2a446b0915a3ad26093f8234f7493ff152138a"}, end: {_id:3848}, properties:{}}, {start: {hash:"7b2a446b0915a3ad26093f8234f7493ff152138a"}, end: {_id:3849}, properties:{}}, {start: {hash:"9df6f6e72cd4fa33003fa5498c796bd129c99d0f"}, end: {_id:3848}, properties:{}}, {start: {hash:"9df6f6e72cd4fa33003fa5498c796bd129c99d0f"}, end: {_id:3849}, properties:{}}, {start: {hash:"e51b9583b2df3154b5c82da361d411d65ed23bab"}, end: {_id:3845}, properties:{}}, {start: {hash:"e51b9583b2df3154b5c82da361d411d65ed23bab"}, end: {_id:3848}, properties:{}}, {start: {hash:"33fbb76715ce6e35565b5f83f7ece0f9df37d282"}, end: {_id:3845}, properties:{}}, {start: {hash:"33fbb76715ce6e35565b5f83f7ece0f9df37d282"}, end: {_id:3848}, properties:{}}, {start: {hash:"a252266af60f5ab828ad9b81b17bb7b16a2fc52f"}, end: {_id:3848}, properties:{}}, {start: {hash:"79845fe095cd87287346f40d2adce9b28a32ef35"}, end: {_id:3848}, properties:{}}, {start: {hash:"79845fe095cd87287346f40d2adce9b28a32ef35"}, end: {_id:3844}, properties:{}}, {start: {hash:"6eaf697bf9f111214a6d74ee3094e5784a57d1bb"}, end: {_id:3839}, properties:{}}, {start: {hash:"6eaf697bf9f111214a6d74ee3094e5784a57d1bb"}, end: {_id:3838}, properties:{}}, {start: {hash:"1e208af4c83d093c900f4cccedbca6183142a07f"}, end: {_id:3844}, properties:{}}, {start: {hash:"1e208af4c83d093c900f4cccedbca6183142a07f"}, end: {_id:3838}, properties:{}}, {start: {hash:"dfe44fcf8f5a477e1fbc354f1b1d87af28895c0f"}, end: {_id:3848}, properties:{}}, {start: {hash:"dfe44fcf8f5a477e1fbc354f1b1d87af28895c0f"}, end: {_id:3849}, properties:{}}, {start: {hash:"bfa7b3ae90f1d64d957700976080f9b1921dba30"}, end: {_id:3848}, properties:{}}, {start: {hash:"bfa7b3ae90f1d64d957700976080f9b1921dba30"}, end: {_id:3842}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"77116ea84b2e8d088c644723e787ad5d6d9677fd"}, end: {_id:3838}, properties:{}}, {start: {hash:"77116ea84b2e8d088c644723e787ad5d6d9677fd"}, end: {_id:3849}, properties:{}}, {start: {hash:"0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4"}, end: {_id:3848}, properties:{}}, {start: {hash:"0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4"}, end: {_id:3842}, properties:{}}, {start: {hash:"f2f4deb8bb44988eeb0b64b919e51fb556aef4fb"}, end: {_id:3848}, properties:{}}, {start: {hash:"f2f4deb8bb44988eeb0b64b919e51fb556aef4fb"}, end: {_id:3844}, properties:{}}, {start: {hash:"9e3285b91b2a95271c3b4d0c8777f5363bfdfd40"}, end: {_id:3848}, properties:{}}, {start: {hash:"9e3285b91b2a95271c3b4d0c8777f5363bfdfd40"}, end: {_id:3844}, properties:{}}, {start: {hash:"9e3285b91b2a95271c3b4d0c8777f5363bfdfd40"}, end: {_id:3838}, properties:{}}, {start: {hash:"e5dd322eadc9e0a00fd3a603d5a9e9e07a812df6"}, end: {_id:3848}, properties:{}}, {start: {hash:"e5dd322eadc9e0a00fd3a603d5a9e9e07a812df6"}, end: {_id:3842}, properties:{}}, {start: {hash:"afed4b83a174335ec2b371061c81bc92938ecda3"}, end: {_id:3844}, properties:{}}, {start: {hash:"afed4b83a174335ec2b371061c81bc92938ecda3"}, end: {_id:3838}, properties:{}}, {start: {hash:"a9ea9d09727825f9a047e70d94caf73c99e6b2a8"}, end: {_id:3848}, properties:{}}, {start: {hash:"a9ea9d09727825f9a047e70d94caf73c99e6b2a8"}, end: {_id:3842}, properties:{}}, {start: {hash:"5298263d68548372c064b9d9c76977325a7373c8"}, end: {_id:3844}, properties:{}}, {start: {hash:"5298263d68548372c064b9d9c76977325a7373c8"}, end: {_id:3838}, properties:{}}, {start: {hash:"d7afb9018e20ef85f1fbee2300dbf5c5cdf3cb0e"}, end: {_id:3844}, properties:{}}, {start: {hash:"d7afb9018e20ef85f1fbee2300dbf5c5cdf3cb0e"}, end: {_id:3838}, properties:{}}, {start: {hash:"5199e517f5e08b8bed3f96334b102814b3e99200"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"cca186a0f7165b361f372c87524011e91b28f41a"}, end: {_id:3844}, properties:{}}, {start: {hash:"cca186a0f7165b361f372c87524011e91b28f41a"}, end: {_id:3838}, properties:{}}, {start: {hash:"faaecdc2e201a146f76f4a94f51e9fd5c5a428f3"}, end: {_id:3848}, properties:{}}, {start: {hash:"348b52a2ae5d6d242c8802644f9e3a5e6460de1d"}, end: {_id:3848}, properties:{}}, {start: {hash:"348b52a2ae5d6d242c8802644f9e3a5e6460de1d"}, end: {_id:3838}, properties:{}}, {start: {hash:"348b52a2ae5d6d242c8802644f9e3a5e6460de1d"}, end: {_id:3842}, properties:{}}, {start: {hash:"38d0a67cf70d46c26675ce60a7a647eef0f11e52"}, end: {_id:3848}, properties:{}}, {start: {hash:"38d0a67cf70d46c26675ce60a7a647eef0f11e52"}, end: {_id:3849}, properties:{}}, {start: {hash:"d75eace6e505fe5645647593ab8a9bb018db64c2"}, end: {_id:3848}, properties:{}}, {start: {hash:"d75eace6e505fe5645647593ab8a9bb018db64c2"}, end: {_id:3844}, properties:{}}, {start: {hash:"71f034f3e13e9118a2a954e1fc3c0d35153184f0"}, end: {_id:3836}, properties:{}}, {start: {hash:"71f034f3e13e9118a2a954e1fc3c0d35153184f0"}, end: {_id:3838}, properties:{}}, {start: {hash:"37f66bc43f57b1b7a5a897c58cefe09900afd7ef"}, end: {_id:3848}, properties:{}}, {start: {hash:"37f66bc43f57b1b7a5a897c58cefe09900afd7ef"}, end: {_id:3844}, properties:{}}, {start: {hash:"30be6aa1969e37d512153b558540fe714b635c4c"}, end: {_id:3845}, properties:{}}, {start: {hash:"30be6aa1969e37d512153b558540fe714b635c4c"}, end: {_id:3848}, properties:{}}, {start: {hash:"f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac"}, end: {_id:3845}, properties:{}}, {start: {hash:"f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac"}, end: {_id:3848}, properties:{}}, {start: {hash:"b26b9e5d1b13602a4c192d9697a12df7770906b2"}, end: {_id:3845}, properties:{}}, {start: {hash:"b26b9e5d1b13602a4c192d9697a12df7770906b2"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"3971011e4253cb5b98fdf77a558f5ef8f34d2653"}, end: {_id:3848}, properties:{}}, {start: {hash:"3971011e4253cb5b98fdf77a558f5ef8f34d2653"}, end: {_id:3844}, properties:{}}, {start: {hash:"9edee1a04f6056f367ce5ef678775c1203d6a778"}, end: {_id:3848}, properties:{}}, {start: {hash:"9edee1a04f6056f367ce5ef678775c1203d6a778"}, end: {_id:3837}, properties:{}}, {start: {hash:"7244eed07a1008675f45cc4349bf68141bb29edc"}, end: {_id:3848}, properties:{}}, {start: {hash:"7244eed07a1008675f45cc4349bf68141bb29edc"}, end: {_id:3844}, properties:{}}, {start: {hash:"e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66"}, end: {_id:3845}, properties:{}}, {start: {hash:"e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66"}, end: {_id:3848}, properties:{}}, {start: {hash:"11234f631f7370dd80ee5fbc5dd7bdbc12dcbf49"}, end: {_id:3839}, properties:{}}, {start: {hash:"11234f631f7370dd80ee5fbc5dd7bdbc12dcbf49"}, end: {_id:3838}, properties:{}}, {start: {hash:"ea9c4efeb857958f5a31b75d22555c34e1181937"}, end: {_id:3848}, properties:{}}, {start: {hash:"cd97b1881cb0d1c145b8b6236a3702a970c671c2"}, end: {_id:3844}, properties:{}}, {start: {hash:"cd97b1881cb0d1c145b8b6236a3702a970c671c2"}, end: {_id:3838}, properties:{}}, {start: {hash:"c11fca6440a5000648f690e6282778fb4ec73309"}, end: {_id:3848}, properties:{}}, {start: {hash:"c11fca6440a5000648f690e6282778fb4ec73309"}, end: {_id:3849}, properties:{}}, {start: {hash:"fa109033da045468d612fe8eae1a2f903e30e128"}, end: {_id:3848}, properties:{}}, {start: {hash:"fa109033da045468d612fe8eae1a2f903e30e128"}, end: {_id:3839}, properties:{}}, {start: {hash:"7de45302cfa8a7dca88ab61b3021091cc480b495"}, end: {_id:3838}, properties:{}}, {start: {hash:"5127d7a6eccc6965d1e51928d50ee01a46b38871"}, end: {_id:3844}, properties:{}}, {start: {hash:"5127d7a6eccc6965d1e51928d50ee01a46b38871"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"5127d7a6eccc6965d1e51928d50ee01a46b38871"}, end: {_id:3846}, properties:{}}, {start: {hash:"f4113a8f7e52991dfb75f63688aeba77bac76b01"}, end: {_id:3848}, properties:{}}, {start: {hash:"f4113a8f7e52991dfb75f63688aeba77bac76b01"}, end: {_id:3844}, properties:{}}, {start: {hash:"3b0e2fe42d660664c49d54ae8706de004a9b4176"}, end: {_id:3838}, properties:{}}, {start: {hash:"42c288d84b5f7853c36dcc55d181b8e16d3304a5"}, end: {_id:3836}, properties:{}}, {start: {hash:"42c288d84b5f7853c36dcc55d181b8e16d3304a5"}, end: {_id:3838}, properties:{}}, {start: {hash:"de97a6b8033c866c3b711468207aa4890049daaa"}, end: {_id:3848}, properties:{}}, {start: {hash:"de97a6b8033c866c3b711468207aa4890049daaa"}, end: {_id:3844}, properties:{}}, {start: {hash:"ce576be106257496e20d946d6eab5f8783dada92"}, end: {_id:3848}, properties:{}}, {start: {hash:"ce576be106257496e20d946d6eab5f8783dada92"}, end: {_id:3849}, properties:{}}, {start: {hash:"4b495fef39e68590aea98af324340adafadfb334"}, end: {_id:3844}, properties:{}}, {start: {hash:"4b495fef39e68590aea98af324340adafadfb334"}, end: {_id:3838}, properties:{}}, {start: {hash:"a873443bd618ac9c14d12210ed4d12a11cc1f733"}, end: {_id:3845}, properties:{}}, {start: {hash:"a873443bd618ac9c14d12210ed4d12a11cc1f733"}, end: {_id:3848}, properties:{}}, {start: {hash:"19c37f7e4e65d14e760f1ff8cf60cfd1e98c1a8b"}, end: {_id:3845}, properties:{}}, {start: {hash:"19c37f7e4e65d14e760f1ff8cf60cfd1e98c1a8b"}, end: {_id:3848}, properties:{}}, {start: {hash:"bbfbd2484ace2819ffceac9155b995ab870ee3a3"}, end: {_id:3845}, properties:{}}, {start: {hash:"bbfbd2484ace2819ffceac9155b995ab870ee3a3"}, end: {_id:3848}, properties:{}}, {start: {hash:"2afa0c4652393014778f9b2fefcf975d6ca22ae2"}, end: {_id:3848}, properties:{}}, {start: {hash:"0208ae3bc238f029b1faf6bdc3552dbe6147657b"}, end: {_id:3845}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"0208ae3bc238f029b1faf6bdc3552dbe6147657b"}, end: {_id:3848}, properties:{}}, {start: {hash:"c00d24a1626e7d88a33431e4b403651acf158e05"}, end: {_id:3845}, properties:{}}, {start: {hash:"c00d24a1626e7d88a33431e4b403651acf158e05"}, end: {_id:3848}, properties:{}}, {start: {hash:"0662f7e1bfc70e21d8229e142b98b6c303addbc3"}, end: {_id:3848}, properties:{}}, {start: {hash:"0662f7e1bfc70e21d8229e142b98b6c303addbc3"}, end: {_id:3847}, properties:{}}, {start: {hash:"89fd3ebb3ba1ccc9a9019ad250b93a336d4bc03e"}, end: {_id:3836}, properties:{}}, {start: {hash:"89fd3ebb3ba1ccc9a9019ad250b93a336d4bc03e"}, end: {_id:3838}, properties:{}}, {start: {hash:"1af5d07714182455cafd972556b507409f9559ae"}, end: {_id:3848}, properties:{}}, {start: {hash:"1af5d07714182455cafd972556b507409f9559ae"}, end: {_id:3844}, properties:{}}, {start: {hash:"5e8b6f6b88db49a0508ea670d71070c92cfdbaca"}, end: {_id:3844}, properties:{}}, {start: {hash:"5e8b6f6b88db49a0508ea670d71070c92cfdbaca"}, end: {_id:3838}, properties:{}}, {start: {hash:"667f5715c19534bfe5b01ad692979447412fd033"}, end: {_id:3838}, properties:{}}, {start: {hash:"aeab4d039020c0d63209d7f800f9c34fae4060e6"}, end: {_id:3848}, properties:{}}, {start: {hash:"2b30952f26e8a8e66fe8b6eddf9c4657e0d074d4"}, end: {_id:3848}, properties:{}}, {start: {hash:"2b30952f26e8a8e66fe8b6eddf9c4657e0d074d4"}, end: {_id:3849}, properties:{}}, {start: {hash:"772c5ad20818738b09d01cd70ca3de80cbf66dcb"}, end: {_id:3848}, properties:{}}, {start: {hash:"7c4205cd130c5463d7f39aa6f281e198c143d0d9"}, end: {_id:3848}, properties:{}}, {start: {hash:"cfe92035f1b281cddfcf62664ec6b96e85e0ac32"}, end: {_id:3848}, properties:{}}, {start: {hash:"cfe92035f1b281cddfcf62664ec6b96e85e0ac32"}, end: {_id:3844}, properties:{}}, {start: {hash:"65e44242c0b5f27d64ff714e5a8eed71ca02ab26"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"65e44242c0b5f27d64ff714e5a8eed71ca02ab26"}, end: {_id:3837}, properties:{}}, {start: {hash:"028bbe114d099b0388be9a46adcab80d9383a518"}, end: {_id:3836}, properties:{}}, {start: {hash:"028bbe114d099b0388be9a46adcab80d9383a518"}, end: {_id:3838}, properties:{}}, {start: {hash:"804ab045e330d3b669282e55c5bcc4660ebffea8"}, end: {_id:3848}, properties:{}}, {start: {hash:"804ab045e330d3b669282e55c5bcc4660ebffea8"}, end: {_id:3849}, properties:{}}, {start: {hash:"6085ce34a95fbc4a8d651a3f6a0405811952af93"}, end: {_id:3848}, properties:{}}, {start: {hash:"6085ce34a95fbc4a8d651a3f6a0405811952af93"}, end: {_id:3838}, properties:{}}, {start: {hash:"7e5c997c23683a707aa384b6a07801210b1839b8"}, end: {_id:3836}, properties:{}}, {start: {hash:"7e5c997c23683a707aa384b6a07801210b1839b8"}, end: {_id:3838}, properties:{}}, {start: {hash:"3ba302c69eb2a491a5b23e94084b4ddd24a4a703"}, end: {_id:3836}, properties:{}}, {start: {hash:"3ba302c69eb2a491a5b23e94084b4ddd24a4a703"}, end: {_id:3838}, properties:{}}, {start: {hash:"12cf2cb526ed6b2d12106894ca735cf81ba432ff"}, end: {_id:3836}, properties:{}}, {start: {hash:"12cf2cb526ed6b2d12106894ca735cf81ba432ff"}, end: {_id:3838}, properties:{}}, {start: {hash:"cce6b14692fccd30c027851607a9526151d4c3d2"}, end: {_id:3839}, properties:{}}, {start: {hash:"cce6b14692fccd30c027851607a9526151d4c3d2"}, end: {_id:3838}, properties:{}}, {start: {hash:"2709680d633653ca9bd68a023981a75427daaa7a"}, end: {_id:3845}, properties:{}}, {start: {hash:"2709680d633653ca9bd68a023981a75427daaa7a"}, end: {_id:3848}, properties:{}}, {start: {hash:"9ec3047d95969e8d2b729e6545672c3084ea846d"}, end: {_id:3848}, properties:{}}, {start: {hash:"9ec3047d95969e8d2b729e6545672c3084ea846d"}, end: {_id:3844}, properties:{}}, {start: {hash:"629819ce0c440760be155874cb42ab497f0304bd"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"629819ce0c440760be155874cb42ab497f0304bd"}, end: {_id:3844}, properties:{}}, {start: {hash:"ac39d3b9140e90bfd4b9eaa01200385bf10cc15d"}, end: {_id:3845}, properties:{}}, {start: {hash:"ac39d3b9140e90bfd4b9eaa01200385bf10cc15d"}, end: {_id:3848}, properties:{}}, {start: {hash:"aaa8e0261a01a62fa4a343788b3df20b9e93ee38"}, end: {_id:3840}, properties:{}}, {start: {hash:"aaa8e0261a01a62fa4a343788b3df20b9e93ee38"}, end: {_id:3838}, properties:{}}, {start: {hash:"3378831be84bb1825c847a001c3c240318d991dc"}, end: {_id:3844}, properties:{}}, {start: {hash:"3378831be84bb1825c847a001c3c240318d991dc"}, end: {_id:3838}, properties:{}}, {start: {hash:"28b9313a2bb11c357deeaa256950fb0acf220bc4"}, end: {_id:3844}, properties:{}}, {start: {hash:"28b9313a2bb11c357deeaa256950fb0acf220bc4"}, end: {_id:3838}, properties:{}}, {start: {hash:"5ea19806f7fcba7727e8111fc5ff4946b9ba72c8"}, end: {_id:3844}, properties:{}}, {start: {hash:"5ea19806f7fcba7727e8111fc5ff4946b9ba72c8"}, end: {_id:3838}, properties:{}}, {start: {hash:"265d6c5b8a1e01032402d4b2c94d12d5365e5e6e"}, end: {_id:3844}, properties:{}}, {start: {hash:"265d6c5b8a1e01032402d4b2c94d12d5365e5e6e"}, end: {_id:3838}, properties:{}}, {start: {hash:"ad841964564c461513643bb13531dc07111efc7d"}, end: {_id:3837}, properties:{}}, {start: {hash:"ad841964564c461513643bb13531dc07111efc7d"}, end: {_id:3838}, properties:{}}, {start: {hash:"45053a0862bf97f0525862c411fa4da5d59ac397"}, end: {_id:3848}, properties:{}}, {start: {hash:"45053a0862bf97f0525862c411fa4da5d59ac397"}, end: {_id:3844}, properties:{}}, {start: {hash:"5ba235b0c935de75c2cb2f57686bc246816a7f74"}, end: {_id:3848}, properties:{}}, {start: {hash:"4759aa86a84ee099d6ce3f3987520a5b6cd1ffd3"}, end: {_id:3838}, properties:{}}, {start: {hash:"4759aa86a84ee099d6ce3f3987520a5b6cd1ffd3"}, end: {_id:3842}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"3bc712aba0c797053b5cdc113e3e46afb6cff8a5"}, end: {_id:3848}, properties:{}}, {start: {hash:"3bc712aba0c797053b5cdc113e3e46afb6cff8a5"}, end: {_id:3844}, properties:{}}, {start: {hash:"e8c7b2eb22d08ddd1a1bb375cb6efa4165c9098f"}, end: {_id:3839}, properties:{}}, {start: {hash:"e8c7b2eb22d08ddd1a1bb375cb6efa4165c9098f"}, end: {_id:3838}, properties:{}}, {start: {hash:"0d7b5b0f6f92ff6cfde1f17ad96d1b1459a0957a"}, end: {_id:3848}, properties:{}}, {start: {hash:"0d7b5b0f6f92ff6cfde1f17ad96d1b1459a0957a"}, end: {_id:3844}, properties:{}}, {start: {hash:"1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7"}, end: {_id:3848}, properties:{}}, {start: {hash:"1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7"}, end: {_id:3844}, properties:{}}, {start: {hash:"1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7"}, end: {_id:3849}, properties:{}}, {start: {hash:"759b1d641a430bf189354e9a4866e72fe56c22dc"}, end: {_id:3844}, properties:{}}, {start: {hash:"759b1d641a430bf189354e9a4866e72fe56c22dc"}, end: {_id:3838}, properties:{}}, {start: {hash:"bf59a4c995822ccfdeee64781345c12ebefa967f"}, end: {_id:3848}, properties:{}}, {start: {hash:"bf59a4c995822ccfdeee64781345c12ebefa967f"}, end: {_id:3842}, properties:{}}, {start: {hash:"4894def3589d532789cc8af0c0b197727e0fb3f4"}, end: {_id:3848}, properties:{}}, {start: {hash:"4894def3589d532789cc8af0c0b197727e0fb3f4"}, end: {_id:3844}, properties:{}}, {start: {hash:"6e85cf4f7e7f76c159c2e30952a775d6facaf638"}, end: {_id:3848}, properties:{}}, {start: {hash:"6e85cf4f7e7f76c159c2e30952a775d6facaf638"}, end: {_id:3842}, properties:{}}, {start: {hash:"5403a8978053a1299b0afe8d7fc59e914fc5e354"}, end: {_id:3848}, properties:{}}, {start: {hash:"5403a8978053a1299b0afe8d7fc59e914fc5e354"}, end: {_id:3849}, properties:{}}, {start: {hash:"6089a019df4c39231e596af627ebd910877d11d0"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"6089a019df4c39231e596af627ebd910877d11d0"}, end: {_id:3844}, properties:{}}, {start: {hash:"25bbff736936b64a6120ef9608498830ecec33c0"}, end: {_id:3845}, properties:{}}, {start: {hash:"25bbff736936b64a6120ef9608498830ecec33c0"}, end: {_id:3848}, properties:{}}, {start: {hash:"832682e0b54ede90b021b4ed575dcc9e761135ce"}, end: {_id:3848}, properties:{}}, {start: {hash:"832682e0b54ede90b021b4ed575dcc9e761135ce"}, end: {_id:3837}, properties:{}}, {start: {hash:"941e316bcd70779e868311253f663f8acd5ef155"}, end: {_id:3848}, properties:{}}, {start: {hash:"941e316bcd70779e868311253f663f8acd5ef155"}, end: {_id:3842}, properties:{}}, {start: {hash:"cb9f00a2f6f23b44f7db08863ef5fb0b9ea0bc0c"}, end: {_id:3848}, properties:{}}, {start: {hash:"cb9f00a2f6f23b44f7db08863ef5fb0b9ea0bc0c"}, end: {_id:3844}, properties:{}}, {start: {hash:"d34dcd505074546f77367786f5362891050c3440"}, end: {_id:3845}, properties:{}}, {start: {hash:"d34dcd505074546f77367786f5362891050c3440"}, end: {_id:3844}, properties:{}}, {start: {hash:"d34dcd505074546f77367786f5362891050c3440"}, end: {_id:3838}, properties:{}}, {start: {hash:"70a31f9b9a167e5025bb4099cc584044c47e699b"}, end: {_id:3848}, properties:{}}, {start: {hash:"70a31f9b9a167e5025bb4099cc584044c47e699b"}, end: {_id:3844}, properties:{}}, {start: {hash:"bacda9d75b329997eb849183cf36ff8f97a9ee83"}, end: {_id:3844}, properties:{}}, {start: {hash:"bacda9d75b329997eb849183cf36ff8f97a9ee83"}, end: {_id:3838}, properties:{}}, {start: {hash:"3945c8e2bd7a2b7e73169aceae9dc1817ec8292c"}, end: {_id:3848}, properties:{}}, {start: {hash:"5f9f8fb118a42d7b18ec082be41665ed2b9eb992"}, end: {_id:3848}, properties:{}}, {start: {hash:"44016d6a8e496b69308a81e88af8c9ef8b710ab3"}, end: {_id:3848}, properties:{}}, {start: {hash:"44016d6a8e496b69308a81e88af8c9ef8b710ab3"}, end: {_id:3849}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"ec5ec7bac99558a4e95e95788f846eb618edb861"}, end: {_id:3848}, properties:{}}, {start: {hash:"ec5ec7bac99558a4e95e95788f846eb618edb861"}, end: {_id:3844}, properties:{}}, {start: {hash:"1ab89439a42782f55a2ad591530118dbabd9a447"}, end: {_id:3844}, properties:{}}, {start: {hash:"1ab89439a42782f55a2ad591530118dbabd9a447"}, end: {_id:3838}, properties:{}}, {start: {hash:"effee9cbc473af5d07cfc3aacece50aa6e59753a"}, end: {_id:3848}, properties:{}}, {start: {hash:"effee9cbc473af5d07cfc3aacece50aa6e59753a"}, end: {_id:3844}, properties:{}}, {start: {hash:"cb45bf17da799afaa789206e3fcd39d9403e0567"}, end: {_id:3848}, properties:{}}, {start: {hash:"cb45bf17da799afaa789206e3fcd39d9403e0567"}, end: {_id:3839}, properties:{}}, {start: {hash:"da9e2869456610a0228cb14f850c6eccddbb15e0"}, end: {_id:3848}, properties:{}}, {start: {hash:"da9e2869456610a0228cb14f850c6eccddbb15e0"}, end: {_id:3849}, properties:{}}, {start: {hash:"a433a5d5788a358e7437cb15097d68bd1220eda7"}, end: {_id:3848}, properties:{}}, {start: {hash:"a433a5d5788a358e7437cb15097d68bd1220eda7"}, end: {_id:3844}, properties:{}}, {start: {hash:"d5ac10f438b093d600047b0c9790e71bbbaa0ab2"}, end: {_id:3838}, properties:{}}, {start: {hash:"e9dcc211445f9e315d894e61cd147cf5acf151d9"}, end: {_id:3848}, properties:{}}, {start: {hash:"e9dcc211445f9e315d894e61cd147cf5acf151d9"}, end: {_id:3842}, properties:{}}, {start: {hash:"e9dcc211445f9e315d894e61cd147cf5acf151d9"}, end: {_id:3847}, properties:{}}, {start: {hash:"4214c1c19120650c6888d1c1a8d107755d6c6c2e"}, end: {_id:3838}, properties:{}}, {start: {hash:"4214c1c19120650c6888d1c1a8d107755d6c6c2e"}, end: {_id:3847}, properties:{}}, {start: {hash:"7a9c468b88d2edee19007cff6529a20a38eeb363"}, end: {_id:3838}, properties:{}}, {start: {hash:"620750695d8f83d79451948d2a43bf920b48c062"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"620750695d8f83d79451948d2a43bf920b48c062"}, end: {_id:3842}, properties:{}}, {start: {hash:"e357e4e6879f9f6fb09cf28a40684d30d0e63400"}, end: {_id:3848}, properties:{}}, {start: {hash:"e357e4e6879f9f6fb09cf28a40684d30d0e63400"}, end: {_id:3842}, properties:{}}, {start: {hash:"bded5e3007349a6c47c509336ee9306d234902d6"}, end: {_id:3838}, properties:{}}, {start: {hash:"e4003aa3c51b789e2a2b5828768a7d0f34659209"}, end: {_id:3845}, properties:{}}, {start: {hash:"e4003aa3c51b789e2a2b5828768a7d0f34659209"}, end: {_id:3848}, properties:{}}, {start: {hash:"48015a86eda461d99b580b69db5922acbe5bd28e"}, end: {_id:3836}, properties:{}}, {start: {hash:"48015a86eda461d99b580b69db5922acbe5bd28e"}, end: {_id:3838}, properties:{}}, {start: {hash:"adaf03ac0d5a324880e9e6aa10d54b9de6b4e635"}, end: {_id:3836}, properties:{}}, {start: {hash:"adaf03ac0d5a324880e9e6aa10d54b9de6b4e635"}, end: {_id:3838}, properties:{}}, {start: {hash:"bc7484cd34698f2724e5d9f241fd9f53d953e3a3"}, end: {_id:3836}, properties:{}}, {start: {hash:"bc7484cd34698f2724e5d9f241fd9f53d953e3a3"}, end: {_id:3838}, properties:{}}, {start: {hash:"3c5d381a20fbd287f1003271ee1ba64272325074"}, end: {_id:3848}, properties:{}}, {start: {hash:"3c5d381a20fbd287f1003271ee1ba64272325074"}, end: {_id:3840}, properties:{}}, {start: {hash:"9cbfebaab11cb3466b160d18ef2eb46c0b875d55"}, end: {_id:3848}, properties:{}}, {start: {hash:"9cbfebaab11cb3466b160d18ef2eb46c0b875d55"}, end: {_id:3844}, properties:{}}, {start: {hash:"8bd6e745475f635d6f6b6929a545afa2e1d9dd57"}, end: {_id:3848}, properties:{}}, {start: {hash:"3794d676f4375842364a080e78750b41d9af22d5"}, end: {_id:3848}, properties:{}}, {start: {hash:"3794d676f4375842364a080e78750b41d9af22d5"}, end: {_id:3849}, properties:{}}, {start: {hash:"d27b48345a3827b8a10cb5388e42bd5cbea484bb"}, end: {_id:3845}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"d27b48345a3827b8a10cb5388e42bd5cbea484bb"}, end: {_id:3848}, properties:{}}, {start: {hash:"f6c64d1b6ed367803a833da293e84d61573a7fd8"}, end: {_id:3848}, properties:{}}, {start: {hash:"f6c64d1b6ed367803a833da293e84d61573a7fd8"}, end: {_id:3844}, properties:{}}, {start: {hash:"300ed87cba6912103723b03d62c9b0bf93df36ea"}, end: {_id:3848}, properties:{}}, {start: {hash:"300ed87cba6912103723b03d62c9b0bf93df36ea"}, end: {_id:3847}, properties:{}}, {start: {hash:"ce89df3cebc6487146391afe9517661053229f77"}, end: {_id:3838}, properties:{}}, {start: {hash:"b49579fbecbe8002932fdfb86146f83efd60bfcf"}, end: {_id:3838}, properties:{}}, {start: {hash:"3a96bab387bf898fd71023961e0cd957488e357b"}, end: {_id:3848}, properties:{}}, {start: {hash:"3a96bab387bf898fd71023961e0cd957488e357b"}, end: {_id:3837}, properties:{}}, {start: {hash:"f1383adda80c8d0960fa8153c2a82f03ce81e874"}, end: {_id:3848}, properties:{}}, {start: {hash:"f1383adda80c8d0960fa8153c2a82f03ce81e874"}, end: {_id:3840}, properties:{}}, {start: {hash:"94e101feda4af9eef9980dc024c9d1a95afe3e6f"}, end: {_id:3848}, properties:{}}, {start: {hash:"e88177b8ea5d4ef9f53f70ade27232de7a360800"}, end: {_id:3838}, properties:{}}, {start: {hash:"0019704e14723aaf326840ab36c594c3f514a2d4"}, end: {_id:3848}, properties:{}}, {start: {hash:"9438dcebde79c0726d69ae6a15c99b9c5c0f461c"}, end: {_id:3848}, properties:{}}, {start: {hash:"c528b5e97d9d1b57087bd60644a885dd9b4a2294"}, end: {_id:3848}, properties:{}}, {start: {hash:"c528b5e97d9d1b57087bd60644a885dd9b4a2294"}, end: {_id:3842}, properties:{}}, {start: {hash:"cacd8afbc18273e42e4027b36b3a5e9c37c04405"}, end: {_id:3848}, properties:{}}, {start: {hash:"cacd8afbc18273e42e4027b36b3a5e9c37c04405"}, end: {_id:3842}, properties:{}}, {start: {hash:"137c1c3085bb95b74e2d5a695c3343ca25830fd3"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"137c1c3085bb95b74e2d5a695c3343ca25830fd3"}, end: {_id:3844}, properties:{}}, {start: {hash:"324c8a499794f6a789d583c4c460af9475171215"}, end: {_id:3848}, properties:{}}, {start: {hash:"a10df203e8892e1a868bd88d798589719a582ba6"}, end: {_id:3848}, properties:{}}, {start: {hash:"a10df203e8892e1a868bd88d798589719a582ba6"}, end: {_id:3847}, properties:{}}, {start: {hash:"773446c8f3192a447b8956f71b1ac90e7a9b8afa"}, end: {_id:3838}, properties:{}}, {start: {hash:"c784bc0a3f747b66ab7cd01f23bbbdbad3bfe705"}, end: {_id:3838}, properties:{}}, {start: {hash:"c784bc0a3f747b66ab7cd01f23bbbdbad3bfe705"}, end: {_id:3847}, properties:{}}, {start: {hash:"1d0b5db7f310dc6a47af3130a97e5373d9cdaddf"}, end: {_id:3848}, properties:{}}, {start: {hash:"1d0b5db7f310dc6a47af3130a97e5373d9cdaddf"}, end: {_id:3844}, properties:{}}, {start: {hash:"2bd01358b3a30d1680074f9bbd120da3a1456450"}, end: {_id:3845}, properties:{}}, {start: {hash:"2bd01358b3a30d1680074f9bbd120da3a1456450"}, end: {_id:3848}, properties:{}}, {start: {hash:"494706fc421a0ddda47f7d543b7e7a296c378c26"}, end: {_id:3848}, properties:{}}, {start: {hash:"ccd141993815d0b1f444d12bbd2bdcdd9548e20e"}, end: {_id:3848}, properties:{}}, {start: {hash:"ccd141993815d0b1f444d12bbd2bdcdd9548e20e"}, end: {_id:3849}, properties:{}}, {start: {hash:"10bb572d477197bd3874532bfd364de1cb496d05"}, end: {_id:3836}, properties:{}}, {start: {hash:"10bb572d477197bd3874532bfd364de1cb496d05"}, end: {_id:3838}, properties:{}}, {start: {hash:"ad9ba03731ec0520164bb23a90968f2100dca517"}, end: {_id:3836}, properties:{}}, {start: {hash:"ad9ba03731ec0520164bb23a90968f2100dca517"}, end: {_id:3838}, properties:{}}, {start: {hash:"baa5b2d85892a85403c5dac807c891bb1b7b6dc7"}, end: {_id:3838}, properties:{}}, {start: {hash:"baa5b2d85892a85403c5dac807c891bb1b7b6dc7"}, end: {_id:3849}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"e3b6520960a88aacbf03339dc1368f680a8bee9a"}, end: {_id:3848}, properties:{}}, {start: {hash:"e3b6520960a88aacbf03339dc1368f680a8bee9a"}, end: {_id:3844}, properties:{}}, {start: {hash:"432683fcf7921a699f1557e89818b3bef5dba61a"}, end: {_id:3848}, properties:{}}, {start: {hash:"432683fcf7921a699f1557e89818b3bef5dba61a"}, end: {_id:3842}, properties:{}}, {start: {hash:"43b3c46b84b984800a6a013a93555b7bedf5c81a"}, end: {_id:3848}, properties:{}}, {start: {hash:"43b3c46b84b984800a6a013a93555b7bedf5c81a"}, end: {_id:3842}, properties:{}}, {start: {hash:"83f393acfdc39810b29f898ff2d8a3f247571aa6"}, end: {_id:3848}, properties:{}}, {start: {hash:"e8004aa1293b04a63fe33895e81ed2b9e6d3af94"}, end: {_id:3838}, properties:{}}, {start: {hash:"7e1b0531992b592980c232994b7248801073fcd0"}, end: {_id:3845}, properties:{}}, {start: {hash:"7e1b0531992b592980c232994b7248801073fcd0"}, end: {_id:3848}, properties:{}}, {start: {hash:"3799ee8b9677d02254eb6d6f50f3732df4c8374e"}, end: {_id:3838}, properties:{}}, {start: {hash:"3799ee8b9677d02254eb6d6f50f3732df4c8374e"}, end: {_id:3849}, properties:{}}, {start: {hash:"24fa52712f844e2b459329e28af96bc369024d25"}, end: {_id:3848}, properties:{}}, {start: {hash:"24fa52712f844e2b459329e28af96bc369024d25"}, end: {_id:3844}, properties:{}}, {start: {hash:"4676fee3828f732d296feb81be51f9602610f537"}, end: {_id:3848}, properties:{}}, {start: {hash:"f751747d53b467f72498c50deef79828c2b378be"}, end: {_id:3848}, properties:{}}, {start: {hash:"f751747d53b467f72498c50deef79828c2b378be"}, end: {_id:3837}, properties:{}}, {start: {hash:"6ca41e5ad697201a1d225e5d15134e547ee6ced3"}, end: {_id:3845}, properties:{}}, {start: {hash:"6ca41e5ad697201a1d225e5d15134e547ee6ced3"}, end: {_id:3848}, properties:{}}, {start: {hash:"83d8b928ecb3f271a058bb30eaa1e05ce10e0434"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"83d8b928ecb3f271a058bb30eaa1e05ce10e0434"}, end: {_id:3847}, properties:{}}, {start: {hash:"da24f25924b6584137d7315e6eea61a31be86406"}, end: {_id:3838}, properties:{}}, {start: {hash:"da24f25924b6584137d7315e6eea61a31be86406"}, end: {_id:3842}, properties:{}}, {start: {hash:"985612e94b1ba7d6a881c6b2fe074449f47dd45d"}, end: {_id:3848}, properties:{}}, {start: {hash:"985612e94b1ba7d6a881c6b2fe074449f47dd45d"}, end: {_id:3849}, properties:{}}, {start: {hash:"21627e4057b3446b511e4369ca366e297cfc87eb"}, end: {_id:3844}, properties:{}}, {start: {hash:"21627e4057b3446b511e4369ca366e297cfc87eb"}, end: {_id:3838}, properties:{}}, {start: {hash:"95c70a0a304c55adacc3ba0605dd2b9aa2730f6f"}, end: {_id:3848}, properties:{}}, {start: {hash:"95c70a0a304c55adacc3ba0605dd2b9aa2730f6f"}, end: {_id:3844}, properties:{}}, {start: {hash:"81e606a72e7c2e06c2f6d9c204086157aa82eac3"}, end: {_id:3838}, properties:{}}, {start: {hash:"81e606a72e7c2e06c2f6d9c204086157aa82eac3"}, end: {_id:3849}, properties:{}}, {start: {hash:"7cc487f270d553f819fea0cf96e872c374979305"}, end: {_id:3838}, properties:{}}, {start: {hash:"7cc487f270d553f819fea0cf96e872c374979305"}, end: {_id:3849}, properties:{}}, {start: {hash:"3138943ab4d15cc256d322e1128862ef11383c73"}, end: {_id:3848}, properties:{}}, {start: {hash:"3138943ab4d15cc256d322e1128862ef11383c73"}, end: {_id:3844}, properties:{}}, {start: {hash:"3138943ab4d15cc256d322e1128862ef11383c73"}, end: {_id:3838}, properties:{}}, {start: {hash:"f0bbb7e656d0f9785f1cc7cead6b420e1862f4df"}, end: {_id:3848}, properties:{}}, {start: {hash:"f0bbb7e656d0f9785f1cc7cead6b420e1862f4df"}, end: {_id:3844}, properties:{}}, {start: {hash:"df4c2102d59c5cae88c9ed30489b2d00bc75aafd"}, end: {_id:3848}, properties:{}}, {start: {hash:"df4c2102d59c5cae88c9ed30489b2d00bc75aafd"}, end: {_id:3849}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"8475fbe51281a76757f7046c6c591056db182286"}, end: {_id:3838}, properties:{}}, {start: {hash:"8475fbe51281a76757f7046c6c591056db182286"}, end: {_id:3843}, properties:{}}, {start: {hash:"8475fbe51281a76757f7046c6c591056db182286"}, end: {_id:3847}, properties:{}}, {start: {hash:"1e588a004172338404c487e679df5d503f0cab48"}, end: {_id:3838}, properties:{}}, {start: {hash:"a51a3bfcd73fd55ecd43aa36ce3f266f0cefc2dc"}, end: {_id:3848}, properties:{}}, {start: {hash:"a51a3bfcd73fd55ecd43aa36ce3f266f0cefc2dc"}, end: {_id:3844}, properties:{}}, {start: {hash:"ee2b2286a02d49c7e9992d0a39ce950583e16bb7"}, end: {_id:3848}, properties:{}}, {start: {hash:"ee2b2286a02d49c7e9992d0a39ce950583e16bb7"}, end: {_id:3840}, properties:{}}, {start: {hash:"8733c7f4d1b395d6a8e236d0106cfae56d4ded06"}, end: {_id:3848}, properties:{}}, {start: {hash:"8733c7f4d1b395d6a8e236d0106cfae56d4ded06"}, end: {_id:3842}, properties:{}}, {start: {hash:"75771876ca81699edfb4bb1afa202d6426abae1e"}, end: {_id:3840}, properties:{}}, {start: {hash:"75771876ca81699edfb4bb1afa202d6426abae1e"}, end: {_id:3838}, properties:{}}, {start: {hash:"a662717d80209735e93b6b8e537f21b53c06b469"}, end: {_id:3838}, properties:{}}, {start: {hash:"d13218e98814d7ac3bc65fc862c0119123f44d68"}, end: {_id:3848}, properties:{}}, {start: {hash:"d13218e98814d7ac3bc65fc862c0119123f44d68"}, end: {_id:3849}, properties:{}}, {start: {hash:"e0d0f044c54ebf491c122664d03e0cfe5d2b0823"}, end: {_id:3841}, properties:{}}, {start: {hash:"e0d0f044c54ebf491c122664d03e0cfe5d2b0823"}, end: {_id:3848}, properties:{}}, {start: {hash:"738d187f603e5a52e6c6338abcd6096e22e819a0"}, end: {_id:3838}, properties:{}}, {start: {hash:"738d187f603e5a52e6c6338abcd6096e22e819a0"}, end: {_id:3846}, properties:{}}, {start: {hash:"85252dec6ed7f0b24517089150ec89bf32b45fb2"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"85252dec6ed7f0b24517089150ec89bf32b45fb2"}, end: {_id:3842}, properties:{}}, {start: {hash:"85252dec6ed7f0b24517089150ec89bf32b45fb2"}, end: {_id:3838}, properties:{}}, {start: {hash:"bac050d515cd6991e17cd1a34197d84982f5931d"}, end: {_id:3848}, properties:{}}, {start: {hash:"bac050d515cd6991e17cd1a34197d84982f5931d"}, end: {_id:3847}, properties:{}}, {start: {hash:"bcc6e190b8f8a12b590089fb755c4f552f179ad0"}, end: {_id:3848}, properties:{}}, {start: {hash:"bcc6e190b8f8a12b590089fb755c4f552f179ad0"}, end: {_id:3842}, properties:{}}, {start: {hash:"35d26fd046185ae079e09fa6435c41ae685e679e"}, end: {_id:3845}, properties:{}}, {start: {hash:"35d26fd046185ae079e09fa6435c41ae685e679e"}, end: {_id:3848}, properties:{}}, {start: {hash:"35d26fd046185ae079e09fa6435c41ae685e679e"}, end: {_id:3838}, properties:{}}, {start: {hash:"8454c8ee25e821abde10b73a2fec691269e41822"}, end: {_id:3848}, properties:{}}, {start: {hash:"8454c8ee25e821abde10b73a2fec691269e41822"}, end: {_id:3840}, properties:{}}, {start: {hash:"599aa2776677bcf05ebf5f6377a2eb82f5d2220c"}, end: {_id:3848}, properties:{}}, {start: {hash:"599aa2776677bcf05ebf5f6377a2eb82f5d2220c"}, end: {_id:3844}, properties:{}}, {start: {hash:"782a0a3c30cf83bcaeacc942789ccc903576fe8a"}, end: {_id:3844}, properties:{}}, {start: {hash:"782a0a3c30cf83bcaeacc942789ccc903576fe8a"}, end: {_id:3838}, properties:{}}, {start: {hash:"99fd319a72d25441acf36fd2c167a875e9028935"}, end: {_id:3848}, properties:{}}, {start: {hash:"99fd319a72d25441acf36fd2c167a875e9028935"}, end: {_id:3844}, properties:{}}, {start: {hash:"99fd319a72d25441acf36fd2c167a875e9028935"}, end: {_id:3838}, properties:{}}, {start: {hash:"894fb1d80c7a3953b7a51d7acd5e9b942faced8f"}, end: {_id:3845}, properties:{}}, {start: {hash:"894fb1d80c7a3953b7a51d7acd5e9b942faced8f"}, end: {_id:3848}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"f69ce3812180a20bbda69ff1432a1cd36342bc3b"}, end: {_id:3848}, properties:{}}, {start: {hash:"f69ce3812180a20bbda69ff1432a1cd36342bc3b"}, end: {_id:3844}, properties:{}}, {start: {hash:"be1245d8634025277ba79a4155ee88d7eaffcdfb"}, end: {_id:3838}, properties:{}}, {start: {hash:"9f610811aea8c523332e9dccad9bb0800b70691e"}, end: {_id:3845}, properties:{}}, {start: {hash:"9f610811aea8c523332e9dccad9bb0800b70691e"}, end: {_id:3848}, properties:{}}, {start: {hash:"935d9d683608b4d8a97ef6ccc2c8ab7c14eec0d0"}, end: {_id:3848}, properties:{}}, {start: {hash:"935d9d683608b4d8a97ef6ccc2c8ab7c14eec0d0"}, end: {_id:3849}, properties:{}}, {start: {hash:"cc3460b79e8811df25a34a10c34c2a0ad2b6280f"}, end: {_id:3838}, properties:{}}, {start: {hash:"cc3460b79e8811df25a34a10c34c2a0ad2b6280f"}, end: {_id:3849}, properties:{}}, {start: {hash:"68c7bfb39a40f2783cfdae9ab5206c6747b8e7f3"}, end: {_id:3848}, properties:{}}, {start: {hash:"08ff1d9788127d4fb9aa6616e22ed0b4ed406106"}, end: {_id:3838}, properties:{}}, {start: {hash:"e5742d6f4f93dd432c9d8d0a31493d43c45aaff1"}, end: {_id:3845}, properties:{}}, {start: {hash:"e5742d6f4f93dd432c9d8d0a31493d43c45aaff1"}, end: {_id:3848}, properties:{}}, {start: {hash:"e5742d6f4f93dd432c9d8d0a31493d43c45aaff1"}, end: {_id:3838}, properties:{}}, {start: {hash:"87401ba23af26d379d8132cc09fd7cd212773ba1"}, end: {_id:3848}, properties:{}}, {start: {hash:"87401ba23af26d379d8132cc09fd7cd212773ba1"}, end: {_id:3849}, properties:{}}, {start: {hash:"e2295fe41d430f42795605b6356e69b393625999"}, end: {_id:3848}, properties:{}}, {start: {hash:"e2295fe41d430f42795605b6356e69b393625999"}, end: {_id:3842}, properties:{}}, {start: {hash:"81f82740760a357a86b3a77f9ed400624edcb218"}, end: {_id:3848}, properties:{}}, {start: {hash:"81f82740760a357a86b3a77f9ed400624edcb218"}, end: {_id:3849}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"200e62726a588acf05f58a1087d71eb1b98f4e0a"}, end: {_id:3845}, properties:{}}, {start: {hash:"200e62726a588acf05f58a1087d71eb1b98f4e0a"}, end: {_id:3848}, properties:{}}, {start: {hash:"3e543412b6680057ffb10b0fbba777ccb3205882"}, end: {_id:3841}, properties:{}}, {start: {hash:"3e543412b6680057ffb10b0fbba777ccb3205882"}, end: {_id:3848}, properties:{}}, {start: {hash:"50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9"}, end: {_id:3848}, properties:{}}, {start: {hash:"50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9"}, end: {_id:3842}, properties:{}}, {start: {hash:"a0ea4fd84a409fe4ee853effa9f309a005b0efc1"}, end: {_id:3845}, properties:{}}, {start: {hash:"a0ea4fd84a409fe4ee853effa9f309a005b0efc1"}, end: {_id:3848}, properties:{}}, {start: {hash:"bffc023eeff075ef281b1fd261897f4c7216b354"}, end: {_id:3848}, properties:{}}, {start: {hash:"bffc023eeff075ef281b1fd261897f4c7216b354"}, end: {_id:3844}, properties:{}}, {start: {hash:"197502b1ac4bab77b9ab017b755c4d75ddaa218b"}, end: {_id:3836}, properties:{}}, {start: {hash:"197502b1ac4bab77b9ab017b755c4d75ddaa218b"}, end: {_id:3838}, properties:{}}, {start: {hash:"cebf7f883b1325a4db1c0e7b3cd0d6684a7c41b0"}, end: {_id:3836}, properties:{}}, {start: {hash:"cebf7f883b1325a4db1c0e7b3cd0d6684a7c41b0"}, end: {_id:3838}, properties:{}}, {start: {hash:"174486319f3b956807d56e5433880f9978884f93"}, end: {_id:3848}, properties:{}}, {start: {hash:"174486319f3b956807d56e5433880f9978884f93"}, end: {_id:3849}, properties:{}}, {start: {hash:"213ea410b9a2146cc804213dedeacdff4f07a74a"}, end: {_id:3838}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:MEMBER_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"f1383adda80c8d0960fa8153c2a82f03ce81e874"}, end: {hash:"3a96bab387bf898fd71023961e0cd957488e357b"}, properties:{}}, {start: {hash:"2809f4e2d78ff33b48e9c1742b58a256ebce986d"}, end: {hash:"25ed0319bf8099f0cc79eceba9104c73d9507e0d"}, properties:{}}, {start: {hash:"948727c5b1e87b970a7a9dee4cd67bb84d19abf8"}, end: {hash:"0e69a9978eae9e3432de8f16c2ca1b38033c23a7"}, properties:{}}, {start: {hash:"8cd62acc20ce3418eaf4cdd9d8b472091101cdbd"}, end: {hash:"84628710c900b2d1db058aa0e339134f24e6d20c"}, properties:{}}, {start: {hash:"f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac"}, end: {hash:"30be6aa1969e37d512153b558540fe714b635c4c"}, properties:{}}, {start: {hash:"b26b9e5d1b13602a4c192d9697a12df7770906b2"}, end: {hash:"f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac"}, properties:{}}, {start: {hash:"840ed0938bea8867caba921446b8a77a2f1c9e7d"}, end: {hash:"516075e2987bdd1063f22768d451c1c1eb647175"}, properties:{}}, {start: {hash:"aeb3bfbe393cdfc02e62b812843ed75cf5f245e4"}, end: {hash:"6cfda6ada5137b232ff442ae9f2aedc8520ee1b4"}, properties:{}}, {start: {hash:"12cf2cb526ed6b2d12106894ca735cf81ba432ff"}, end: {hash:"3ba302c69eb2a491a5b23e94084b4ddd24a4a703"}, properties:{}}, {start: {hash:"9438dcebde79c0726d69ae6a15c99b9c5c0f461c"}, end: {hash:"0019704e14723aaf326840ab36c594c3f514a2d4"}, properties:{}}, {start: {hash:"d51caa0c810f6d5ad6f0846a317ec2432835aad7"}, end: {hash:"09e400452c1bde25fe393dd56c2fd608b84a18ac"}, properties:{}}, {start: {hash:"44d66328ea4467d05d7fb8092631aff5afbd8b26"}, end: {hash:"d51caa0c810f6d5ad6f0846a317ec2432835aad7"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Commit{hash: row.end.hash})
CREATE (start)-[r:PARENT]->(end) SET r += row.properties;
UNWIND [{start: {_id:1}, end: {name:"bespin"}, properties:{}}, {start: {_id:8}, end: {name:"mp-infrastructure"}, properties:{}}, {start: {_id:18}, end: {name:"terraform-aws-modules"}, properties:{}}, {start: {_id:23}, end: {name:"prometheus-aws-configuration-beta"}, properties:{}}, {start: {_id:32}, end: {name:"terraform-for-beginners"}, properties:{}}, {start: {_id:44}, end: {name:"parkrunpointsleague"}, properties:{}}, {start: {_id:52}, end: {name:"Azure-Terraform-Budget"}, properties:{}}, {start: {_id:61}, end: {name:"terraform-google-vault"}, properties:{}}, {start: {_id:72}, end: {name:"vof-deployment-scripts"}, properties:{}}, {start: {_id:80}, end: {name:"terraform-logs-module"}, properties:{}}, {start: {_id:86}, end: {name:"terraform-eks"}, properties:{}}, {start: {_id:92}, end: {name:"terraform-gcp-audit-log"}, properties:{}}, {start: {_id:103}, end: {name:"jt-aws-serverless-app"}, properties:{}}, {start: {_id:127}, end: {name:"TerraformTutorial"}, properties:{}}, {start: {_id:132}, end: {name:"terraform-ec2-gitlab-runner"}, properties:{}}, {start: {_id:138}, end: {name:"terraform-aws-mcaf-matillion"}, properties:{}}, {start: {_id:144}, end: {name:"terralab"}, properties:{}}, {start: {_id:150}, end: {name:"terraform-azure-kubernetes"}, properties:{}}, {start: {_id:173}, end: {name:"fogg-env"}, properties:{}}, {start: {_id:178}, end: {name:"academeez-iac"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:185}, end: {name:"clouduru-infra"}, properties:{}}, {start: {_id:193}, end: {name:"tdr-grafana"}, properties:{}}, {start: {_id:207}, end: {name:"dcp-monitoring"}, properties:{}}, {start: {_id:219}, end: {name:"parking-status"}, properties:{}}, {start: {_id:236}, end: {name:"seed-node-fallback-domain-config"}, properties:{}}, {start: {_id:242}, end: {name:"grok-airflow"}, properties:{}}, {start: {_id:247}, end: {name:"cool-sharedservices-nessus"}, properties:{}}, {start: {_id:252}, end: {name:"terraform-module-azure-datalake"}, properties:{}}, {start: {_id:261}, end: {name:"waapdemo"}, properties:{}}, {start: {_id:266}, end: {name:"aws-crawler"}, properties:{}}, {start: {_id:277}, end: {name:"iks_vpc_lab"}, properties:{}}, {start: {_id:282}, end: {name:"micro-service-as-code"}, properties:{}}, {start: {_id:291}, end: {name:"cloud-platform-terraform-monitoring"}, properties:{}}, {start: {_id:348}, end: {name:"terraform-azurerm-vmseries-modules"}, properties:{}}, {start: {_id:363}, end: {name:"s3-bucket-versioning"}, properties:{}}, {start: {_id:379}, end: {name:"idkfa"}, properties:{}}, {start: {_id:386}, end: {name:"GCP-IOT-BigDataInfra"}, properties:{}}, {start: {_id:391}, end: {name:"gcp-project"}, properties:{}}, {start: {_id:435}, end: {name:"rjmco-github-tests"}, properties:{}}, {start: {_id:460}, end: {name:"terraform-oci-cis-landing-zone"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:475}, end: {name:"ops"}, properties:{}}, {start: {_id:482}, end: {name:"vulnerable-instances"}, properties:{}}, {start: {_id:486}, end: {name:"cloud-admin"}, properties:{}}, {start: {_id:495}, end: {name:"terraform-aws-eks"}, properties:{}}, {start: {_id:502}, end: {name:"aws-enterprise-vpc"}, properties:{}}, {start: {_id:508}, end: {name:"azure"}, properties:{}}, {start: {_id:513}, end: {name:"digitalocean-build-machine"}, properties:{}}, {start: {_id:518}, end: {name:"gifbot"}, properties:{}}, {start: {_id:523}, end: {name:"lighthouse-lambda-parallel"}, properties:{}}, {start: {_id:537}, end: {name:"tform_azure"}, properties:{}}, {start: {_id:543}, end: {name:"infrastructure"}, properties:{}}, {start: {_id:549}, end: {name:"aws-otel-test-framework"}, properties:{}}, {start: {_id:555}, end: {name:"ttrpg-tools"}, properties:{}}, {start: {_id:562}, end: {name:"titan"}, properties:{}}, {start: {_id:576}, end: {name:"terraform-covidapihub"}, properties:{}}, {start: {_id:581}, end: {name:"cnp-module-api-mgmt"}, properties:{}}, {start: {_id:585}, end: {name:"hknews-infrastructure"}, properties:{}}, {start: {_id:592}, end: {name:"terraform-aws-ecs-datadog-agent"}, properties:{}}, {start: {_id:597}, end: {name:"didactic-octo-eureka"}, properties:{}}, {start: {_id:603}, end: {name:"terraform-aws-workspaces"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:619}, end: {name:"github-actions"}, properties:{}}, {start: {_id:624}, end: {name:"terraform-demo-cost-estimation-azure"}, properties:{}}, {start: {_id:630}, end: {name:"azureLearning"}, properties:{}}, {start: {_id:641}, end: {name:"terragrunt-aws-modules"}, properties:{}}, {start: {_id:649}, end: {name:"terraform-aws-rds"}, properties:{}}, {start: {_id:654}, end: {name:"aws_static_website"}, properties:{}}, {start: {_id:667}, end: {name:"proj-azure"}, properties:{}}, {start: {_id:673}, end: {name:"typhoon"}, properties:{}}, {start: {_id:688}, end: {name:"tf-az-kubernetes"}, properties:{}}, {start: {_id:695}, end: {name:"loris-infrastructure"}, properties:{}}, {start: {_id:703}, end: {name:"terraform-homelab"}, properties:{}}, {start: {_id:724}, end: {name:"Harbor"}, properties:{}}, {start: {_id:730}, end: {name:"feedpaper"}, properties:{}}, {start: {_id:735}, end: {name:"terraform-gke-drone"}, properties:{}}, {start: {_id:740}, end: {name:"terraform-aws"}, properties:{}}, {start: {_id:747}, end: {name:"aws-jenkins"}, properties:{}}, {start: {_id:754}, end: {name:"tf-vpc-module"}, properties:{}}, {start: {_id:762}, end: {name:"cloudsql"}, properties:{}}, {start: {_id:773}, end: {name:"deepfence-threatmapper-lab"}, properties:{}}, {start: {_id:778}, end: {name:"terraform-azurerm-mariadb"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:789}, end: {name:"provenance-infra"}, properties:{}}, {start: {_id:795}, end: {name:"PortfolioTF"}, properties:{}}, {start: {_id:801}, end: {name:"terraform-aws-nuke-bomber"}, properties:{}}, {start: {_id:806}, end: {name:"aws-terraform-cloud1"}, properties:{}}, {start: {_id:811}, end: {name:"apiary-data-lake"}, properties:{}}, {start: {_id:822}, end: {name:"terraform-oci-azure-connect"}, properties:{}}, {start: {_id:839}, end: {name:"do-in-action"}, properties:{}}, {start: {_id:844}, end: {name:"tf_telecom"}, properties:{}}, {start: {_id:850}, end: {name:"iac"}, properties:{}}, {start: {_id:858}, end: {name:"webtwo-infra"}, properties:{}}, {start: {_id:865}, end: {name:"terraform-lambda"}, properties:{}}, {start: {_id:873}, end: {name:"terraform-alibaba-isucon8"}, properties:{}}, {start: {_id:878}, end: {name:"minifoundations"}, properties:{}}, {start: {_id:887}, end: {name:"cloud.mads-hartmann.com"}, properties:{}}, {start: {_id:895}, end: {name:"graph-ql-cloud-demo"}, properties:{}}, {start: {_id:903}, end: {name:"TerraForm"}, properties:{}}, {start: {_id:908}, end: {name:"kubeadm_aws"}, properties:{}}, {start: {_id:918}, end: {name:"tf-public_subnet"}, properties:{}}, {start: {_id:923}, end: {name:"terraform"}, properties:{}}, {start: {_id:949}, end: {name:"tf_eks_simpleweb"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:955}, end: {name:"terraform-repo"}, properties:{}}, {start: {_id:961}, end: {name:"fogg-tf"}, properties:{}}, {start: {_id:966}, end: {name:"elasticsearch-the-hard-way"}, properties:{}}, {start: {_id:977}, end: {name:"flynn"}, properties:{}}, {start: {_id:982}, end: {name:"stuartellis-org-tf-modules"}, properties:{}}, {start: {_id:989}, end: {name:"tech-stack"}, properties:{}}, {start: {_id:995}, end: {name:"gcloud-python-cost-control"}, properties:{}}, {start: {_id:1005}, end: {name:"dockerized-jenkins-master"}, properties:{}}, {start: {_id:1018}, end: {name:"kf-infra"}, properties:{}}, {start: {_id:1023}, end: {name:"tezos-auxiliary-cluster"}, properties:{}}, {start: {_id:1053}, end: {name:"caps-automation"}, properties:{}}, {start: {_id:1060}, end: {name:"jabujabu"}, properties:{}}, {start: {_id:1070}, end: {name:"terraform-stuff"}, properties:{}}, {start: {_id:1075}, end: {name:"cloud_scripts"}, properties:{}}, {start: {_id:1081}, end: {name:"my-infra"}, properties:{}}, {start: {_id:1089}, end: {name:"aws-with-terraform-and-ansible"}, properties:{}}, {start: {_id:1094}, end: {name:"ha-sap-terraform-deployments"}, properties:{}}, {start: {_id:1106}, end: {name:"EKS-Terraform"}, properties:{}}, {start: {_id:1121}, end: {name:"hackstack-local"}, properties:{}}, {start: {_id:1129}, end: {name:"ryhino-public"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:1138}, end: {name:"qhub"}, properties:{}}, {start: {_id:1242}, end: {name:"terraform-aws-mcaf-vpc"}, properties:{}}, {start: {_id:1248}, end: {name:"cyhy_amis"}, properties:{}}, {start: {_id:1265}, end: {name:"terraform-chefserver"}, properties:{}}, {start: {_id:1270}, end: {name:"terraform-google-gitlab-runner"}, properties:{}}, {start: {_id:1312}, end: {name:"govuk-infrastructure"}, properties:{}}, {start: {_id:1335}, end: {name:"serverless-blog-in-aws"}, properties:{}}, {start: {_id:1341}, end: {name:"lokomotive-kubernetes"}, properties:{}}, {start: {_id:1353}, end: {name:"poac-infrastructure"}, properties:{}}, {start: {_id:1360}, end: {name:"terraform-drone"}, properties:{}}, {start: {_id:1410}, end: {name:"infra-cost"}, properties:{}}, {start: {_id:1426}, end: {name:"gke-cd-with-spinnaker"}, properties:{}}, {start: {_id:1431}, end: {name:"terraform-workshop"}, properties:{}}, {start: {_id:1449}, end: {name:"infrastructure.azure.core.network.hub"}, properties:{}}, {start: {_id:1470}, end: {name:"jks.gameservers"}, properties:{}}, {start: {_id:1475}, end: {name:"aws-terraform-template"}, properties:{}}, {start: {_id:1482}, end: {name:"terraform-aws-vmseries-modules"}, properties:{}}, {start: {_id:1488}, end: {name:"aws-tf"}, properties:{}}, {start: {_id:1501}, end: {name:"terraform-azurerm-sql"}, properties:{}}, {start: {_id:1505}, end: {name:"personal-infra"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:1510}, end: {name:"terraform-aws-single-account-starter"}, properties:{}}, {start: {_id:1519}, end: {name:"immdom-terraform"}, properties:{}}, {start: {_id:1524}, end: {name:"rh-ex407"}, properties:{}}, {start: {_id:1529}, end: {name:"AWS_Blue_Green_Deployment"}, properties:{}}, {start: {_id:1535}, end: {name:"lead-terraform-Dashboard"}, properties:{}}, {start: {_id:1552}, end: {name:"Etch.OrchardCore.SiteBoilerplate"}, properties:{}}, {start: {_id:1557}, end: {name:"auto-gcp"}, properties:{}}, {start: {_id:1569}, end: {name:"aws-eks-base"}, properties:{}}, {start: {_id:1574}, end: {name:"terraform-aws-quorum-cluster"}, properties:{}}, {start: {_id:1590}, end: {name:"fogg"}, properties:{}}, {start: {_id:1598}, end: {name:"cloud-native-workstation"}, properties:{}}, {start: {_id:1606}, end: {name:"dataworks-aws-data-egress"}, properties:{}}, {start: {_id:1616}, end: {name:"tezos-on-gke"}, properties:{}}, {start: {_id:1648}, end: {name:"govwifi-terraform"}, properties:{}}, {start: {_id:1662}, end: {name:"personal-terraform"}, properties:{}}, {start: {_id:1686}, end: {name:"tf-terraform-management"}, properties:{}}, {start: {_id:1693}, end: {name:"terraform-aws-devnet"}, properties:{}}, {start: {_id:1698}, end: {name:"aks-anti-dry-iac"}, properties:{}}, {start: {_id:1723}, end: {name:"terraform_modules"}, properties:{}}, {start: {_id:1736}, end: {name:"common"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:1745}, end: {name:"aws-experiments"}, properties:{}}, {start: {_id:1753}, end: {name:"wg-terraform-template"}, properties:{}}, {start: {_id:1758}, end: {name:"terraform-core-aws-alhardynet-networking"}, properties:{}}, {start: {_id:1765}, end: {name:"paas-alpha-tsuru-terraform"}, properties:{}}, {start: {_id:1772}, end: {name:"from-dev-to-ops"}, properties:{}}, {start: {_id:1777}, end: {name:"archivematica-infrastructure"}, properties:{}}, {start: {_id:1784}, end: {name:"dc-terraform-provisioning"}, properties:{}}, {start: {_id:1790}, end: {name:"iaac"}, properties:{}}, {start: {_id:1807}, end: {name:"terraform-aws-bastion-host-ssm"}, properties:{}}, {start: {_id:1817}, end: {name:"firehawk-prototype-deprecated"}, properties:{}}, {start: {_id:1822}, end: {name:"terraform-config"}, properties:{}}, {start: {_id:1831}, end: {name:"hashicorp-consul-setup"}, properties:{}}, {start: {_id:1840}, end: {name:"aws-terraform-remote-state-infrastructure"}, properties:{}}, {start: {_id:1846}, end: {name:"terraform-aws-foundation"}, properties:{}}, {start: {_id:1869}, end: {name:"govuk-aws"}, properties:{}}, {start: {_id:1884}, end: {name:"platform-infrastructure"}, properties:{}}, {start: {_id:1907}, end: {name:"cloud-platform-environments"}, properties:{}}, {start: {_id:1934}, end: {name:"terraform-aws-lex-lambda"}, properties:{}}, {start: {_id:1966}, end: {name:"govuk-terraform-provisioning"}, properties:{}}, {start: {_id:1980}, end: {name:"aws-terraform-ec2_autorecovery"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:2015}, end: {name:"terraform-infrastructure"}, properties:{}}, {start: {_id:2020}, end: {name:"stack"}, properties:{}}, {start: {_id:2028}, end: {name:"cloud-inceptor"}, properties:{}}, {start: {_id:2042}, end: {name:"Infrastructure"}, properties:{}}, {start: {_id:2048}, end: {name:"hashicat"}, properties:{}}, {start: {_id:2054}, end: {name:"le-tf-infra-aws"}, properties:{}}, {start: {_id:2071}, end: {name:"cloud-based-sensor"}, properties:{}}, {start: {_id:2095}, end: {name:"eszop-infra"}, properties:{}}, {start: {_id:2118}, end: {name:"terraform-google-multinic"}, properties:{}}, {start: {_id:2139}, end: {name:"asz-dbz"}, properties:{}}, {start: {_id:2147}, end: {name:"terraform-example-patterns"}, properties:{}}, {start: {_id:2153}, end: {name:"terraform-eks-cluster"}, properties:{}}, {start: {_id:2160}, end: {name:"speedyhead.xyz-terraform"}, properties:{}}, {start: {_id:2179}, end: {name:"cloud-platform-terraform-elasticache-cluster"}, properties:{}}, {start: {_id:2186}, end: {name:"terraform-master"}, properties:{}}, {start: {_id:2196}, end: {name:"terraform-minecraft"}, properties:{}}, {start: {_id:2242}, end: {name:"personal-infrastructure"}, properties:{}}, {start: {_id:2252}, end: {name:"Terraform_Webserver"}, properties:{}}, {start: {_id:2275}, end: {name:"fantasy-manager"}, properties:{}}, {start: {_id:2285}, end: {name:"devservices-aws"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:2293}, end: {name:"terraform-oci-azure-adb"}, properties:{}}, {start: {_id:2297}, end: {name:"terraform-aws-glue-crawler"}, properties:{}}, {start: {_id:2318}, end: {name:"clip-stitcher"}, properties:{}}, {start: {_id:2325}, end: {name:"kiritan.com"}, properties:{}}, {start: {_id:2331}, end: {name:"Sample-Security-service-Terraform"}, properties:{}}, {start: {_id:2337}, end: {name:"ec2-dev-env"}, properties:{}}, {start: {_id:2348}, end: {name:"tf-azure-example"}, properties:{}}, {start: {_id:2354}, end: {name:"ceu-terraform"}, properties:{}}, {start: {_id:2361}, end: {name:"cloud-platform-infrastructure"}, properties:{}}, {start: {_id:2367}, end: {name:"goobi-infrastructure"}, properties:{}}, {start: {_id:2372}, end: {name:"gitlab-environment-toolkit"}, properties:{}}, {start: {_id:2380}, end: {name:"firehawk-main"}, properties:{}}, {start: {_id:2385}, end: {name:"terraform-gcp-instance"}, properties:{}}, {start: {_id:2398}, end: {name:"weather_cache_infrastructure"}, properties:{}}, {start: {_id:2404}, end: {name:"homelab-iac"}, properties:{}}, {start: {_id:2413}, end: {name:"terraform-aws-vault"}, properties:{}}, {start: {_id:2448}, end: {name:"imagebuilder-terraform"}, properties:{}}, {start: {_id:2453}, end: {name:"prm-mhs-infra"}, properties:{}}, {start: {_id:2476}, end: {name:"terraform-aws-account"}, properties:{}}, {start: {_id:2486}, end: {name:"terraform-google-kubernetes"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:2497}, end: {name:"route53-ps"}, properties:{}}, {start: {_id:2503}, end: {name:"OVPN---TF"}, properties:{}}, {start: {_id:2516}, end: {name:"terraform-cantrill-aws-associate"}, properties:{}}, {start: {_id:2528}, end: {name:"terraform-google-gcp-project"}, properties:{}}, {start: {_id:2554}, end: {name:"qa-reports.linaro.org"}, properties:{}}, {start: {_id:2561}, end: {name:"django-drf-boilerplate"}, properties:{}}, {start: {_id:2605}, end: {name:"infra-modules"}, properties:{}}, {start: {_id:2613}, end: {name:"terraform-google-nomad"}, properties:{}}, {start: {_id:2618}, end: {name:"UE-Jenkins-BuildSystem"}, properties:{}}, {start: {_id:2623}, end: {name:"demblock-pipeline"}, properties:{}}, {start: {_id:2632}, end: {name:"jumpbox"}, properties:{}}, {start: {_id:2638}, end: {name:"certifications"}, properties:{}}, {start: {_id:2650}, end: {name:"terraform-aws-cost-alarm"}, properties:{}}, {start: {_id:2657}, end: {name:"a_new_hope"}, properties:{}}, {start: {_id:2662}, end: {name:"terraform-azurerm-windowsscaleset"}, properties:{}}, {start: {_id:2676}, end: {name:"dylanmtaylor-terraform-aws"}, properties:{}}, {start: {_id:2681}, end: {name:"terraform-azurerm-mysql"}, properties:{}}, {start: {_id:2690}, end: {name:"terraform-aws-alb"}, properties:{}}, {start: {_id:2699}, end: {name:"Gefjun"}, properties:{}}, {start: {_id:2723}, end: {name:"jjffggpp"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:2730}, end: {name:"eq-terraform"}, properties:{}}, {start: {_id:2744}, end: {name:"flightdeck"}, properties:{}}, {start: {_id:2773}, end: {name:"AWS-Cloud-Architect-master"}, properties:{}}, {start: {_id:2802}, end: {name:"infra-aws-code"}, properties:{}}, {start: {_id:2808}, end: {name:"terraform-aws-kubespot"}, properties:{}}, {start: {_id:2815}, end: {name:"terraform-aws-terraform-init"}, properties:{}}, {start: {_id:2820}, end: {name:"PL2-AWS-Setup"}, properties:{}}, {start: {_id:2826}, end: {name:"freeipa-server-tf-module"}, properties:{}}, {start: {_id:2831}, end: {name:"testrepo"}, properties:{}}, {start: {_id:2837}, end: {name:"Translator-TM-Provider-Infrastructure-Modules"}, properties:{}}, {start: {_id:2843}, end: {name:"terraform-s3-backend-setup"}, properties:{}}, {start: {_id:2850}, end: {name:"live-infrastructure"}, properties:{}}, {start: {_id:2857}, end: {name:"aws-account"}, properties:{}}, {start: {_id:2862}, end: {name:"terraform_three_instances"}, properties:{}}, {start: {_id:2867}, end: {name:"modernisation-platform"}, properties:{}}, {start: {_id:2872}, end: {name:"BasketballDrillBot"}, properties:{}}, {start: {_id:2903}, end: {name:"terraform_aws_ec2_instance"}, properties:{}}, {start: {_id:2908}, end: {name:"terraform-aws-eks-jx"}, properties:{}}, {start: {_id:2917}, end: {name:"automation-infrastructure"}, properties:{}}, {start: {_id:2931}, end: {name:"eq-terraform-dynamodb"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:2941}, end: {name:"aws"}, properties:{}}, {start: {_id:2946}, end: {name:"giantnetes-terraform"}, properties:{}}, {start: {_id:2956}, end: {name:"terraform-module-aws-core"}, properties:{}}, {start: {_id:2965}, end: {name:"buildkite-infrastructure"}, properties:{}}, {start: {_id:2977}, end: {name:"btc2snowflake"}, properties:{}}, {start: {_id:2982}, end: {name:"terraform-google-hedwig-subscription"}, properties:{}}, {start: {_id:2989}, end: {name:"mts-trial-deployment-config"}, properties:{}}, {start: {_id:2999}, end: {name:"eutambem-serverless"}, properties:{}}, {start: {_id:3004}, end: {name:"SignalWs"}, properties:{}}, {start: {_id:3009}, end: {name:"azure-terraform-packer-iac"}, properties:{}}, {start: {_id:3038}, end: {name:"Scalr-Demo"}, properties:{}}, {start: {_id:3043}, end: {name:"blog-terraform"}, properties:{}}, {start: {_id:3052}, end: {name:"terraform-digitalocean-kubernetes"}, properties:{}}, {start: {_id:3059}, end: {name:"atmos-recipes"}, properties:{}}, {start: {_id:3071}, end: {name:"forgotpw-infrastructure"}, properties:{}}, {start: {_id:3078}, end: {name:"terraform-cinegy-modules"}, properties:{}}, {start: {_id:3086}, end: {name:"tf-aws-pi-hole"}, properties:{}}, {start: {_id:3117}, end: {name:"expertalk-2018-ecs-workshop"}, properties:{}}, {start: {_id:3124}, end: {name:"terraform-datadog-costs"}, properties:{}}, {start: {_id:3151}, end: {name:"terraform-aws-sagemaker"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:3165}, end: {name:"workflow-testing"}, properties:{}}, {start: {_id:3173}, end: {name:"sts-network"}, properties:{}}, {start: {_id:3179}, end: {name:"terraform-k8s"}, properties:{}}, {start: {_id:3200}, end: {name:"modernisation-platform-environments"}, properties:{}}, {start: {_id:3204}, end: {name:"terraform-aws-state-backend"}, properties:{}}, {start: {_id:3211}, end: {name:"fastly-demo"}, properties:{}}, {start: {_id:3217}, end: {name:"terraform-aws-codebuild-container"}, properties:{}}, {start: {_id:3228}, end: {name:"verify-infrastructure"}, properties:{}}, {start: {_id:3252}, end: {name:"AWSEMRInferencePipelinePOC"}, properties:{}}, {start: {_id:3270}, end: {name:"aiidalab-k8s"}, properties:{}}, {start: {_id:3283}, end: {name:"k8s-terraform"}, properties:{}}, {start: {_id:3288}, end: {name:"terraform-digitalocean"}, properties:{}}, {start: {_id:3295}, end: {name:"terraform-deploy"}, properties:{}}, {start: {_id:3304}, end: {name:"terraform-aws-codepipeline"}, properties:{}}, {start: {_id:3311}, end: {name:"chat-app"}, properties:{}}, {start: {_id:3316}, end: {name:"blog"}, properties:{}}, {start: {_id:3330}, end: {name:"terraform-old"}, properties:{}}, {start: {_id:3343}, end: {name:"cloud-gateway"}, properties:{}}, {start: {_id:3350}, end: {name:"terraform-azurerm-terraform-enterprise"}, properties:{}}, {start: {_id:3355}, end: {name:"abd-cloud"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:3365}, end: {name:"gcp-foundation"}, properties:{}}, {start: {_id:3384}, end: {name:"iona"}, properties:{}}, {start: {_id:3390}, end: {name:"cool-assessment-terraform"}, properties:{}}, {start: {_id:3401}, end: {name:"secure-brigade-terraform"}, properties:{}}, {start: {_id:3416}, end: {name:"rocketchat-tf"}, properties:{}}, {start: {_id:3421}, end: {name:"musical-spork"}, properties:{}}, {start: {_id:3438}, end: {name:"terraform-tekton-pipelines"}, properties:{}}, {start: {_id:3444}, end: {name:"global-aws-infrastructure"}, properties:{}}, {start: {_id:3454}, end: {name:"terraform-google-nucleus"}, properties:{}}, {start: {_id:3460}, end: {name:"TerraformOpenVPN"}, properties:{}}, {start: {_id:3469}, end: {name:"bedrock"}, properties:{}}, {start: {_id:3474}, end: {name:"splunk-refactor-poc"}, properties:{}}, {start: {_id:3483}, end: {name:"devops-governance"}, properties:{}}, {start: {_id:3489}, end: {name:"terraform-scaleio"}, properties:{}}, {start: {_id:3496}, end: {name:"covid-videoplattform"}, properties:{}}, {start: {_id:3506}, end: {name:"terraform-aws-camellia"}, properties:{}}, {start: {_id:3522}, end: {name:"terraform-example-aws-vpc"}, properties:{}}, {start: {_id:3527}, end: {name:"aws-batch-processing"}, properties:{}}, {start: {_id:3544}, end: {name:"rpki-deploy"}, properties:{}}, {start: {_id:3549}, end: {name:"terraform_setups"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:3560}, end: {name:"terraform-elasticsearch"}, properties:{}}, {start: {_id:3569}, end: {name:"the-dummy-tfaws"}, properties:{}}, {start: {_id:3579}, end: {name:"kubernetes-modules"}, properties:{}}, {start: {_id:3596}, end: {name:"jitsi-meet-torture-rocket"}, properties:{}}, {start: {_id:3603}, end: {name:"terraform-aws-cognito"}, properties:{}}, {start: {_id:3614}, end: {name:"sentia-data-engineering-assignment"}, properties:{}}, {start: {_id:3619}, end: {name:"terraform-unifi"}, properties:{}}, {start: {_id:3624}, end: {name:"gcp-landing-zone"}, properties:{}}, {start: {_id:3632}, end: {name:"digitalmarketplace-aws"}, properties:{}}, {start: {_id:3640}, end: {name:"jamulus-builder"}, properties:{}}, {start: {_id:3649}, end: {name:"SingleNodeOpenshiftOnLibvirt"}, properties:{}}, {start: {_id:3657}, end: {name:"terraform-example-foundation"}, properties:{}}, {start: {_id:3670}, end: {name:"terraform-aws-config"}, properties:{}}, {start: {_id:3681}, end: {name:"terraform-aws-mysql-cluster"}, properties:{}}, {start: {_id:3686}, end: {name:"hmpps-delius-core-terraform"}, properties:{}}, {start: {_id:3688}, end: {name:"terraforms"}, properties:{}}, {start: {_id:3701}, end: {name:"gcp-playground"}, properties:{}}, {start: {_id:3706}, end: {name:"network-access-control-infrastructure"}, properties:{}}, {start: {_id:3718}, end: {name:"haystack"}, properties:{}}, {start: {_id:3726}, end: {name:"HS-Terraform"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {_id:3734}, end: {name:"mattermost-cloud-database-factory"}, properties:{}}, {start: {_id:3754}, end: {name:"terraform-s3-backend"}, properties:{}}, {start: {_id:3759}, end: {name:"IaC-Templates"}, properties:{}}, {start: {_id:3771}, end: {name:"nginx-multistream"}, properties:{}}, {start: {_id:3780}, end: {name:"terraform-aws-kubernetes"}, properties:{}}, {start: {_id:3793}, end: {name:"gke-v.1.0"}, properties:{}}, {start: {_id:3824}, end: {name:"website-infrastructure"}, properties:{}}, {start: {_id:3833}, end: {name:"terraform-modules"}, properties:{}}] AS row
MATCH (start:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.start._id})
MATCH (end:Repository{name: row.end.name})
CREATE (start)-[r:PART_OF]->(end) SET r += row.properties;
UNWIND [{start: {hash:"cff3747c70722eba940317dec58dc9c22b3b4939"}, end: {_id:1}, properties:{}}, {start: {hash:"5afcf39a85fc972eb9bb3486e5dc8aeeba77d3ee"}, end: {_id:8}, properties:{}}, {start: {hash:"49f447bdbb3cf23499e8194e78f852ea1e256d3a"}, end: {_id:18}, properties:{}}, {start: {hash:"0edcb1dbd7337eab4155be2f2a7683a77cc3cc6d"}, end: {_id:23}, properties:{}}, {start: {hash:"3a3e9f6d19da0730f2b077b0c160a467102f5666"}, end: {_id:32}, properties:{}}, {start: {hash:"21627e4057b3446b511e4369ca366e297cfc87eb"}, end: {_id:44}, properties:{}}, {start: {hash:"4759aa86a84ee099d6ce3f3987520a5b6cd1ffd3"}, end: {_id:52}, properties:{}}, {start: {hash:"1d0b5db7f310dc6a47af3130a97e5373d9cdaddf"}, end: {_id:61}, properties:{}}, {start: {hash:"c6b2c1bee4c1e53e87fd3d94fc8c07cf64342d7b"}, end: {_id:72}, properties:{}}, {start: {hash:"545b0bb763a4dbaab6b262c4b9642767e2434d07"}, end: {_id:80}, properties:{}}, {start: {hash:"c11fca6440a5000648f690e6282778fb4ec73309"}, end: {_id:86}, properties:{}}, {start: {hash:"324c8a499794f6a789d583c4c460af9475171215"}, end: {_id:92}, properties:{}}, {start: {hash:"53d023dc22daa7b4181b8ea51ce72c6b857aa553"}, end: {_id:103}, properties:{}}, {start: {hash:"ba317d7e402f014589e230fad8c7384016211ba2"}, end: {_id:127}, properties:{}}, {start: {hash:"f8af6bc22bd3d827566e7e65deb63c13cdaf6031"}, end: {_id:132}, properties:{}}, {start: {hash:"3b0e2fe42d660664c49d54ae8706de004a9b4176"}, end: {_id:138}, properties:{}}, {start: {hash:"7696353632379532ab7006f9eda39fbf14e25532"}, end: {_id:144}, properties:{}}, {start: {hash:"633eb938742a43be09612b944c29aaaf70dac119"}, end: {_id:150}, properties:{}}, {start: {hash:"7de45302cfa8a7dca88ab61b3021091cc480b495"}, end: {_id:173}, properties:{}}, {start: {hash:"3a96bab387bf898fd71023961e0cd957488e357b"}, end: {_id:178}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"f1383adda80c8d0960fa8153c2a82f03ce81e874"}, end: {_id:178}, properties:{}}, {start: {hash:"991915ce492e074d8df658aa54c902b52f9c4cc5"}, end: {_id:185}, properties:{}}, {start: {hash:"213ea410b9a2146cc804213dedeacdff4f07a74a"}, end: {_id:193}, properties:{}}, {start: {hash:"4fd89da7e37ce7f22d920e3584761f702383a8ba"}, end: {_id:207}, properties:{}}, {start: {hash:"5f9f8fb118a42d7b18ec082be41665ed2b9eb992"}, end: {_id:219}, properties:{}}, {start: {hash:"5ba235b0c935de75c2cb2f57686bc246816a7f74"}, end: {_id:236}, properties:{}}, {start: {hash:"7ac9544b0c651fd8193eb063079514d0aa41e290"}, end: {_id:242}, properties:{}}, {start: {hash:"5403a8978053a1299b0afe8d7fc59e914fc5e354"}, end: {_id:247}, properties:{}}, {start: {hash:"4907fd7598d0083705494182d985c6b3b58db2c0"}, end: {_id:252}, properties:{}}, {start: {hash:"087f2caeff6ecaa2a18ecc2f20b7313a70d2d191"}, end: {_id:261}, properties:{}}, {start: {hash:"7f2ffcc3cbb8538f82cb14377edb08b49105baf7"}, end: {_id:266}, properties:{}}, {start: {hash:"629819ce0c440760be155874cb42ab497f0304bd"}, end: {_id:277}, properties:{}}, {start: {hash:"46f76d50b8569f450ce909e04f3c5fa81b97737a"}, end: {_id:282}, properties:{}}, {start: {hash:"87401ba23af26d379d8132cc09fd7cd212773ba1"}, end: {_id:291}, properties:{}}, {start: {hash:"c50fd3b3f25f87a6326684ad44d507d187e24874"}, end: {_id:348}, properties:{}}, {start: {hash:"d9b4b9dcb95b96bdfb09f9631acd91ab34aa7dcf"}, end: {_id:348}, properties:{}}, {start: {hash:"e9dcc211445f9e315d894e61cd147cf5acf151d9"}, end: {_id:363}, properties:{}}, {start: {hash:"25cda0b77ff329a89551cc6f14fe8c62820fd424"}, end: {_id:379}, properties:{}}, {start: {hash:"cacd8afbc18273e42e4027b36b3a5e9c37c04405"}, end: {_id:386}, properties:{}}, {start: {hash:"88303c62ab59b1e7a538289112cf19354a8ed05f"}, end: {_id:391}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"ea9c4efeb857958f5a31b75d22555c34e1181937"}, end: {_id:435}, properties:{}}, {start: {hash:"6a696dfa2dd5716a65b10fc3277cd9e994b8b30a"}, end: {_id:460}, properties:{}}, {start: {hash:"7247909ecd98c2d511316392f22cb3877f05250b"}, end: {_id:460}, properties:{}}, {start: {hash:"3945c8e2bd7a2b7e73169aceae9dc1817ec8292c"}, end: {_id:475}, properties:{}}, {start: {hash:"f70410061b8c6b9249895571e05dfb7a142efb18"}, end: {_id:482}, properties:{}}, {start: {hash:"738d187f603e5a52e6c6338abcd6096e22e819a0"}, end: {_id:486}, properties:{}}, {start: {hash:"59c40286757e1fa5cb5391421c5380e5ad506387"}, end: {_id:495}, properties:{}}, {start: {hash:"0d21bea79e1936e2bdaee58bd6e328dd08e59b30"}, end: {_id:502}, properties:{}}, {start: {hash:"c7bc0ce6f3fcaffcbbe7753f1a9d8437809bc167"}, end: {_id:508}, properties:{}}, {start: {hash:"edbb68b29f7e055a50c16f62a71ee7be8c019407"}, end: {_id:513}, properties:{}}, {start: {hash:"c11dabf1ea02c0e044c62448986bb3f9abdf3967"}, end: {_id:518}, properties:{}}, {start: {hash:"4214c1c19120650c6888d1c1a8d107755d6c6c2e"}, end: {_id:523}, properties:{}}, {start: {hash:"6f802267c2d43803eebbdb383da9e3815c1c68bd"}, end: {_id:537}, properties:{}}, {start: {hash:"9f610811aea8c523332e9dccad9bb0800b70691e"}, end: {_id:543}, properties:{}}, {start: {hash:"c928fe0a05d1e9b8f1ecb1a7dacffecc2800e038"}, end: {_id:549}, properties:{}}, {start: {hash:"9604c14a781530129e47e7a7684a90db86a7f7a0"}, end: {_id:555}, properties:{}}, {start: {hash:"a0ea4fd84a409fe4ee853effa9f309a005b0efc1"}, end: {_id:562}, properties:{}}, {start: {hash:"3c5d381a20fbd287f1003271ee1ba64272325074"}, end: {_id:576}, properties:{}}, {start: {hash:"038d43dc5f17870bc6681e1d8699e0a0951a859e"}, end: {_id:581}, properties:{}}, {start: {hash:"68171be117d3997b84253258f41fad6daedbc76a"}, end: {_id:585}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"a10df203e8892e1a868bd88d798589719a582ba6"}, end: {_id:592}, properties:{}}, {start: {hash:"494706fc421a0ddda47f7d543b7e7a296c378c26"}, end: {_id:597}, properties:{}}, {start: {hash:"e4558e322cd6af610c43a840a59af8dad41f307f"}, end: {_id:603}, properties:{}}, {start: {hash:"1ab89439a42782f55a2ad591530118dbabd9a447"}, end: {_id:619}, properties:{}}, {start: {hash:"f29cf1138d21a2eba8aaccec3185e461cb8675bd"}, end: {_id:624}, properties:{}}, {start: {hash:"dfc9a7ea4a62b6e6c14e09b2f08c7fb5c63ca711"}, end: {_id:624}, properties:{}}, {start: {hash:"163a9de084161e21cb62c19033b4bff7d3a5e649"}, end: {_id:630}, properties:{}}, {start: {hash:"e2a2ef243deb0374ccfe3f37e0d1395d4338969c"}, end: {_id:630}, properties:{}}, {start: {hash:"9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c"}, end: {_id:641}, properties:{}}, {start: {hash:"86a0795540edb426c3226775d73fcd4ce807d36a"}, end: {_id:649}, properties:{}}, {start: {hash:"0d4fbd0a7b296a5c9377a835dff89d1499716082"}, end: {_id:654}, properties:{}}, {start: {hash:"baa5b2d85892a85403c5dac807c891bb1b7b6dc7"}, end: {_id:667}, properties:{}}, {start: {hash:"0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4"}, end: {_id:673}, properties:{}}, {start: {hash:"bcc6e190b8f8a12b590089fb755c4f552f179ad0"}, end: {_id:688}, properties:{}}, {start: {hash:"77c58fa499829785825e45aa90e1bb6c7058c5a2"}, end: {_id:695}, properties:{}}, {start: {hash:"e19dd7497737376a07e62042ed9fb3e8ad9739a9"}, end: {_id:703}, properties:{}}, {start: {hash:"804ab045e330d3b669282e55c5bcc4660ebffea8"}, end: {_id:724}, properties:{}}, {start: {hash:"d13218e98814d7ac3bc65fc862c0119123f44d68"}, end: {_id:730}, properties:{}}, {start: {hash:"e5dd322eadc9e0a00fd3a603d5a9e9e07a812df6"}, end: {_id:735}, properties:{}}, {start: {hash:"321b1aee88f7d15dafe46aede2b86ced70061025"}, end: {_id:740}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"3f27fe4cb4b75bffb7c1cf754f3f22a61cad9bfd"}, end: {_id:747}, properties:{}}, {start: {hash:"34d80ece7d0ef598414baffceb074c6580dd819b"}, end: {_id:754}, properties:{}}, {start: {hash:"5e63c8390cb1001daf4ad74bb2926cc060c0de08"}, end: {_id:754}, properties:{}}, {start: {hash:"dfe44fcf8f5a477e1fbc354f1b1d87af28895c0f"}, end: {_id:762}, properties:{}}, {start: {hash:"cbd8ce761041eac3afbdfbf74e001895895682f2"}, end: {_id:773}, properties:{}}, {start: {hash:"2b30952f26e8a8e66fe8b6eddf9c4657e0d074d4"}, end: {_id:778}, properties:{}}, {start: {hash:"599aa2776677bcf05ebf5f6377a2eb82f5d2220c"}, end: {_id:789}, properties:{}}, {start: {hash:"68c7bfb39a40f2783cfdae9ab5206c6747b8e7f3"}, end: {_id:795}, properties:{}}, {start: {hash:"33fbb76715ce6e35565b5f83f7ece0f9df37d282"}, end: {_id:801}, properties:{}}, {start: {hash:"bf753832a519b0649f8d58d93aa643afe3f94fc7"}, end: {_id:806}, properties:{}}, {start: {hash:"47e62f2fc73a96611606cd619c084d1ded9d844d"}, end: {_id:811}, properties:{}}, {start: {hash:"fa109033da045468d612fe8eae1a2f903e30e128"}, end: {_id:822}, properties:{}}, {start: {hash:"f2f4deb8bb44988eeb0b64b919e51fb556aef4fb"}, end: {_id:673}, properties:{}}, {start: {hash:"aaa8e0261a01a62fa4a343788b3df20b9e93ee38"}, end: {_id:673}, properties:{}}, {start: {hash:"85252dec6ed7f0b24517089150ec89bf32b45fb2"}, end: {_id:673}, properties:{}}, {start: {hash:"2291a1ac7e47009d058a1a448760cd5559e5946e"}, end: {_id:839}, properties:{}}, {start: {hash:"17007456991c1a8faa26b1f4ac993883f577d124"}, end: {_id:844}, properties:{}}, {start: {hash:"9ec3047d95969e8d2b729e6545672c3084ea846d"}, end: {_id:850}, properties:{}}, {start: {hash:"25ed0319bf8099f0cc79eceba9104c73d9507e0d"}, end: {_id:858}, properties:{}}, {start: {hash:"2809f4e2d78ff33b48e9c1742b58a256ebce986d"}, end: {_id:858}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"6e85cf4f7e7f76c159c2e30952a775d6facaf638"}, end: {_id:865}, properties:{}}, {start: {hash:"53588dad5dd4c13903a6c582f74e1afe2671d33e"}, end: {_id:873}, properties:{}}, {start: {hash:"832682e0b54ede90b021b4ed575dcc9e761135ce"}, end: {_id:878}, properties:{}}, {start: {hash:"941e316bcd70779e868311253f663f8acd5ef155"}, end: {_id:878}, properties:{}}, {start: {hash:"667f5715c19534bfe5b01ad692979447412fd033"}, end: {_id:887}, properties:{}}, {start: {hash:"83f393acfdc39810b29f898ff2d8a3f247571aa6"}, end: {_id:895}, properties:{}}, {start: {hash:"3799ee8b9677d02254eb6d6f50f3732df4c8374e"}, end: {_id:903}, properties:{}}, {start: {hash:"2e2092ec94b27a4c3f0b9f4ee4d46a1983a72518"}, end: {_id:908}, properties:{}}, {start: {hash:"ad841964564c461513643bb13531dc07111efc7d"}, end: {_id:918}, properties:{}}, {start: {hash:"f69ce3812180a20bbda69ff1432a1cd36342bc3b"}, end: {_id:923}, properties:{}}, {start: {hash:"200e62726a588acf05f58a1087d71eb1b98f4e0a"}, end: {_id:949}, properties:{}}, {start: {hash:"08ff1d9788127d4fb9aa6616e22ed0b4ed406106"}, end: {_id:955}, properties:{}}, {start: {hash:"6089a019df4c39231e596af627ebd910877d11d0"}, end: {_id:961}, properties:{}}, {start: {hash:"521bae59a4002a616eac44c1681ca5066bbd00c8"}, end: {_id:966}, properties:{}}, {start: {hash:"a9ea9d09727825f9a047e70d94caf73c99e6b2a8"}, end: {_id:977}, properties:{}}, {start: {hash:"39a9cabac6765c75591ba258fef0d10ba7ae0f9e"}, end: {_id:982}, properties:{}}, {start: {hash:"e78aad174927ca59a43a622d7e82f664e3005790"}, end: {_id:989}, properties:{}}, {start: {hash:"43b3c46b84b984800a6a013a93555b7bedf5c81a"}, end: {_id:995}, properties:{}}, {start: {hash:"4356e9ebf89921898e9459f85f1173d44f3a3a6f"}, end: {_id:1005}, properties:{}}, {start: {hash:"fa5f7fb35b0b44020fb81dd5c4e3b9ceaca1f967"}, end: {_id:1018}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"9cbfebaab11cb3466b160d18ef2eb46c0b875d55"}, end: {_id:1023}, properties:{}}, {start: {hash:"5675965b57d05932ae8b806bad2cd219d15fe516"}, end: {_id:1053}, properties:{}}, {start: {hash:"02210a3d3ba4a770c29623825b7f54f3ff33f3c7"}, end: {_id:1060}, properties:{}}, {start: {hash:"1e208af4c83d093c900f4cccedbca6183142a07f"}, end: {_id:1070}, properties:{}}, {start: {hash:"5127d7a6eccc6965d1e51928d50ee01a46b38871"}, end: {_id:1075}, properties:{}}, {start: {hash:"e5742d6f4f93dd432c9d8d0a31493d43c45aaff1"}, end: {_id:1081}, properties:{}}, {start: {hash:"742f35a1fdf66b24ddb1f6a514b2af5a1f2b4282"}, end: {_id:1089}, properties:{}}, {start: {hash:"0e69a9978eae9e3432de8f16c2ca1b38033c23a7"}, end: {_id:1094}, properties:{}}, {start: {hash:"948727c5b1e87b970a7a9dee4cd67bb84d19abf8"}, end: {_id:1094}, properties:{}}, {start: {hash:"93ee12adde6ac773c76b590fe89c24df372f326b"}, end: {_id:1094}, properties:{}}, {start: {hash:"c82a19d98673c1aeeb1fa26afb983acbfbea272f"}, end: {_id:1106}, properties:{}}, {start: {hash:"5e8b6f6b88db49a0508ea670d71070c92cfdbaca"}, end: {_id:1121}, properties:{}}, {start: {hash:"e51b9583b2df3154b5c82da361d411d65ed23bab"}, end: {_id:1129}, properties:{}}, {start: {hash:"6ca41e5ad697201a1d225e5d15134e547ee6ced3"}, end: {_id:1242}, properties:{}}, {start: {hash:"4e67a501bb3f5187a3e9af523921ac62b8a88469"}, end: {_id:1248}, properties:{}}, {start: {hash:"7b8d9247a679295e0e1791b13d6c437c473e44b8"}, end: {_id:1248}, properties:{}}, {start: {hash:"3971011e4253cb5b98fdf77a558f5ef8f34d2653"}, end: {_id:1265}, properties:{}}, {start: {hash:"8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2"}, end: {_id:1270}, properties:{}}, {start: {hash:"265d6c5b8a1e01032402d4b2c94d12d5365e5e6e"}, end: {_id:1138}, properties:{}}, {start: {hash:"8475fbe51281a76757f7046c6c591056db182286"}, end: {_id:1312}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"c130862a29878f0e483551bc115d2ca5bdc4bf5c"}, end: {_id:1335}, properties:{}}, {start: {hash:"0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4"}, end: {_id:1341}, properties:{}}, {start: {hash:"02c710b8259f493c475021fc9eac23b871305ae6"}, end: {_id:1353}, properties:{}}, {start: {hash:"79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07"}, end: {_id:1360}, properties:{}}, {start: {hash:"f62bfebb54530c9466cfdb21336794f24bcd63a7"}, end: {_id:1360}, properties:{}}, {start: {hash:"1e588a004172338404c487e679df5d503f0cab48"}, end: {_id:1312}, properties:{}}, {start: {hash:"a51a3bfcd73fd55ecd43aa36ce3f266f0cefc2dc"}, end: {_id:1312}, properties:{}}, {start: {hash:"ee2b2286a02d49c7e9992d0a39ce950583e16bb7"}, end: {_id:1312}, properties:{}}, {start: {hash:"f2f4deb8bb44988eeb0b64b919e51fb556aef4fb"}, end: {_id:1341}, properties:{}}, {start: {hash:"aaa8e0261a01a62fa4a343788b3df20b9e93ee38"}, end: {_id:1341}, properties:{}}, {start: {hash:"ba858d94e29d03e3e81533df8cd8bc85b9f176f1"}, end: {_id:1410}, properties:{}}, {start: {hash:"3bc712aba0c797053b5cdc113e3e46afb6cff8a5"}, end: {_id:1426}, properties:{}}, {start: {hash:"002bcce28e46728714fa1e0d20bec6f2559caba2"}, end: {_id:1431}, properties:{}}, {start: {hash:"0ecf0a154918bd9bdc0f53557bc1f80920da6b14"}, end: {_id:1449}, properties:{}}, {start: {hash:"411ab992ba07e698cb08b56eb4cfc9d6e001d43f"}, end: {_id:1470}, properties:{}}, {start: {hash:"d016b96d89370b8039817fabdfa055576cf6b4cc"}, end: {_id:1475}, properties:{}}, {start: {hash:"1af5d07714182455cafd972556b507409f9559ae"}, end: {_id:1482}, properties:{}}, {start: {hash:"ec2982c8742cc7bc294f8a3cc07ae9ba5ffcaced"}, end: {_id:1488}, properties:{}}, {start: {hash:"4fe0be131b0f6b5f073391227b9fe54372506b42"}, end: {_id:1501}, properties:{}}, {start: {hash:"bfa7b3ae90f1d64d957700976080f9b1921dba30"}, end: {_id:1505}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"c291c0954c89e1bfbdb76d4c8990baf9db986343"}, end: {_id:1510}, properties:{}}, {start: {hash:"a49aaeed1776f0991256221e61ebc868ae5b60cb"}, end: {_id:1519}, properties:{}}, {start: {hash:"0c679d7adfa5bf38d5c7846958f3508fc036b3e9"}, end: {_id:1524}, properties:{}}, {start: {hash:"d0741cddb32ed7970904693e3a697603fa21bbbb"}, end: {_id:1529}, properties:{}}, {start: {hash:"71a0250ad3aeed1da2b11734ac22c21831f3595d"}, end: {_id:1535}, properties:{}}, {start: {hash:"cc3460b79e8811df25a34a10c34c2a0ad2b6280f"}, end: {_id:1552}, properties:{}}, {start: {hash:"ef1df1044df317c78987f7f8398b4e45f5a3ee0a"}, end: {_id:1557}, properties:{}}, {start: {hash:"c528b5e97d9d1b57087bd60644a885dd9b4a2294"}, end: {_id:1569}, properties:{}}, {start: {hash:"6a56f400f7de3f4d5cef646d92e3f848608031c1"}, end: {_id:1574}, properties:{}}, {start: {hash:"81e606a72e7c2e06c2f6d9c204086157aa82eac3"}, end: {_id:1590}, properties:{}}, {start: {hash:"7cc487f270d553f819fea0cf96e872c374979305"}, end: {_id:1590}, properties:{}}, {start: {hash:"301244e00d9f359f964242849462704f80e8db13"}, end: {_id:1598}, properties:{}}, {start: {hash:"14f065e5161fee14c286c34df7db9f5516ef9bb6"}, end: {_id:1606}, properties:{}}, {start: {hash:"348b52a2ae5d6d242c8802644f9e3a5e6460de1d"}, end: {_id:1648}, properties:{}}, {start: {hash:"38d0a67cf70d46c26675ce60a7a647eef0f11e52"}, end: {_id:1648}, properties:{}}, {start: {hash:"d75eace6e505fe5645647593ab8a9bb018db64c2"}, end: {_id:1648}, properties:{}}, {start: {hash:"b0660183c95f4b938dbf33c5607381b8e4e2bd68"}, end: {_id:1662}, properties:{}}, {start: {hash:"e3d337caa558830f8e337d24edaab577ee9d43a2"}, end: {_id:1662}, properties:{}}, {start: {hash:"fe1f2665b198308a438ec3d46b24843089df1a2a"}, end: {_id:1662}, properties:{}}, {start: {hash:"45053a0862bf97f0525862c411fa4da5d59ac397"}, end: {_id:1616}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"e357e4e6879f9f6fb09cf28a40684d30d0e63400"}, end: {_id:1686}, properties:{}}, {start: {hash:"f4113a8f7e52991dfb75f63688aeba77bac76b01"}, end: {_id:1693}, properties:{}}, {start: {hash:"4ba7a9dc3085ab701c85737a4f36dd57fcd7596f"}, end: {_id:1698}, properties:{}}, {start: {hash:"84628710c900b2d1db058aa0e339134f24e6d20c"}, end: {_id:1723}, properties:{}}, {start: {hash:"8cd62acc20ce3418eaf4cdd9d8b472091101cdbd"}, end: {_id:1723}, properties:{}}, {start: {hash:"206394bcc75866953f64cbf3bd6214e4e6f96e91"}, end: {_id:1736}, properties:{}}, {start: {hash:"5ff37f12a421fdd902d8eb1e6d7491ee181fd179"}, end: {_id:1745}, properties:{}}, {start: {hash:"effee9cbc473af5d07cfc3aacece50aa6e59753a"}, end: {_id:1753}, properties:{}}, {start: {hash:"30be6aa1969e37d512153b558540fe714b635c4c"}, end: {_id:1758}, properties:{}}, {start: {hash:"f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac"}, end: {_id:1758}, properties:{}}, {start: {hash:"b26b9e5d1b13602a4c192d9697a12df7770906b2"}, end: {_id:1758}, properties:{}}, {start: {hash:"6085ce34a95fbc4a8d651a3f6a0405811952af93"}, end: {_id:1765}, properties:{}}, {start: {hash:"998be8119321e8812884075b078a1d5fb36cfa69"}, end: {_id:1772}, properties:{}}, {start: {hash:"ce576be106257496e20d946d6eab5f8783dada92"}, end: {_id:1777}, properties:{}}, {start: {hash:"4b495fef39e68590aea98af324340adafadfb334"}, end: {_id:1777}, properties:{}}, {start: {hash:"7e1b0531992b592980c232994b7248801073fcd0"}, end: {_id:1784}, properties:{}}, {start: {hash:"197502b1ac4bab77b9ab017b755c4d75ddaa218b"}, end: {_id:1790}, properties:{}}, {start: {hash:"cebf7f883b1325a4db1c0e7b3cd0d6684a7c41b0"}, end: {_id:1790}, properties:{}}, {start: {hash:"516075e2987bdd1063f22768d451c1c1eb647175"}, end: {_id:1807}, properties:{}}, {start: {hash:"840ed0938bea8867caba921446b8a77a2f1c9e7d"}, end: {_id:1807}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"894fb1d80c7a3953b7a51d7acd5e9b942faced8f"}, end: {_id:1817}, properties:{}}, {start: {hash:"4f641b162fa877aef842481631906d5bfe874781"}, end: {_id:1822}, properties:{}}, {start: {hash:"0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6"}, end: {_id:1822}, properties:{}}, {start: {hash:"0c38902905b96c598715a08d5c3880ad01ce5fea"}, end: {_id:1831}, properties:{}}, {start: {hash:"fed8be2748bc2286a6f9888d282d66763ba612ed"}, end: {_id:1840}, properties:{}}, {start: {hash:"cfe92035f1b281cddfcf62664ec6b96e85e0ac32"}, end: {_id:1846}, properties:{}}, {start: {hash:"6488091456429ed61264b9cad841eeb6bf871e32"}, end: {_id:1869}, properties:{}}, {start: {hash:"6cfda6ada5137b232ff442ae9f2aedc8520ee1b4"}, end: {_id:1869}, properties:{}}, {start: {hash:"aeb3bfbe393cdfc02e62b812843ed75cf5f245e4"}, end: {_id:1869}, properties:{}}, {start: {hash:"5fa5da9756f12559b490217dd5b173db48e7f2a9"}, end: {_id:1869}, properties:{}}, {start: {hash:"2ee1ff690416016dfed50dab6f516559f2270bf9"}, end: {_id:1869}, properties:{}}, {start: {hash:"cc8cb3ab5e257109ea9f6c19f4d034b1ac7ca4ca"}, end: {_id:1884}, properties:{}}, {start: {hash:"d7afb9018e20ef85f1fbee2300dbf5c5cdf3cb0e"}, end: {_id:1907}, properties:{}}, {start: {hash:"a39ed520b0048d54886d16c10c988ca905f64c58"}, end: {_id:1934}, properties:{}}, {start: {hash:"19d187e4a29147cbcf1cfae456cfcbfa8ad52b45"}, end: {_id:1869}, properties:{}}, {start: {hash:"5d30d7d7ca658bed21677b1aa56c72a0e0cd737b"}, end: {_id:1869}, properties:{}}, {start: {hash:"fbd513a3c74bf20ecdb67a4243d30356e8b86a01"}, end: {_id:1869}, properties:{}}, {start: {hash:"74fe1ac392549eb3aad67d239310b92cc9f0dd10"}, end: {_id:1869}, properties:{}}, {start: {hash:"ed67711a54ca65473c9c7b788161d680914ef1c7"}, end: {_id:1966}, properties:{}}, {start: {hash:"ac105ab0a5ae38fbf69167e072f8970a4a61c3e8"}, end: {_id:1966}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"5199e517f5e08b8bed3f96334b102814b3e99200"}, end: {_id:1907}, properties:{}}, {start: {hash:"137c1c3085bb95b74e2d5a695c3343ca25830fd3"}, end: {_id:1980}, properties:{}}, {start: {hash:"e91c7912b25beb51199ccfff2414668bcc69186e"}, end: {_id:1869}, properties:{}}, {start: {hash:"ef79a5aec29133d4c479652863c61f943fbdb42b"}, end: {_id:1869}, properties:{}}, {start: {hash:"6283dd7b80fd26ff09d242555a6e56c2eb75471b"}, end: {_id:1869}, properties:{}}, {start: {hash:"b4094f63c5d4a216ed7ade1a51ea3653222cf222"}, end: {_id:1869}, properties:{}}, {start: {hash:"f844cd8e254b161bebef04101f8ce177bcd0840c"}, end: {_id:1869}, properties:{}}, {start: {hash:"806b1a2a47f2f4e580e524b2cf8cc5928749d972"}, end: {_id:1869}, properties:{}}, {start: {hash:"8d7d2ebe0dbe9ebf8009572d1d710c4700cf245e"}, end: {_id:1869}, properties:{}}, {start: {hash:"d7f24bafaa9f80e9d3e834dc34b8fbe950a6c437"}, end: {_id:2015}, properties:{}}, {start: {hash:"e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66"}, end: {_id:2020}, properties:{}}, {start: {hash:"782a0a3c30cf83bcaeacc942789ccc903576fe8a"}, end: {_id:2028}, properties:{}}, {start: {hash:"2709680d633653ca9bd68a023981a75427daaa7a"}, end: {_id:2042}, properties:{}}, {start: {hash:"81dc1d3f98034672d5f62f440f2cc3abc58ce2a2"}, end: {_id:2048}, properties:{}}, {start: {hash:"a873443bd618ac9c14d12210ed4d12a11cc1f733"}, end: {_id:2054}, properties:{}}, {start: {hash:"19c37f7e4e65d14e760f1ff8cf60cfd1e98c1a8b"}, end: {_id:2054}, properties:{}}, {start: {hash:"bbfbd2484ace2819ffceac9155b995ab870ee3a3"}, end: {_id:2054}, properties:{}}, {start: {hash:"ccd141993815d0b1f444d12bbd2bdcdd9548e20e"}, end: {_id:2071}, properties:{}}, {start: {hash:"10bb572d477197bd3874532bfd364de1cb496d05"}, end: {_id:2071}, properties:{}}, {start: {hash:"ad9ba03731ec0520164bb23a90968f2100dca517"}, end: {_id:2071}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"cd97b1881cb0d1c145b8b6236a3702a970c671c2"}, end: {_id:2095}, properties:{}}, {start: {hash:"2afa0c4652393014778f9b2fefcf975d6ca22ae2"}, end: {_id:2054}, properties:{}}, {start: {hash:"7a9c468b88d2edee19007cff6529a20a38eeb363"}, end: {_id:2118}, properties:{}}, {start: {hash:"620750695d8f83d79451948d2a43bf920b48c062"}, end: {_id:2118}, properties:{}}, {start: {hash:"f5b50d8dfbec87dba0b824369021dc6b22058840"}, end: {_id:2139}, properties:{}}, {start: {hash:"6de6d83d930bd9459e1cf8c311fa7b45c3f90987"}, end: {_id:2147}, properties:{}}, {start: {hash:"2bd01358b3a30d1680074f9bbd120da3a1456450"}, end: {_id:2153}, properties:{}}, {start: {hash:"71f034f3e13e9118a2a954e1fc3c0d35153184f0"}, end: {_id:2160}, properties:{}}, {start: {hash:"0208ae3bc238f029b1faf6bdc3552dbe6147657b"}, end: {_id:2054}, properties:{}}, {start: {hash:"ddcc1a8abc1d29e8e32ed3c2e92ed9755dd17014"}, end: {_id:2179}, properties:{}}, {start: {hash:"8a71bbe9588b78351fe231a4341d07a5e2101ebb"}, end: {_id:2186}, properties:{}}, {start: {hash:"bac050d515cd6991e17cd1a34197d84982f5931d"}, end: {_id:2196}, properties:{}}, {start: {hash:"c00d24a1626e7d88a33431e4b403651acf158e05"}, end: {_id:2054}, properties:{}}, {start: {hash:"0662f7e1bfc70e21d8229e142b98b6c303addbc3"}, end: {_id:2054}, properties:{}}, {start: {hash:"772c5ad20818738b09d01cd70ca3de80cbf66dcb"}, end: {_id:2242}, properties:{}}, {start: {hash:"7c4205cd130c5463d7f39aa6f281e198c143d0d9"}, end: {_id:2242}, properties:{}}, {start: {hash:"af5af0b8e6a59a9c5879fde7eaaa86d694c2bfa2"}, end: {_id:2252}, properties:{}}, {start: {hash:"89fd3ebb3ba1ccc9a9019ad250b93a336d4bc03e"}, end: {_id:2054}, properties:{}}, {start: {hash:"bded5e3007349a6c47c509336ee9306d234902d6"}, end: {_id:2275}, properties:{}}, {start: {hash:"ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead"}, end: {_id:2285}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"e2295fe41d430f42795605b6356e69b393625999"}, end: {_id:2293}, properties:{}}, {start: {hash:"484b85587d32f2f2a6d54ffe16d5c759841961f8"}, end: {_id:2297}, properties:{}}, {start: {hash:"4eed76f9bfd4f93181660178ea689d98cd6d66d5"}, end: {_id:2318}, properties:{}}, {start: {hash:"1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7"}, end: {_id:2325}, properties:{}}, {start: {hash:"c16481a84d5823b65ce96bd811a265222385b43b"}, end: {_id:2331}, properties:{}}, {start: {hash:"f0bbb7e656d0f9785f1cc7cead6b420e1862f4df"}, end: {_id:2337}, properties:{}}, {start: {hash:"ce89df3cebc6487146391afe9517661053229f77"}, end: {_id:2348}, properties:{}}, {start: {hash:"b49579fbecbe8002932fdfb86146f83efd60bfcf"}, end: {_id:2348}, properties:{}}, {start: {hash:"8733c7f4d1b395d6a8e236d0106cfae56d4ded06"}, end: {_id:2354}, properties:{}}, {start: {hash:"e5dd13d33c1e927f932971d067d8f70e9041b5f3"}, end: {_id:2361}, properties:{}}, {start: {hash:"271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0"}, end: {_id:2367}, properties:{}}, {start: {hash:"b9750f0bb88bc22256085b6bc8f060055e90a8c4"}, end: {_id:2372}, properties:{}}, {start: {hash:"aef45215a4fe18d7fd03b7556fa3070815c57a22"}, end: {_id:2380}, properties:{}}, {start: {hash:"e88177b8ea5d4ef9f53f70ade27232de7a360800"}, end: {_id:2385}, properties:{}}, {start: {hash:"3378831be84bb1825c847a001c3c240318d991dc"}, end: {_id:2398}, properties:{}}, {start: {hash:"28b9313a2bb11c357deeaa256950fb0acf220bc4"}, end: {_id:2398}, properties:{}}, {start: {hash:"3228ee1c5bfdf89e57e898659b086364122d58c1"}, end: {_id:2404}, properties:{}}, {start: {hash:"e3b6520960a88aacbf03339dc1368f680a8bee9a"}, end: {_id:2413}, properties:{}}, {start: {hash:"cca186a0f7165b361f372c87524011e91b28f41a"}, end: {_id:1907}, properties:{}}, {start: {hash:"9e3285b91b2a95271c3b4d0c8777f5363bfdfd40"}, end: {_id:2448}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"f6c64d1b6ed367803a833da293e84d61573a7fd8"}, end: {_id:2453}, properties:{}}, {start: {hash:"2eb42357d986ad2c3d8693907df99895cee25c63"}, end: {_id:2476}, properties:{}}, {start: {hash:"189d96ce0f96c107ebf62dbaf73734e6fd20883a"}, end: {_id:2486}, properties:{}}, {start: {hash:"1c619d5df3f2e7f49dd9a3a47150aa41b0de497f"}, end: {_id:2497}, properties:{}}, {start: {hash:"be1245d8634025277ba79a4155ee88d7eaffcdfb"}, end: {_id:2503}, properties:{}}, {start: {hash:"4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942"}, end: {_id:2503}, properties:{}}, {start: {hash:"bc7484cd34698f2724e5d9f241fd9f53d953e3a3"}, end: {_id:2516}, properties:{}}, {start: {hash:"908c3fd85a60090cdd06f6f4b46893ceeeaf99fb"}, end: {_id:2528}, properties:{}}, {start: {hash:"77116ea84b2e8d088c644723e787ad5d6d9677fd"}, end: {_id:2554}, properties:{}}, {start: {hash:"e4003aa3c51b789e2a2b5828768a7d0f34659209"}, end: {_id:2561}, properties:{}}, {start: {hash:"48015a86eda461d99b580b69db5922acbe5bd28e"}, end: {_id:2605}, properties:{}}, {start: {hash:"3c48151cd75447f7fbd3e6ce14c491cd28e2442c"}, end: {_id:2613}, properties:{}}, {start: {hash:"636097557e403eb1d6b6211b09e30c47e7f39466"}, end: {_id:2618}, properties:{}}, {start: {hash:"9edee1a04f6056f367ce5ef678775c1203d6a778"}, end: {_id:2623}, properties:{}}, {start: {hash:"028bbe114d099b0388be9a46adcab80d9383a518"}, end: {_id:2632}, properties:{}}, {start: {hash:"da24f25924b6584137d7315e6eea61a31be86406"}, end: {_id:2638}, properties:{}}, {start: {hash:"985612e94b1ba7d6a881c6b2fe074449f47dd45d"}, end: {_id:2638}, properties:{}}, {start: {hash:"7e135499d33f0a5c51602a506fefe258cac072c6"}, end: {_id:2650}, properties:{}}, {start: {hash:"de97a6b8033c866c3b711468207aa4890049daaa"}, end: {_id:2657}, properties:{}}, {start: {hash:"d5ac10f438b093d600047b0c9790e71bbbaa0ab2"}, end: {_id:2662}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"44016d6a8e496b69308a81e88af8c9ef8b710ab3"}, end: {_id:2676}, properties:{}}, {start: {hash:"ab28ba331929475431fe695036d0863d329cdac2"}, end: {_id:2681}, properties:{}}, {start: {hash:"c3c8dd8bebf14f91518253cadadc6d8a88b5ea09"}, end: {_id:2690}, properties:{}}, {start: {hash:"665692a86bb65ddfa6c001f296c76c17288e2944"}, end: {_id:2699}, properties:{}}, {start: {hash:"0e69a9978eae9e3432de8f16c2ca1b38033c23a7"}, end: {_id:2723}, properties:{}}, {start: {hash:"948727c5b1e87b970a7a9dee4cd67bb84d19abf8"}, end: {_id:2723}, properties:{}}, {start: {hash:"93ee12adde6ac773c76b590fe89c24df372f326b"}, end: {_id:2723}, properties:{}}, {start: {hash:"a252266af60f5ab828ad9b81b17bb7b16a2fc52f"}, end: {_id:2730}, properties:{}}, {start: {hash:"79845fe095cd87287346f40d2adce9b28a32ef35"}, end: {_id:2730}, properties:{}}, {start: {hash:"6eaf697bf9f111214a6d74ee3094e5784a57d1bb"}, end: {_id:2730}, properties:{}}, {start: {hash:"c784bc0a3f747b66ab7cd01f23bbbdbad3bfe705"}, end: {_id:2744}, properties:{}}, {start: {hash:"a662717d80209735e93b6b8e537f21b53c06b469"}, end: {_id:2773}, properties:{}}, {start: {hash:"70904707a36ff8e5167e695de3529d8318911ba4"}, end: {_id:2802}, properties:{}}, {start: {hash:"ac39d3b9140e90bfd4b9eaa01200385bf10cc15d"}, end: {_id:2808}, properties:{}}, {start: {hash:"e8c7b2eb22d08ddd1a1bb375cb6efa4165c9098f"}, end: {_id:2815}, properties:{}}, {start: {hash:"0d7b5b0f6f92ff6cfde1f17ad96d1b1459a0957a"}, end: {_id:2820}, properties:{}}, {start: {hash:"99fd319a72d25441acf36fd2c167a875e9028935"}, end: {_id:2826}, properties:{}}, {start: {hash:"803640f6e77857520f69700ccc27c772ee7564e4"}, end: {_id:2831}, properties:{}}, {start: {hash:"ddc29467494ee63c323d0eb6493de6e8440c113e"}, end: {_id:2837}, properties:{}}, {start: {hash:"81f82740760a357a86b3a77f9ed400624edcb218"}, end: {_id:2843}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"43bba3db97631d8730160950395fde42793adbc2"}, end: {_id:2850}, properties:{}}, {start: {hash:"42c288d84b5f7853c36dcc55d181b8e16d3304a5"}, end: {_id:2857}, properties:{}}, {start: {hash:"faaecdc2e201a146f76f4a94f51e9fd5c5a428f3"}, end: {_id:2862}, properties:{}}, {start: {hash:"bc346a5604045d29b4b427c926f3e70d69440698"}, end: {_id:2867}, properties:{}}, {start: {hash:"4ec6d54e4d36ab02b0a7daf042e727717371eaec"}, end: {_id:2872}, properties:{}}, {start: {hash:"d6df68da5ae58fb5c650c6be15d9d8e676a129db"}, end: {_id:2903}, properties:{}}, {start: {hash:"cce6b14692fccd30c027851607a9526151d4c3d2"}, end: {_id:2908}, properties:{}}, {start: {hash:"8b563a7d3c7d90ddd2359500d9781547347cc56a"}, end: {_id:2917}, properties:{}}, {start: {hash:"40eb651a50d0dfd5cf047ef62c8a6259c1c66e02"}, end: {_id:2931}, properties:{}}, {start: {hash:"4a9e2c05092acca34f0608394638776c75496a99"}, end: {_id:2941}, properties:{}}, {start: {hash:"53ed24b573947c73ea9f0f4f8b477c44b7de2d54"}, end: {_id:2946}, properties:{}}, {start: {hash:"25bbff736936b64a6120ef9608498830ecec33c0"}, end: {_id:2956}, properties:{}}, {start: {hash:"300ed87cba6912103723b03d62c9b0bf93df36ea"}, end: {_id:2965}, properties:{}}, {start: {hash:"9f8227bf53ebc2b1bb0b99d0697f9f66eed7ab6d"}, end: {_id:2977}, properties:{}}, {start: {hash:"ab8808de2e078c572e9d88fdc57ff91b8e4acc36"}, end: {_id:2982}, properties:{}}, {start: {hash:"0cb5e776b8695da57892560c89010a8abd817afc"}, end: {_id:2989}, properties:{}}, {start: {hash:"43182470f02a463a4b9ee5ed3ec899f5d7de9653"}, end: {_id:2999}, properties:{}}, {start: {hash:"935d9d683608b4d8a97ef6ccc2c8ab7c14eec0d0"}, end: {_id:3004}, properties:{}}, {start: {hash:"587d3a91c12aae8f0dd4b34a46d03f919ea385c6"}, end: {_id:3009}, properties:{}}, {start: {hash:"773446c8f3192a447b8956f71b1ac90e7a9b8afa"}, end: {_id:3038}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"3ba302c69eb2a491a5b23e94084b4ddd24a4a703"}, end: {_id:3043}, properties:{}}, {start: {hash:"12cf2cb526ed6b2d12106894ca735cf81ba432ff"}, end: {_id:3043}, properties:{}}, {start: {hash:"bacda9d75b329997eb849183cf36ff8f97a9ee83"}, end: {_id:3052}, properties:{}}, {start: {hash:"d27b48345a3827b8a10cb5388e42bd5cbea484bb"}, end: {_id:3059}, properties:{}}, {start: {hash:"f4363ad27d366385f2388d073ce8af796e035406"}, end: {_id:3071}, properties:{}}, {start: {hash:"09636724e63599b1f589065c92074575471ac234"}, end: {_id:3078}, properties:{}}, {start: {hash:"066049972b995fb019bf29be7f0f307064a2f00e"}, end: {_id:3086}, properties:{}}, {start: {hash:"034908d914982eacea51b0ac61f2781069387412"}, end: {_id:3117}, properties:{}}, {start: {hash:"adaf03ac0d5a324880e9e6aa10d54b9de6b4e635"}, end: {_id:3124}, properties:{}}, {start: {hash:"df4c2102d59c5cae88c9ed30489b2d00bc75aafd"}, end: {_id:3151}, properties:{}}, {start: {hash:"24fa52712f844e2b459329e28af96bc369024d25"}, end: {_id:3165}, properties:{}}, {start: {hash:"bf59a4c995822ccfdeee64781345c12ebefa967f"}, end: {_id:3173}, properties:{}}, {start: {hash:"f106917bb7b2d8d4428022bb119585bf9f35769c"}, end: {_id:3179}, properties:{}}, {start: {hash:"ec5ec7bac99558a4e95e95788f846eb618edb861"}, end: {_id:3200}, properties:{}}, {start: {hash:"174486319f3b956807d56e5433880f9978884f93"}, end: {_id:3204}, properties:{}}, {start: {hash:"a433a5d5788a358e7437cb15097d68bd1220eda7"}, end: {_id:3211}, properties:{}}, {start: {hash:"4a00ffcbf9576d7e5febdbdf94a31d4735fc8035"}, end: {_id:3217}, properties:{}}, {start: {hash:"d34dcd505074546f77367786f5362891050c3440"}, end: {_id:3228}, properties:{}}, {start: {hash:"75771876ca81699edfb4bb1afa202d6426abae1e"}, end: {_id:3252}, properties:{}}, {start: {hash:"70a31f9b9a167e5025bb4099cc584044c47e699b"}, end: {_id:3228}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"65e44242c0b5f27d64ff714e5a8eed71ca02ab26"}, end: {_id:3270}, properties:{}}, {start: {hash:"681a3f8b4942be495b3f2528fb9ee40d7a4eb08a"}, end: {_id:3283}, properties:{}}, {start: {hash:"a86d89369aaf5a20c1e4d8415a8a771aa7de7d10"}, end: {_id:3288}, properties:{}}, {start: {hash:"7244eed07a1008675f45cc4349bf68141bb29edc"}, end: {_id:3295}, properties:{}}, {start: {hash:"cf842d48df037476a754b221f7b4115bb4f5ddf1"}, end: {_id:3304}, properties:{}}, {start: {hash:"cb45bf17da799afaa789206e3fcd39d9403e0567"}, end: {_id:3311}, properties:{}}, {start: {hash:"3e543412b6680057ffb10b0fbba777ccb3205882"}, end: {_id:3316}, properties:{}}, {start: {hash:"c10b476d869282ed6cf55def47445b9c703788fe"}, end: {_id:3330}, properties:{}}, {start: {hash:"759b1d641a430bf189354e9a4866e72fe56c22dc"}, end: {_id:3343}, properties:{}}, {start: {hash:"b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f"}, end: {_id:3350}, properties:{}}, {start: {hash:"50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9"}, end: {_id:3355}, properties:{}}, {start: {hash:"fc054a7183757d1e51e371e7329c5cf848cc6dd8"}, end: {_id:3365}, properties:{}}, {start: {hash:"eaf81b5f5ca1dbdd8951d4179a631818139566a5"}, end: {_id:3365}, properties:{}}, {start: {hash:"0db462f5528100ece08d85366fc777cd59fad473"}, end: {_id:3365}, properties:{}}, {start: {hash:"e89519dc59655ddbd3ecf56a4d680d7d01128152"}, end: {_id:3384}, properties:{}}, {start: {hash:"3138943ab4d15cc256d322e1128862ef11383c73"}, end: {_id:3390}, properties:{}}, {start: {hash:"f751747d53b467f72498c50deef79828c2b378be"}, end: {_id:3401}, properties:{}}, {start: {hash:"5298263d68548372c064b9d9c76977325a7373c8"}, end: {_id:3416}, properties:{}}, {start: {hash:"24c07bfd5c31438fff6374e9ba3d577e6402d777"}, end: {_id:3421}, properties:{}}, {start: {hash:"432683fcf7921a699f1557e89818b3bef5dba61a"}, end: {_id:3438}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"4a89f4b8235961275fa0e6aaf20848f2b8b7e733"}, end: {_id:3444}, properties:{}}, {start: {hash:"61e07012be3f140daf18d33b3be19c80147f12f2"}, end: {_id:3444}, properties:{}}, {start: {hash:"11234f631f7370dd80ee5fbc5dd7bdbc12dcbf49"}, end: {_id:3454}, properties:{}}, {start: {hash:"be1245d8634025277ba79a4155ee88d7eaffcdfb"}, end: {_id:3460}, properties:{}}, {start: {hash:"4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942"}, end: {_id:3460}, properties:{}}, {start: {hash:"bffc023eeff075ef281b1fd261897f4c7216b354"}, end: {_id:3469}, properties:{}}, {start: {hash:"5be96c3735b14c16dbe87f4c544f5ab1c75ab93a"}, end: {_id:3474}, properties:{}}, {start: {hash:"4894def3589d532789cc8af0c0b197727e0fb3f4"}, end: {_id:3483}, properties:{}}, {start: {hash:"605e74facfa2ff519ba5cda6e57474666901bd8c"}, end: {_id:3489}, properties:{}}, {start: {hash:"83d8b928ecb3f271a058bb30eaa1e05ce10e0434"}, end: {_id:3496}, properties:{}}, {start: {hash:"0019704e14723aaf326840ab36c594c3f514a2d4"}, end: {_id:3506}, properties:{}}, {start: {hash:"9438dcebde79c0726d69ae6a15c99b9c5c0f461c"}, end: {_id:3506}, properties:{}}, {start: {hash:"35d26fd046185ae079e09fa6435c41ae685e679e"}, end: {_id:3522}, properties:{}}, {start: {hash:"decdbce98d33cf2599aee554779ef5d8b5361d8f"}, end: {_id:3527}, properties:{}}, {start: {hash:"8bd6e745475f635d6f6b6929a545afa2e1d9dd57"}, end: {_id:3544}, properties:{}}, {start: {hash:"37f66bc43f57b1b7a5a897c58cefe09900afd7ef"}, end: {_id:3549}, properties:{}}, {start: {hash:"8454c8ee25e821abde10b73a2fec691269e41822"}, end: {_id:3560}, properties:{}}, {start: {hash:"5ea19806f7fcba7727e8111fc5ff4946b9ba72c8"}, end: {_id:3569}, properties:{}}, {start: {hash:"d750e25615e7e37914119cb257fbd9c7fad3a52a"}, end: {_id:3579}, properties:{}}, {start: {hash:"349c94aeffffb4eef513107d281d59ef6dd33962"}, end: {_id:3596}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"e8004aa1293b04a63fe33895e81ed2b9e6d3af94"}, end: {_id:3603}, properties:{}}, {start: {hash:"7e5c997c23683a707aa384b6a07801210b1839b8"}, end: {_id:3614}, properties:{}}, {start: {hash:"da9e2869456610a0228cb14f850c6eccddbb15e0"}, end: {_id:3619}, properties:{}}, {start: {hash:"0160ab1f89489abec4120ef4102bf5964b0af2fe"}, end: {_id:3624}, properties:{}}, {start: {hash:"9928d58017829d85789bdf45f467b6d32c6354b2"}, end: {_id:3632}, properties:{}}, {start: {hash:"7190744187e0aed2df8ce84f2a944294d6d4fc5b"}, end: {_id:3640}, properties:{}}, {start: {hash:"638430604158044fcf123adaf8dfdcc91b1a873e"}, end: {_id:3649}, properties:{}}, {start: {hash:"8391f1bd4322fec04fda7509b537c5f66cddbbd9"}, end: {_id:3657}, properties:{}}, {start: {hash:"9df6f6e72cd4fa33003fa5498c796bd129c99d0f"}, end: {_id:3670}, properties:{}}, {start: {hash:"7b2a446b0915a3ad26093f8234f7493ff152138a"}, end: {_id:3681}, properties:{}}, {start: {hash:"6e25b2cfb1cb80fd45ab6627a04e52735bb2fb5e"}, end: {_id:3686}, properties:{}}, {start: {hash:"afed4b83a174335ec2b371061c81bc92938ecda3"}, end: {_id:3688}, properties:{}}, {start: {hash:"4676fee3828f732d296feb81be51f9602610f537"}, end: {_id:3701}, properties:{}}, {start: {hash:"95c70a0a304c55adacc3ba0605dd2b9aa2730f6f"}, end: {_id:3706}, properties:{}}, {start: {hash:"5e8b6f6b88db49a0508ea670d71070c92cfdbaca"}, end: {_id:3718}, properties:{}}, {start: {hash:"e0d0f044c54ebf491c122664d03e0cfe5d2b0823"}, end: {_id:3726}, properties:{}}, {start: {hash:"3794d676f4375842364a080e78750b41d9af22d5"}, end: {_id:3734}, properties:{}}, {start: {hash:"cb9f00a2f6f23b44f7db08863ef5fb0b9ea0bc0c"}, end: {_id:3754}, properties:{}}, {start: {hash:"aeab4d039020c0d63209d7f800f9c34fae4060e6"}, end: {_id:3759}, properties:{}}, {start: {hash:"94e101feda4af9eef9980dc024c9d1a95afe3e6f"}, end: {_id:3771}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"12f8972a912d97427fe0ef1b84becdc8a2993022"}, end: {_id:3780}, properties:{}}, {start: {hash:"ef0372d2684ef920c6e54cf8b9f80d87db90e636"}, end: {_id:3780}, properties:{}}, {start: {hash:"e09126b45746f1c967d1990fa04ce781a0478c6d"}, end: {_id:3780}, properties:{}}, {start: {hash:"45053a0862bf97f0525862c411fa4da5d59ac397"}, end: {_id:3793}, properties:{}}, {start: {hash:"09e400452c1bde25fe393dd56c2fd608b84a18ac"}, end: {_id:3824}, properties:{}}, {start: {hash:"d51caa0c810f6d5ad6f0846a317ec2432835aad7"}, end: {_id:3824}, properties:{}}, {start: {hash:"44d66328ea4467d05d7fb8092631aff5afbd8b26"}, end: {_id:3824}, properties:{}}, {start: {hash:"75fc899c58848b290a31ff92bab92c27b3f6bf53"}, end: {_id:3833}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row.end._id})
CREATE (start)-[r:IN_BRANCH]->(end) SET r += row.properties;
UNWIND [{start: {hash:"cff3747c70722eba940317dec58dc9c22b3b4939"}, end: {email:"igor@veselinovic.net"}, properties:{}}, {start: {hash:"5afcf39a85fc972eb9bb3486e5dc8aeeba77d3ee"}, end: {email:"danijel.fon@gmail.com"}, properties:{}}, {start: {hash:"49f447bdbb3cf23499e8194e78f852ea1e256d3a"}, end: {email:"deptno@gmail.com"}, properties:{}}, {start: {hash:"0edcb1dbd7337eab4155be2f2a7683a77cc3cc6d"}, end: {email:"djeche@devlen.solutions"}, properties:{}}, {start: {hash:"3a3e9f6d19da0730f2b077b0c160a467102f5666"}, end: {email:"bmullinix0913@gmail.com"}, properties:{}}, {start: {hash:"21627e4057b3446b511e4369ca366e297cfc87eb"}, end: {email:"david.c.allen1971@gmail.com"}, properties:{}}, {start: {hash:"4759aa86a84ee099d6ce3f3987520a5b6cd1ffd3"}, end: {email:"hrabecpavel@gmail.com"}, properties:{}}, {start: {hash:"1d0b5db7f310dc6a47af3130a97e5373d9cdaddf"}, end: {email:"jeff@openinfrastructure.co"}, properties:{}}, {start: {hash:"c6b2c1bee4c1e53e87fd3d94fc8c07cf64342d7b"}, end: {email:"sedzsoft@gmail.com"}, properties:{}}, {start: {hash:"545b0bb763a4dbaab6b262c4b9642767e2434d07"}, end: {email:"will.farrell@gmail.com"}, properties:{}}, {start: {hash:"c11fca6440a5000648f690e6282778fb4ec73309"}, end: {email:"eduardobaitello@gmail.com"}, properties:{}}, {start: {hash:"324c8a499794f6a789d583c4c460af9475171215"}, end: {email:"mike.laramie@lacework.net"}, properties:{}}, {start: {hash:"53d023dc22daa7b4181b8ea51ce72c6b857aa553"}, end: {email:"j.tabacii@gmail.com"}, properties:{}}, {start: {hash:"ba317d7e402f014589e230fad8c7384016211ba2"}, end: {email:""}, properties:{}}, {start: {hash:"f8af6bc22bd3d827566e7e65deb63c13cdaf6031"}, end: {email:"nnacir1938@hotmail.com"}, properties:{}}, {start: {hash:"3b0e2fe42d660664c49d54ae8706de004a9b4176"}, end: {email:"shoekstra@schubergphilis.com"}, properties:{}}, {start: {hash:"7696353632379532ab7006f9eda39fbf14e25532"}, end: {email:"goran.stimac@email.com"}, properties:{}}, {start: {hash:"633eb938742a43be09612b944c29aaaf70dac119"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"7de45302cfa8a7dca88ab61b3021091cc480b495"}, end: {email:"iam@defn.sh"}, properties:{}}, {start: {hash:"3a96bab387bf898fd71023961e0cd957488e357b"}, end: {email:"ywarezk@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"f1383adda80c8d0960fa8153c2a82f03ce81e874"}, end: {email:"ywarezk@gmail.com"}, properties:{}}, {start: {hash:"991915ce492e074d8df658aa54c902b52f9c4cc5"}, end: {email:"andrei.petric@octoenergy.com"}, properties:{}}, {start: {hash:"213ea410b9a2146cc804213dedeacdff4f07a74a"}, end: {email:"tom.king@nationalarchives.gov.uk"}, properties:{}}, {start: {hash:"4fd89da7e37ce7f22d920e3584761f702383a8ba"}, end: {email:"538456+mweiden@users.noreply.github.com"}, properties:{}}, {start: {hash:"5f9f8fb118a42d7b18ec082be41665ed2b9eb992"}, end: {email:"itzik6@gmail.com"}, properties:{}}, {start: {hash:"5ba235b0c935de75c2cb2f57686bc246816a7f74"}, end: {email:"TronBlack@gmail.com"}, properties:{}}, {start: {hash:"7ac9544b0c651fd8193eb063079514d0aa41e290"}, end: {email:"jared@grokdata.tech"}, properties:{}}, {start: {hash:"5403a8978053a1299b0afe8d7fc59e914fc5e354"}, end: {email:"jeremy.frasier@trio.dhs.gov"}, properties:{}}, {start: {hash:"4907fd7598d0083705494182d985c6b3b58db2c0"}, end: {email:"sam@debruyn.dev"}, properties:{}}, {start: {hash:"087f2caeff6ecaa2a18ecc2f20b7313a70d2d191"}, end: {email:"ccastill@checkpoint.com"}, properties:{}}, {start: {hash:"7f2ffcc3cbb8538f82cb14377edb08b49105baf7"}, end: {email:"andyfang.dz@gmail.com"}, properties:{}}, {start: {hash:"629819ce0c440760be155874cb42ab497f0304bd"}, end: {email:"cheoksv@my.ibm.com"}, properties:{}}, {start: {hash:"46f76d50b8569f450ce909e04f3c5fa81b97737a"}, end: {email:"geoffrey@gbergeret.com"}, properties:{}}, {start: {hash:"87401ba23af26d379d8132cc09fd7cd212773ba1"}, end: {email:"75040720+razvan-moj@users.noreply.github.com"}, properties:{}}, {start: {hash:"c50fd3b3f25f87a6326684ad44d507d187e24874"}, end: {email:"47531708+jabielecki@users.noreply.github.com"}, properties:{}}, {start: {hash:"d9b4b9dcb95b96bdfb09f9631acd91ab34aa7dcf"}, end: {email:"47531708+jabielecki@users.noreply.github.com"}, properties:{}}, {start: {hash:"e9dcc211445f9e315d894e61cd147cf5acf151d9"}, end: {email:"krishnamohan.bandi@gmail.com"}, properties:{}}, {start: {hash:"25cda0b77ff329a89551cc6f14fe8c62820fd424"}, end: {email:"kevin.elledge@gmail.com"}, properties:{}}, {start: {hash:"cacd8afbc18273e42e4027b36b3a5e9c37c04405"}, end: {email:"andy.baran@hashicorp.com"}, properties:{}}, {start: {hash:"88303c62ab59b1e7a538289112cf19354a8ed05f"}, end: {email:"danjsievers@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"ea9c4efeb857958f5a31b75d22555c34e1181937"}, end: {email:"Ricardo.Cordeiro@gft.com"}, properties:{}}, {start: {hash:"6a696dfa2dd5716a65b10fc3277cd9e994b8b30a"}, end: {email:"andre.correa@oracle.com"}, properties:{}}, {start: {hash:"7247909ecd98c2d511316392f22cb3877f05250b"}, end: {email:"johannes.murmann@oracle.com"}, properties:{}}, {start: {hash:"3945c8e2bd7a2b7e73169aceae9dc1817ec8292c"}, end: {email:"matt@conwaysplace.com"}, properties:{}}, {start: {hash:"f70410061b8c6b9249895571e05dfb7a142efb18"}, end: {email:"jeremy.frasier@trio.dhs.gov"}, properties:{}}, {start: {hash:"738d187f603e5a52e6c6338abcd6096e22e819a0"}, end: {email:"zbmowrey@gmail.com"}, properties:{}}, {start: {hash:"59c40286757e1fa5cb5391421c5380e5ad506387"}, end: {email:"edward-robinson@cookpad.com"}, properties:{}}, {start: {hash:"0d21bea79e1936e2bdaee58bd6e328dd08e59b30"}, end: {email:"dmrz@illinois.edu"}, properties:{}}, {start: {hash:"c7bc0ce6f3fcaffcbbe7753f1a9d8437809bc167"}, end: {email:"realercheng@hotmail.com"}, properties:{}}, {start: {hash:"edbb68b29f7e055a50c16f62a71ee7be8c019407"}, end: {email:"david@digitalronin.com"}, properties:{}}, {start: {hash:"c11dabf1ea02c0e044c62448986bb3f9abdf3967"}, end: {email:"austindavis4@gmail.com"}, properties:{}}, {start: {hash:"4214c1c19120650c6888d1c1a8d107755d6c6c2e"}, end: {email:"stuajc@gmail.com"}, properties:{}}, {start: {hash:"6f802267c2d43803eebbdb383da9e3815c1c68bd"}, end: {email:"serve.laurijssen@fujifilm.com"}, properties:{}}, {start: {hash:"9f610811aea8c523332e9dccad9bb0800b70691e"}, end: {email:"jwang@quantcast.com"}, properties:{}}, {start: {hash:"c928fe0a05d1e9b8f1ecb1a7dacffecc2800e038"}, end: {email:"91758108+khanhntd@users.noreply.github.com"}, properties:{}}, {start: {hash:"9604c14a781530129e47e7a7684a90db86a7f7a0"}, end: {email:"pasekei@gmail.com"}, properties:{}}, {start: {hash:"a0ea4fd84a409fe4ee853effa9f309a005b0efc1"}, end: {email:"me@naftuli.wtf"}, properties:{}}, {start: {hash:"3c5d381a20fbd287f1003271ee1ba64272325074"}, end: {email:"43583445+dontlaugh@users.noreply.github.com"}, properties:{}}, {start: {hash:"038d43dc5f17870bc6681e1d8699e0a0951a859e"}, end: {email:"jason.r.paige@gmail.com"}, properties:{}}, {start: {hash:"68171be117d3997b84253258f41fad6daedbc76a"}, end: {email:"ayltai@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"a10df203e8892e1a868bd88d798589719a582ba6"}, end: {email:"cedric.lamoriniere@datadoghq.com"}, properties:{}}, {start: {hash:"494706fc421a0ddda47f7d543b7e7a296c378c26"}, end: {email:"carolguomin@gmail.com"}, properties:{}}, {start: {hash:"e4558e322cd6af610c43a840a59af8dad41f307f"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"1ab89439a42782f55a2ad591530118dbabd9a447"}, end: {email:"ckilpatrick@ipipeline.com"}, properties:{}}, {start: {hash:"f29cf1138d21a2eba8aaccec3185e461cb8675bd"}, end: {email:"me@glenngillen.com"}, properties:{}}, {start: {hash:"dfc9a7ea4a62b6e6c14e09b2f08c7fb5c63ca711"}, end: {email:"me@glenngillen.com"}, properties:{}}, {start: {hash:"163a9de084161e21cb62c19033b4bff7d3a5e649"}, end: {email:"soops@ucla.edu"}, properties:{}}, {start: {hash:"e2a2ef243deb0374ccfe3f37e0d1395d4338969c"}, end: {email:"soops@ucla.edu"}, properties:{}}, {start: {hash:"9c84d03bde131e7f349dcd493ba5b7e55bf8ae2c"}, end: {email:"rootprivileges@gmail.com"}, properties:{}}, {start: {hash:"86a0795540edb426c3226775d73fcd4ce807d36a"}, end: {email:"stuft2@byu.edu"}, properties:{}}, {start: {hash:"0d4fbd0a7b296a5c9377a835dff89d1499716082"}, end: {email:"public+github@cormacbrady.info"}, properties:{}}, {start: {hash:"baa5b2d85892a85403c5dac807c891bb1b7b6dc7"}, end: {email:"pythianarora@users.noreply.github.com"}, properties:{}}, {start: {hash:"0c4d59db87b67d7c7a0a0f54677961a01ed8fbe4"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"bcc6e190b8f8a12b590089fb755c4f552f179ad0"}, end: {email:"tyla.boff@outlook.com"}, properties:{}}, {start: {hash:"77c58fa499829785825e45aa90e1bb6c7058c5a2"}, end: {email:"alicefuzier@gmail.com"}, properties:{}}, {start: {hash:"e19dd7497737376a07e62042ed9fb3e8ad9739a9"}, end: {email:"reschouw@gmail.com"}, properties:{}}, {start: {hash:"804ab045e330d3b669282e55c5bcc4660ebffea8"}, end: {email:"tale.toul@gmail.com"}, properties:{}}, {start: {hash:"d13218e98814d7ac3bc65fc862c0119123f44d68"}, end: {email:"cliffano@gmail.com"}, properties:{}}, {start: {hash:"e5dd322eadc9e0a00fd3a603d5a9e9e07a812df6"}, end: {email:"armando.mag95@gmail.com"}, properties:{}}, {start: {hash:"321b1aee88f7d15dafe46aede2b86ced70061025"}, end: {email:"karl@kornel.us"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"3f27fe4cb4b75bffb7c1cf754f3f22a61cad9bfd"}, end: {email:"bishoybassem@gmail.com"}, properties:{}}, {start: {hash:"34d80ece7d0ef598414baffceb074c6580dd819b"}, end: {email:"geoffrey@gbergeret.com"}, properties:{}}, {start: {hash:"5e63c8390cb1001daf4ad74bb2926cc060c0de08"}, end: {email:"geoffrey@gbergeret.com"}, properties:{}}, {start: {hash:"dfe44fcf8f5a477e1fbc354f1b1d87af28895c0f"}, end: {email:"sdcote@gmail.com"}, properties:{}}, {start: {hash:"cbd8ce761041eac3afbdfbf74e001895895682f2"}, end: {email:"l.williams@derby.ac.uk"}, properties:{}}, {start: {hash:"2b30952f26e8a8e66fe8b6eddf9c4657e0d074d4"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"599aa2776677bcf05ebf5f6377a2eb82f5d2220c"}, end: {email:"scirner@figure.com"}, properties:{}}, {start: {hash:"68c7bfb39a40f2783cfdae9ab5206c6747b8e7f3"}, end: {email:"leblancthomasjacob@gmail.com"}, properties:{}}, {start: {hash:"33fbb76715ce6e35565b5f83f7ece0f9df37d282"}, end: {email:"matt@masterpoint.io"}, properties:{}}, {start: {hash:"bf753832a519b0649f8d58d93aa643afe3f94fc7"}, end: {email:"olliefr@users.noreply.github.com"}, properties:{}}, {start: {hash:"47e62f2fc73a96611606cd619c084d1ded9d844d"}, end: {email:"spuranda@usc.edu"}, properties:{}}, {start: {hash:"fa109033da045468d612fe8eae1a2f903e30e128"}, end: {email:"45484472+maxjahn@users.noreply.github.com"}, properties:{}}, {start: {hash:"f2f4deb8bb44988eeb0b64b919e51fb556aef4fb"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"aaa8e0261a01a62fa4a343788b3df20b9e93ee38"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"85252dec6ed7f0b24517089150ec89bf32b45fb2"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"2291a1ac7e47009d058a1a448760cd5559e5946e"}, end: {email:"kei@nohguchi.com"}, properties:{}}, {start: {hash:"17007456991c1a8faa26b1f4ac993883f577d124"}, end: {email:"11820237+bilbercode@users.noreply.github.com"}, properties:{}}, {start: {hash:"9ec3047d95969e8d2b729e6545672c3084ea846d"}, end: {email:"martijn.hemeryck@gmail.com"}, properties:{}}, {start: {hash:"25ed0319bf8099f0cc79eceba9104c73d9507e0d"}, end: {email:"carlo.mazzaferro@gmail.com"}, properties:{}}, {start: {hash:"2809f4e2d78ff33b48e9c1742b58a256ebce986d"}, end: {email:"carlo.mazzaferro@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"6e85cf4f7e7f76c159c2e30952a775d6facaf638"}, end: {email:"alan@thatscottishdatascientist.com"}, properties:{}}, {start: {hash:"53588dad5dd4c13903a6c582f74e1afe2671d33e"}, end: {email:"chaspy@users.noreply.github.com"}, properties:{}}, {start: {hash:"832682e0b54ede90b021b4ed575dcc9e761135ce"}, end: {email:"dmcgowan@iinet.net.au"}, properties:{}}, {start: {hash:"941e316bcd70779e868311253f663f8acd5ef155"}, end: {email:"dmcgowan@iinet.net.au"}, properties:{}}, {start: {hash:"667f5715c19534bfe5b01ad692979447412fd033"}, end: {email:"mads379@gmail.com"}, properties:{}}, {start: {hash:"83f393acfdc39810b29f898ff2d8a3f247571aa6"}, end: {email:"drpoindexter@gmail.com"}, properties:{}}, {start: {hash:"3799ee8b9677d02254eb6d6f50f3732df4c8374e"}, end: {email:"mdecorte.decorte+github@gmail.com"}, properties:{}}, {start: {hash:"2e2092ec94b27a4c3f0b9f4ee4d46a1983a72518"}, end: {email:"akaronsun@gmail.com"}, properties:{}}, {start: {hash:"ad841964564c461513643bb13531dc07111efc7d"}, end: {email:"davidski@deadheaven.com"}, properties:{}}, {start: {hash:"f69ce3812180a20bbda69ff1432a1cd36342bc3b"}, end: {email:"dominic@ecs-digital.co.uk"}, properties:{}}, {start: {hash:"200e62726a588acf05f58a1087d71eb1b98f4e0a"}, end: {email:"patryk.futa@gmail.com"}, properties:{}}, {start: {hash:"08ff1d9788127d4fb9aa6616e22ed0b4ed406106"}, end: {email:"graham.gilbert@airbnb.com"}, properties:{}}, {start: {hash:"6089a019df4c39231e596af627ebd910877d11d0"}, end: {email:"iam@defn.sh"}, properties:{}}, {start: {hash:"521bae59a4002a616eac44c1681ca5066bbd00c8"}, end: {email:"josh@awanderingmind.com"}, properties:{}}, {start: {hash:"a9ea9d09727825f9a047e70d94caf73c99e6b2a8"}, end: {email:"tom.dooner@brigade.com"}, properties:{}}, {start: {hash:"39a9cabac6765c75591ba258fef0d10ba7ae0f9e"}, end: {email:"stuart@stuartellis.name"}, properties:{}}, {start: {hash:"e78aad174927ca59a43a622d7e82f664e3005790"}, end: {email:"matei@gard.us"}, properties:{}}, {start: {hash:"43b3c46b84b984800a6a013a93555b7bedf5c81a"}, end: {email:"weiztech@gmail.com"}, properties:{}}, {start: {hash:"4356e9ebf89921898e9459f85f1173d44f3a3a6f"}, end: {email:"akshay.kumar@elliemae.com"}, properties:{}}, {start: {hash:"fa5f7fb35b0b44020fb81dd5c4e3b9ceaca1f967"}, end: {email:"tom.godkin@engineerbetter.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"9cbfebaab11cb3466b160d18ef2eb46c0b875d55"}, end: {email:"hello@hodl.farm"}, properties:{}}, {start: {hash:"5675965b57d05932ae8b806bad2cd219d15fe516"}, end: {email:"dirk@dmllr.de"}, properties:{}}, {start: {hash:"02210a3d3ba4a770c29623825b7f54f3ff33f3c7"}, end: {email:"thomas.shouler@gmail.com"}, properties:{}}, {start: {hash:"1e208af4c83d093c900f4cccedbca6183142a07f"}, end: {email:"daniel.buch@gmail.com"}, properties:{}}, {start: {hash:"5127d7a6eccc6965d1e51928d50ee01a46b38871"}, end: {email:"68475646+thiringai-evans@users.noreply.github.com"}, properties:{}}, {start: {hash:"e5742d6f4f93dd432c9d8d0a31493d43c45aaff1"}, end: {email:"git@grier.org.uk"}, properties:{}}, {start: {hash:"742f35a1fdf66b24ddb1f6a514b2af5a1f2b4282"}, end: {email:"adeelbarki@gmail.com"}, properties:{}}, {start: {hash:"0e69a9978eae9e3432de8f16c2ca1b38033c23a7"}, end: {email:"xarbulu@suse.com"}, properties:{}}, {start: {hash:"948727c5b1e87b970a7a9dee4cd67bb84d19abf8"}, end: {email:"xarbulu@suse.com"}, properties:{}}, {start: {hash:"93ee12adde6ac773c76b590fe89c24df372f326b"}, end: {email:"stefano.torresi@suse.com"}, properties:{}}, {start: {hash:"c82a19d98673c1aeeb1fa26afb983acbfbea272f"}, end: {email:"dilip@tensult.com"}, properties:{}}, {start: {hash:"5e8b6f6b88db49a0508ea670d71070c92cfdbaca"}, end: {email:"ayansen89@gmail.com"}, properties:{}}, {start: {hash:"e51b9583b2df3154b5c82da361d411d65ed23bab"}, end: {email:"rl@ryanl.io"}, properties:{}}, {start: {hash:"6ca41e5ad697201a1d225e5d15134e547ee6ced3"}, end: {email:"lbenninga@schubergphilis.com"}, properties:{}}, {start: {hash:"4e67a501bb3f5187a3e9af523921ac62b8a88469"}, end: {email:"jeremy.frasier@beta.dhs.gov"}, properties:{}}, {start: {hash:"7b8d9247a679295e0e1791b13d6c437c473e44b8"}, end: {email:"jeremy.frasier@trio.dhs.gov"}, properties:{}}, {start: {hash:"3971011e4253cb5b98fdf77a558f5ef8f34d2653"}, end: {email:"jdunn@chef.io"}, properties:{}}, {start: {hash:"8429375df72b04cc6fedc1ebb5f2c2e4ba18b9f2"}, end: {email:"jeff@openinfrastructure.co"}, properties:{}}, {start: {hash:"265d6c5b8a1e01032402d4b2c94d12d5365e5e6e"}, end: {email:"23342526+Adam-D-Lewis@users.noreply.github.com"}, properties:{}}, {start: {hash:"8475fbe51281a76757f7046c6c591056db182286"}, end: {email:"richard.towers@digital.cabinet-office.gov.uk"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"c130862a29878f0e483551bc115d2ca5bdc4bf5c"}, end: {email:"goesbyamezou@gmail.com"}, properties:{}}, {start: {hash:"02c710b8259f493c475021fc9eac23b871305ae6"}, end: {email:"26405363+matken11235@users.noreply.github.com"}, properties:{}}, {start: {hash:"79f4b7c2cf3ad2d1a6d2646eaf27a08fd2611d07"}, end: {email:"krusipo@users.noreply.github.com"}, properties:{}}, {start: {hash:"f62bfebb54530c9466cfdb21336794f24bcd63a7"}, end: {email:"krusipo@users.noreply.github.com"}, properties:{}}, {start: {hash:"1e588a004172338404c487e679df5d503f0cab48"}, end: {email:"chris.banks@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"a51a3bfcd73fd55ecd43aa36ce3f266f0cefc2dc"}, end: {email:"chris.banks@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"ee2b2286a02d49c7e9992d0a39ce950583e16bb7"}, end: {email:"frederic.francois@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"ba858d94e29d03e3e81533df8cd8bc85b9f176f1"}, end: {email:"guilhermeoliveira2862@hotmail.com"}, properties:{}}, {start: {hash:"3bc712aba0c797053b5cdc113e3e46afb6cff8a5"}, end: {email:"rshurts@users.noreply.github.com"}, properties:{}}, {start: {hash:"002bcce28e46728714fa1e0d20bec6f2559caba2"}, end: {email:"alvaro@mourino.net"}, properties:{}}, {start: {hash:"0ecf0a154918bd9bdc0f53557bc1f80920da6b14"}, end: {email:"petrikvandervelde@gmail.com"}, properties:{}}, {start: {hash:"411ab992ba07e698cb08b56eb4cfc9d6e001d43f"}, end: {email:"jkstenzel95@JKS-Zephyrus-G14.localdomain"}, properties:{}}, {start: {hash:"d016b96d89370b8039817fabdfa055576cf6b4cc"}, end: {email:"jun22011982@gmail.com"}, properties:{}}, {start: {hash:"1af5d07714182455cafd972556b507409f9559ae"}, end: {email:"47531708+jabielecki@users.noreply.github.com"}, properties:{}}, {start: {hash:"ec2982c8742cc7bc294f8a3cc07ae9ba5ffcaced"}, end: {email:"okepy.naoki@gmail.com"}, properties:{}}, {start: {hash:"4fe0be131b0f6b5f073391227b9fe54372506b42"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"bfa7b3ae90f1d64d957700976080f9b1921dba30"}, end: {email:"3781679+Wieschie@users.noreply.github.com"}, properties:{}}, {start: {hash:"c291c0954c89e1bfbdb76d4c8990baf9db986343"}, end: {email:"83414328+jason-drouhard@users.noreply.github.com"}, properties:{}}, {start: {hash:"a49aaeed1776f0991256221e61ebc868ae5b60cb"}, end: {email:"ahodges22@users.noreply.github.com"}, properties:{}}, {start: {hash:"0c679d7adfa5bf38d5c7846958f3508fc036b3e9"}, end: {email:"darthlupi@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"d0741cddb32ed7970904693e3a697603fa21bbbb"}, end: {email:"sitos.nishi@gmail.com"}, properties:{}}, {start: {hash:"71a0250ad3aeed1da2b11734ac22c21831f3595d"}, end: {email:"casey@liatrio.com"}, properties:{}}, {start: {hash:"cc3460b79e8811df25a34a10c34c2a0ad2b6280f"}, end: {email:"lawrence.dine@etchuk.com"}, properties:{}}, {start: {hash:"ef1df1044df317c78987f7f8398b4e45f5a3ee0a"}, end: {email:"nmaupu@gmail.com"}, properties:{}}, {start: {hash:"c528b5e97d9d1b57087bd60644a885dd9b4a2294"}, end: {email:"nikromax@gmail.com"}, properties:{}}, {start: {hash:"6a56f400f7de3f4d5cef646d92e3f848608031c1"}, end: {email:"4107447+Lsquared13@users.noreply.github.com"}, properties:{}}, {start: {hash:"81e606a72e7c2e06c2f6d9c204086157aa82eac3"}, end: {email:"iam@defn.sh"}, properties:{}}, {start: {hash:"7cc487f270d553f819fea0cf96e872c374979305"}, end: {email:"iam@defn.sh"}, properties:{}}, {start: {hash:"301244e00d9f359f964242849462704f80e8db13"}, end: {email:"ndebuhr@protonmail.com"}, properties:{}}, {start: {hash:"14f065e5161fee14c286c34df7db9f5516ef9bb6"}, end: {email:"Steven.burton@hotmail.co.uk"}, properties:{}}, {start: {hash:"348b52a2ae5d6d242c8802644f9e3a5e6460de1d"}, end: {email:"emile@madetech.com"}, properties:{}}, {start: {hash:"38d0a67cf70d46c26675ce60a7a647eef0f11e52"}, end: {email:"emile@madetech.com"}, properties:{}}, {start: {hash:"d75eace6e505fe5645647593ab8a9bb018db64c2"}, end: {email:"emile@madetech.com"}, properties:{}}, {start: {hash:"b0660183c95f4b938dbf33c5607381b8e4e2bd68"}, end: {email:"kitchen@kitchen.io"}, properties:{}}, {start: {hash:"e3d337caa558830f8e337d24edaab577ee9d43a2"}, end: {email:"kitchen@kitchen.io"}, properties:{}}, {start: {hash:"fe1f2665b198308a438ec3d46b24843089df1a2a"}, end: {email:"kitchen@kitchen.io"}, properties:{}}, {start: {hash:"45053a0862bf97f0525862c411fa4da5d59ac397"}, end: {email:"hello@hodl.farm"}, properties:{}}, {start: {hash:"e357e4e6879f9f6fb09cf28a40684d30d0e63400"}, end: {email:"christopher.bischoff@phishme.com"}, properties:{}}, {start: {hash:"f4113a8f7e52991dfb75f63688aeba77bac76b01"}, end: {email:"dincho@users.noreply.github.com"}, properties:{}}, {start: {hash:"4ba7a9dc3085ab701c85737a4f36dd57fcd7596f"}, end: {email:"tomakabe@microsoft.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"84628710c900b2d1db058aa0e339134f24e6d20c"}, end: {email:"brian.alexis.nava.arreola@gmail.com"}, properties:{}}, {start: {hash:"8cd62acc20ce3418eaf4cdd9d8b472091101cdbd"}, end: {email:"brian.alexis.nava.arreola@gmail.com"}, properties:{}}, {start: {hash:"206394bcc75866953f64cbf3bd6214e4e6f96e91"}, end: {email:"cmcclellan@pillartechnology.com"}, properties:{}}, {start: {hash:"5ff37f12a421fdd902d8eb1e6d7491ee181fd179"}, end: {email:"20728342+jg210@users.noreply.github.com"}, properties:{}}, {start: {hash:"effee9cbc473af5d07cfc3aacece50aa6e59753a"}, end: {email:"guillaume.kh.alt@gmail.com"}, properties:{}}, {start: {hash:"30be6aa1969e37d512153b558540fe714b635c4c"}, end: {email:"al_hardy@live.com.au"}, properties:{}}, {start: {hash:"f7b96f0b28008f8aed881cc211a5f3fdb3ae67ac"}, end: {email:"al_hardy@live.com.au"}, properties:{}}, {start: {hash:"b26b9e5d1b13602a4c192d9697a12df7770906b2"}, end: {email:"al_hardy@live.com.au"}, properties:{}}, {start: {hash:"6085ce34a95fbc4a8d651a3f6a0405811952af93"}, end: {email:"dan.carley@gmail.com"}, properties:{}}, {start: {hash:"998be8119321e8812884075b078a1d5fb36cfa69"}, end: {email:"claudsonweb@gmail.com"}, properties:{}}, {start: {hash:"ce576be106257496e20d946d6eab5f8783dada92"}, end: {email:"alex@alexwlchan.net"}, properties:{}}, {start: {hash:"4b495fef39e68590aea98af324340adafadfb334"}, end: {email:"alex@alexwlchan.net"}, properties:{}}, {start: {hash:"7e1b0531992b592980c232994b7248801073fcd0"}, end: {email:"paul.bowsher@gmail.com"}, properties:{}}, {start: {hash:"197502b1ac4bab77b9ab017b755c4d75ddaa218b"}, end: {email:"vincent.desmet@compareasiagroup.com"}, properties:{}}, {start: {hash:"cebf7f883b1325a4db1c0e7b3cd0d6684a7c41b0"}, end: {email:"vincent.desmet@compareasiagroup.com"}, properties:{}}, {start: {hash:"516075e2987bdd1063f22768d451c1c1eb647175"}, end: {email:"matthias.kay@hlag.com"}, properties:{}}, {start: {hash:"840ed0938bea8867caba921446b8a77a2f1c9e7d"}, end: {email:"matthias.kay@hlag.com"}, properties:{}}, {start: {hash:"894fb1d80c7a3953b7a51d7acd5e9b942faced8f"}, end: {email:"andrew@firehawkvfx.com"}, properties:{}}, {start: {hash:"4f641b162fa877aef842481631906d5bfe874781"}, end: {email:"daniel.buch@gmail.com"}, properties:{}}, {start: {hash:"0e2fc3ca535ca4a1fe3097b336fb145e6c73cde6"}, end: {email:"dan@meatballhat.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"0c38902905b96c598715a08d5c3880ad01ce5fea"}, end: {email:"emyasa.emmanuel.yasa@gmail.com"}, properties:{}}, {start: {hash:"fed8be2748bc2286a6f9888d282d66763ba612ed"}, end: {email:"jsoconno@gmail.com"}, properties:{}}, {start: {hash:"cfe92035f1b281cddfcf62664ec6b96e85e0ac32"}, end: {email:"alexey@fpcomplete.com"}, properties:{}}, {start: {hash:"6488091456429ed61264b9cad841eeb6bf871e32"}, end: {email:"timothy.mower@gmail.com"}, properties:{}}, {start: {hash:"6cfda6ada5137b232ff442ae9f2aedc8520ee1b4"}, end: {email:"dean.wilson@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"aeb3bfbe393cdfc02e62b812843ed75cf5f245e4"}, end: {email:"dean.wilson@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"5fa5da9756f12559b490217dd5b173db48e7f2a9"}, end: {email:"ana.fernandez@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"2ee1ff690416016dfed50dab6f516559f2270bf9"}, end: {email:"paul.bowsher@gmail.com"}, properties:{}}, {start: {hash:"cc8cb3ab5e257109ea9f6c19f4d034b1ac7ca4ca"}, end: {email:"kenoir@users.noreply.github.com"}, properties:{}}, {start: {hash:"d7afb9018e20ef85f1fbee2300dbf5c5cdf3cb0e"}, end: {email:"igor.ushkarev@digital.justice.gov.uk"}, properties:{}}, {start: {hash:"a39ed520b0048d54886d16c10c988ca905f64c58"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"19d187e4a29147cbcf1cfae456cfcbfa8ad52b45"}, end: {email:"ruben.arakelyan@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"5d30d7d7ca658bed21677b1aa56c72a0e0cd737b"}, end: {email:"karl.baker@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"fbd513a3c74bf20ecdb67a4243d30356e8b86a01"}, end: {email:"sebastian@schmie.net"}, properties:{}}, {start: {hash:"74fe1ac392549eb3aad67d239310b92cc9f0dd10"}, end: {email:"camille.descartes@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"ed67711a54ca65473c9c7b788161d680914ef1c7"}, end: {email:"info@compurama.net"}, properties:{}}, {start: {hash:"ac105ab0a5ae38fbf69167e072f8970a4a61c3e8"}, end: {email:"surminus@gmail.com"}, properties:{}}, {start: {hash:"5199e517f5e08b8bed3f96334b102814b3e99200"}, end: {email:"david@digitalronin.com"}, properties:{}}, {start: {hash:"137c1c3085bb95b74e2d5a695c3343ca25830fd3"}, end: {email:"michael.moussa@gmail.com"}, properties:{}}, {start: {hash:"e91c7912b25beb51199ccfff2414668bcc69186e"}, end: {email:"karl.baker@digital.cabinet-office.gov.uk"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"ef79a5aec29133d4c479652863c61f943fbdb42b"}, end: {email:"me@issyl0.co.uk"}, properties:{}}, {start: {hash:"6283dd7b80fd26ff09d242555a6e56c2eb75471b"}, end: {email:"me@issyl0.co.uk"}, properties:{}}, {start: {hash:"b4094f63c5d4a216ed7ade1a51ea3653222cf222"}, end: {email:"richard.towers@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"f844cd8e254b161bebef04101f8ce177bcd0840c"}, end: {email:"karl.baker@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"806b1a2a47f2f4e580e524b2cf8cc5928749d972"}, end: {email:"chris.banks@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"8d7d2ebe0dbe9ebf8009572d1d710c4700cf245e"}, end: {email:"chris.banks@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"d7f24bafaa9f80e9d3e834dc34b8fbe950a6c437"}, end: {email:"maxcurran96@gmail.com"}, properties:{}}, {start: {hash:"e27f8951d4387d5a2f6e03fd7f5a4f3c6ee53c66"}, end: {email:"ivan@ivanfetch.com"}, properties:{}}, {start: {hash:"782a0a3c30cf83bcaeacc942789ccc903576fe8a"}, end: {email:"mevansam@gmail.com"}, properties:{}}, {start: {hash:"2709680d633653ca9bd68a023981a75427daaa7a"}, end: {email:"tamborskiartur@gmail.com"}, properties:{}}, {start: {hash:"81dc1d3f98034672d5f62f440f2cc3abc58ce2a2"}, end: {email:"masa@hashicorp.com"}, properties:{}}, {start: {hash:"a873443bd618ac9c14d12210ed4d12a11cc1f733"}, end: {email:"exequiel.barrirero@binbash.com.ar"}, properties:{}}, {start: {hash:"19c37f7e4e65d14e760f1ff8cf60cfd1e98c1a8b"}, end: {email:"exequiel.barrirero@binbash.com.ar"}, properties:{}}, {start: {hash:"bbfbd2484ace2819ffceac9155b995ab870ee3a3"}, end: {email:"exequiel.barrirero@binbash.com.ar"}, properties:{}}, {start: {hash:"ccd141993815d0b1f444d12bbd2bdcdd9548e20e"}, end: {email:"patrick.heard@cds-snc.ca"}, properties:{}}, {start: {hash:"10bb572d477197bd3874532bfd364de1cb496d05"}, end: {email:"patrick.heard@cds-snc.ca"}, properties:{}}, {start: {hash:"ad9ba03731ec0520164bb23a90968f2100dca517"}, end: {email:"dinophile@users.noreply.github.com"}, properties:{}}, {start: {hash:"cd97b1881cb0d1c145b8b6236a3702a970c671c2"}, end: {email:"stasiekgruz@gmail.com"}, properties:{}}, {start: {hash:"2afa0c4652393014778f9b2fefcf975d6ca22ae2"}, end: {email:"exequiel.barrirero@binbash.com.ar"}, properties:{}}, {start: {hash:"7a9c468b88d2edee19007cff6529a20a38eeb363"}, end: {email:"jeff@openinfrastructure.co"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"620750695d8f83d79451948d2a43bf920b48c062"}, end: {email:"jeff@openinfrastructure.co"}, properties:{}}, {start: {hash:"f5b50d8dfbec87dba0b824369021dc6b22058840"}, end: {email:"fahd.rahman@zones.com"}, properties:{}}, {start: {hash:"6de6d83d930bd9459e1cf8c311fa7b45c3f90987"}, end: {email:"gary.bland@coxautoinc.com"}, properties:{}}, {start: {hash:"2bd01358b3a30d1680074f9bbd120da3a1456450"}, end: {email:"stephen.badger@vitalbeats.com"}, properties:{}}, {start: {hash:"71f034f3e13e9118a2a954e1fc3c0d35153184f0"}, end: {email:"eladidan@users.noreply.github.com"}, properties:{}}, {start: {hash:"0208ae3bc238f029b1faf6bdc3552dbe6147657b"}, end: {email:"38356409+diego-ojeda-binbash@users.noreply.github.com"}, properties:{}}, {start: {hash:"ddcc1a8abc1d29e8e32ed3c2e92ed9755dd17014"}, end: {email:"david@digitalronin.com"}, properties:{}}, {start: {hash:"8a71bbe9588b78351fe231a4341d07a5e2101ebb"}, end: {email:"bhavikk85@gmail.com"}, properties:{}}, {start: {hash:"bac050d515cd6991e17cd1a34197d84982f5931d"}, end: {email:"royceremer@gmail.com"}, properties:{}}, {start: {hash:"c00d24a1626e7d88a33431e4b403651acf158e05"}, end: {email:"38356409+diego-ojeda-binbash@users.noreply.github.com"}, properties:{}}, {start: {hash:"0662f7e1bfc70e21d8229e142b98b6c303addbc3"}, end: {email:"lgallard@gmail.com"}, properties:{}}, {start: {hash:"772c5ad20818738b09d01cd70ca3de80cbf66dcb"}, end: {email:"elliotpryde@hotmail.co.uk"}, properties:{}}, {start: {hash:"7c4205cd130c5463d7f39aa6f281e198c143d0d9"}, end: {email:"elliot.pryde@elliotpryde.com"}, properties:{}}, {start: {hash:"af5af0b8e6a59a9c5879fde7eaaa86d694c2bfa2"}, end: {email:"dexterchan@gmail.com"}, properties:{}}, {start: {hash:"89fd3ebb3ba1ccc9a9019ad250b93a336d4bc03e"}, end: {email:"exequiel.barrirero@binbash.com.ar"}, properties:{}}, {start: {hash:"bded5e3007349a6c47c509336ee9306d234902d6"}, end: {email:"ssfsx17@gmail.com"}, properties:{}}, {start: {hash:"ebb4040f6ad47d3e41c5ddf2cdceac3b3a8abead"}, end: {email:"gregory.szorc@gmail.com"}, properties:{}}, {start: {hash:"e2295fe41d430f42795605b6356e69b393625999"}, end: {email:"45484472+maxjahn@users.noreply.github.com"}, properties:{}}, {start: {hash:"484b85587d32f2f2a6d54ffe16d5c759841961f8"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"4eed76f9bfd4f93181660178ea689d98cd6d66d5"}, end: {email:"austindavis4@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"1cd96c7f71e56629ffa07c38e12c4da19fcfc5f7"}, end: {email:"kazuki@6715.jp"}, properties:{}}, {start: {hash:"c16481a84d5823b65ce96bd811a265222385b43b"}, end: {email:"jonrau@amazon.com"}, properties:{}}, {start: {hash:"f0bbb7e656d0f9785f1cc7cead6b420e1862f4df"}, end: {email:"5084015+sawyers@users.noreply.github.com"}, properties:{}}, {start: {hash:"ce89df3cebc6487146391afe9517661053229f77"}, end: {email:"97614949+tbirk-bhs@users.noreply.github.com"}, properties:{}}, {start: {hash:"b49579fbecbe8002932fdfb86146f83efd60bfcf"}, end: {email:"97614949+tbirk-bhs@users.noreply.github.com"}, properties:{}}, {start: {hash:"8733c7f4d1b395d6a8e236d0106cfae56d4ded06"}, end: {email:"martin.fox@kainos.com"}, properties:{}}, {start: {hash:"e5dd13d33c1e927f932971d067d8f70e9041b5f3"}, end: {email:"david.salgado@digital.justice.gov.uk"}, properties:{}}, {start: {hash:"271bf02f91bfe5e8fc7ea9f94bfe56fd49a8d8e0"}, end: {email:"alex@alexwlchan.net"}, properties:{}}, {start: {hash:"b9750f0bb88bc22256085b6bc8f060055e90a8c4"}, end: {email:"gyoung@gitlab.com"}, properties:{}}, {start: {hash:"aef45215a4fe18d7fd03b7556fa3070815c57a22"}, end: {email:"andrew@firehawkvfx.com"}, properties:{}}, {start: {hash:"e88177b8ea5d4ef9f53f70ade27232de7a360800"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"3378831be84bb1825c847a001c3c240318d991dc"}, end: {email:"bratikha@gmail.com"}, properties:{}}, {start: {hash:"28b9313a2bb11c357deeaa256950fb0acf220bc4"}, end: {email:"bratikha@gmail.com"}, properties:{}}, {start: {hash:"3228ee1c5bfdf89e57e898659b086364122d58c1"}, end: {email:"gerald@geraldwu.com"}, properties:{}}, {start: {hash:"e3b6520960a88aacbf03339dc1368f680a8bee9a"}, end: {email:"robert@meinit.nl"}, properties:{}}, {start: {hash:"cca186a0f7165b361f372c87524011e91b28f41a"}, end: {email:"darren.oakley@digital.justice.gov.uk"}, properties:{}}, {start: {hash:"9e3285b91b2a95271c3b4d0c8777f5363bfdfd40"}, end: {email:"major@redhat.com"}, properties:{}}, {start: {hash:"f6c64d1b6ed367803a833da293e84d61573a7fd8"}, end: {email:"tomasz.setkowski@thoughtworks.com"}, properties:{}}, {start: {hash:"2eb42357d986ad2c3d8693907df99895cee25c63"}, end: {email:"senai.asfaha@zoi.de"}, properties:{}}, {start: {hash:"189d96ce0f96c107ebf62dbaf73734e6fd20883a"}, end: {email:"dghubble@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"1c619d5df3f2e7f49dd9a3a47150aa41b0de497f"}, end: {email:"36337836+EOjeah@users.noreply.github.com"}, properties:{}}, {start: {hash:"be1245d8634025277ba79a4155ee88d7eaffcdfb"}, end: {email:"gudlyf@realistek.com"}, properties:{}}, {start: {hash:"4bc861c153b65a2d7c0d5f3fac30ab72b0fc6942"}, end: {email:"61367130+dandill-eng@users.noreply.github.com"}, properties:{}}, {start: {hash:"bc7484cd34698f2724e5d9f241fd9f53d953e3a3"}, end: {email:"patrick.heard@canada.ca"}, properties:{}}, {start: {hash:"908c3fd85a60090cdd06f6f4b46893ceeeaf99fb"}, end: {email:"sebastian@nephosolutions.com"}, properties:{}}, {start: {hash:"77116ea84b2e8d088c644723e787ad5d6d9677fd"}, end: {email:"charles.oliveira@linaro.org"}, properties:{}}, {start: {hash:"e4003aa3c51b789e2a2b5828768a7d0f34659209"}, end: {email:"be.smaniotto@gmail.com"}, properties:{}}, {start: {hash:"48015a86eda461d99b580b69db5922acbe5bd28e"}, end: {email:"eeuc40@hotmail.com"}, properties:{}}, {start: {hash:"3c48151cd75447f7fbd3e6ce14c491cd28e2442c"}, end: {email:"kent@hashicorp.com"}, properties:{}}, {start: {hash:"636097557e403eb1d6b6211b09e30c47e7f39466"}, end: {email:"mikael@kalms.org"}, properties:{}}, {start: {hash:"9edee1a04f6056f367ce5ef678775c1203d6a778"}, end: {email:"ramiz.polic@hotmail.com"}, properties:{}}, {start: {hash:"028bbe114d099b0388be9a46adcab80d9383a518"}, end: {email:"me@robgmills.com"}, properties:{}}, {start: {hash:"da24f25924b6584137d7315e6eea61a31be86406"}, end: {email:"me@marceloboeira.com"}, properties:{}}, {start: {hash:"985612e94b1ba7d6a881c6b2fe074449f47dd45d"}, end: {email:"me@marceloboeira.com"}, properties:{}}, {start: {hash:"7e135499d33f0a5c51602a506fefe258cac072c6"}, end: {email:"arnehaagensen@gmail.com"}, properties:{}}, {start: {hash:"de97a6b8033c866c3b711468207aa4890049daaa"}, end: {email:"seanmarman@gmail.com"}, properties:{}}, {start: {hash:"d5ac10f438b093d600047b0c9790e71bbbaa0ab2"}, end: {email:"james.woolfenden@gmail.com"}, properties:{}}, {start: {hash:"44016d6a8e496b69308a81e88af8c9ef8b710ab3"}, end: {email:"dylan@dylanmtaylor.com"}, properties:{}}, {start: {hash:"ab28ba331929475431fe695036d0863d329cdac2"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"c3c8dd8bebf14f91518253cadadc6d8a88b5ea09"}, end: {email:"3924323+jblackburn22@users.noreply.github.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"665692a86bb65ddfa6c001f296c76c17288e2944"}, end: {email:"zeeman@zeeman.de"}, properties:{}}, {start: {hash:"a252266af60f5ab828ad9b81b17bb7b16a2fc52f"}, end: {email:"jon.shaw@jassoft.co.uk"}, properties:{}}, {start: {hash:"79845fe095cd87287346f40d2adce9b28a32ef35"}, end: {email:"jon.shaw@jassoft.co.uk"}, properties:{}}, {start: {hash:"6eaf697bf9f111214a6d74ee3094e5784a57d1bb"}, end: {email:"jon.shaw@jassoft.co.uk"}, properties:{}}, {start: {hash:"c784bc0a3f747b66ab7cd01f23bbbdbad3bfe705"}, end: {email:"jferris@thoughtbot.com"}, properties:{}}, {start: {hash:"a662717d80209735e93b6b8e537f21b53c06b469"}, end: {email:"65610370+cloud-geek@users.noreply.github.com"}, properties:{}}, {start: {hash:"70904707a36ff8e5167e695de3529d8318911ba4"}, end: {email:"holger.dunkel@gmail.com"}, properties:{}}, {start: {hash:"ac39d3b9140e90bfd4b9eaa01200385bf10cc15d"}, end: {email:"abhi@opszero.com"}, properties:{}}, {start: {hash:"e8c7b2eb22d08ddd1a1bb375cb6efa4165c9098f"}, end: {email:"rui.deng@teliacompany.com"}, properties:{}}, {start: {hash:"0d7b5b0f6f92ff6cfde1f17ad96d1b1459a0957a"}, end: {email:"kmishra9@berkeley.edu"}, properties:{}}, {start: {hash:"99fd319a72d25441acf36fd2c167a875e9028935"}, end: {email:"jeremy.frasier@trio.dhs.gov"}, properties:{}}, {start: {hash:"803640f6e77857520f69700ccc27c772ee7564e4"}, end: {email:"tom.larkworthy@futurice.com"}, properties:{}}, {start: {hash:"ddc29467494ee63c323d0eb6493de6e8440c113e"}, end: {email:"bill.baumgartner@gmail.com"}, properties:{}}, {start: {hash:"81f82740760a357a86b3a77f9ed400624edcb218"}, end: {email:"4911304+dgorbov@users.noreply.github.com"}, properties:{}}, {start: {hash:"43bba3db97631d8730160950395fde42793adbc2"}, end: {email:"me@reidburke.com"}, properties:{}}, {start: {hash:"42c288d84b5f7853c36dcc55d181b8e16d3304a5"}, end: {email:"andrew.kowpak@gmail.com"}, properties:{}}, {start: {hash:"faaecdc2e201a146f76f4a94f51e9fd5c5a428f3"}, end: {email:"the.chun.wu@gmail.com"}, properties:{}}, {start: {hash:"bc346a5604045d29b4b427c926f3e70d69440698"}, end: {email:"piotr.grzeskowiak@digital.justice.gov.uk"}, properties:{}}, {start: {hash:"4ec6d54e4d36ab02b0a7daf042e727717371eaec"}, end: {email:"sam.towne2@gmail.com"}, properties:{}}, {start: {hash:"d6df68da5ae58fb5c650c6be15d9d8e676a129db"}, end: {email:"46016124+beaulabs@users.noreply.github.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"cce6b14692fccd30c027851607a9526151d4c3d2"}, end: {email:"jenkins-x@googlegroups.com"}, properties:{}}, {start: {hash:"8b563a7d3c7d90ddd2359500d9781547347cc56a"}, end: {email:"matt@harmelodic.com"}, properties:{}}, {start: {hash:"40eb651a50d0dfd5cf047ef62c8a6259c1c66e02"}, end: {email:"jon.shaw@jassoft.co.uk"}, properties:{}}, {start: {hash:"4a9e2c05092acca34f0608394638776c75496a99"}, end: {email:"damien.duportal@gmail.com"}, properties:{}}, {start: {hash:"53ed24b573947c73ea9f0f4f8b477c44b7de2d54"}, end: {email:"rsokolkov@gmail.com"}, properties:{}}, {start: {hash:"25bbff736936b64a6120ef9608498830ecec33c0"}, end: {email:"jetfire6@gmail.com"}, properties:{}}, {start: {hash:"300ed87cba6912103723b03d62c9b0bf93df36ea"}, end: {email:"kenoir@users.noreply.github.com"}, properties:{}}, {start: {hash:"9f8227bf53ebc2b1bb0b99d0697f9f66eed7ab6d"}, end: {email:"bradculberson@gmail.com"}, properties:{}}, {start: {hash:"ab8808de2e078c572e9d88fdc57ff91b8e4acc36"}, end: {email:"aniruddhamaru@gmail.com"}, properties:{}}, {start: {hash:"0cb5e776b8695da57892560c89010a8abd817afc"}, end: {email:"26870601+tamirkamara@users.noreply.github.com"}, properties:{}}, {start: {hash:"43182470f02a463a4b9ee5ed3ec899f5d7de9653"}, end: {email:"hankelucas@gmail.com"}, properties:{}}, {start: {hash:"935d9d683608b4d8a97ef6ccc2c8ab7c14eec0d0"}, end: {email:"mwilkinson@imo-online.com"}, properties:{}}, {start: {hash:"587d3a91c12aae8f0dd4b34a46d03f919ea385c6"}, end: {email:"nigercode@gmail.com"}, properties:{}}, {start: {hash:"773446c8f3192a447b8956f71b1ac90e7a9b8afa"}, end: {email:"trivbuit@gmail.com"}, properties:{}}, {start: {hash:"3ba302c69eb2a491a5b23e94084b4ddd24a4a703"}, end: {email:"adrian.neatu@outlook.com"}, properties:{}}, {start: {hash:"12cf2cb526ed6b2d12106894ca735cf81ba432ff"}, end: {email:"adrian.neatu@outlook.com"}, properties:{}}, {start: {hash:"bacda9d75b329997eb849183cf36ff8f97a9ee83"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"d27b48345a3827b8a10cb5388e42bd5cbea484bb"}, end: {email:"matt@conwaysplace.com"}, properties:{}}, {start: {hash:"f4363ad27d366385f2388d073ce8af796e035406"}, end: {email:"dwkerwin@gmail.com"}, properties:{}}, {start: {hash:"09636724e63599b1f589065c92074575471ac234"}, end: {email:"lewis@gmail.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"066049972b995fb019bf29be7f0f307064a2f00e"}, end: {email:"kmalkin@hotmail.co.uk"}, properties:{}}, {start: {hash:"034908d914982eacea51b0ac61f2781069387412"}, end: {email:"kaushik.c02@gmail.com"}, properties:{}}, {start: {hash:"adaf03ac0d5a324880e9e6aa10d54b9de6b4e635"}, end: {email:"sjuul@outlook.com"}, properties:{}}, {start: {hash:"df4c2102d59c5cae88c9ed30489b2d00bc75aafd"}, end: {email:"youngook.kim@gmail.com"}, properties:{}}, {start: {hash:"24fa52712f844e2b459329e28af96bc369024d25"}, end: {email:"vijay@kubermatic.com"}, properties:{}}, {start: {hash:"bf59a4c995822ccfdeee64781345c12ebefa967f"}, end: {email:"Nigel.Leck@dta.gov.au"}, properties:{}}, {start: {hash:"f106917bb7b2d8d4428022bb119585bf9f35769c"}, end: {email:"github@espinoza.dev"}, properties:{}}, {start: {hash:"ec5ec7bac99558a4e95e95788f846eb618edb861"}, end: {email:"darren.oakley@digital.justice.gov.uk"}, properties:{}}, {start: {hash:"174486319f3b956807d56e5433880f9978884f93"}, end: {email:"steven.bogacz@gmail.com"}, properties:{}}, {start: {hash:"a433a5d5788a358e7437cb15097d68bd1220eda7"}, end: {email:"nick@antmounds.com"}, properties:{}}, {start: {hash:"4a00ffcbf9576d7e5febdbdf94a31d4735fc8035"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"d34dcd505074546f77367786f5362891050c3440"}, end: {email:"toby.lornewelch-richards@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"75771876ca81699edfb4bb1afa202d6426abae1e"}, end: {email:"josue.caraballo@gmail.com"}, properties:{}}, {start: {hash:"70a31f9b9a167e5025bb4099cc584044c47e699b"}, end: {email:"john.watts@digital.cabinet-office.gov.uk"}, properties:{}}, {start: {hash:"65e44242c0b5f27d64ff714e5a8eed71ca02ab26"}, end: {email:"mbercx@gmail.com"}, properties:{}}, {start: {hash:"681a3f8b4942be495b3f2528fb9ee40d7a4eb08a"}, end: {email:"blinklgui@gmail.com"}, properties:{}}, {start: {hash:"a86d89369aaf5a20c1e4d8415a8a771aa7de7d10"}, end: {email:"ltkhoa2711@gmail.com"}, properties:{}}, {start: {hash:"7244eed07a1008675f45cc4349bf68141bb29edc"}, end: {email:"yuvipanda@gmail.com"}, properties:{}}, {start: {hash:"cf842d48df037476a754b221f7b4115bb4f5ddf1"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"cb45bf17da799afaa789206e3fcd39d9403e0567"}, end: {email:"poldi@thatswing.de"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"3e543412b6680057ffb10b0fbba777ccb3205882"}, end: {email:"43017340+smerck@users.noreply.github.com"}, properties:{}}, {start: {hash:"c10b476d869282ed6cf55def47445b9c703788fe"}, end: {email:"mintak21@gmail.com"}, properties:{}}, {start: {hash:"759b1d641a430bf189354e9a4866e72fe56c22dc"}, end: {email:"gnarea@users.noreply.github.com"}, properties:{}}, {start: {hash:"b2fe861f1949f5f9f5bad0b4ca4ee6b6cb65485f"}, end: {email:"24284972+sudomateo@users.noreply.github.com"}, properties:{}}, {start: {hash:"50c96dd99f04083d8a2f0d432ad2b0b3c291d3b9"}, end: {email:"dave@analysisbydesign.co.uk"}, properties:{}}, {start: {hash:"fc054a7183757d1e51e371e7329c5cf848cc6dd8"}, end: {email:"rajesh.nitc@gmail.com"}, properties:{}}, {start: {hash:"eaf81b5f5ca1dbdd8951d4179a631818139566a5"}, end: {email:"rajesh.nitc@gmail.com"}, properties:{}}, {start: {hash:"0db462f5528100ece08d85366fc777cd59fad473"}, end: {email:"rajesh.nitc@gmail.com"}, properties:{}}, {start: {hash:"e89519dc59655ddbd3ecf56a4d680d7d01128152"}, end: {email:"robinbryce@gmail.com"}, properties:{}}, {start: {hash:"3138943ab4d15cc256d322e1128862ef11383c73"}, end: {email:"jeremy.frasier@trio.dhs.gov"}, properties:{}}, {start: {hash:"f751747d53b467f72498c50deef79828c2b378be"}, end: {email:"kengoscal@gmail.com"}, properties:{}}, {start: {hash:"5298263d68548372c064b9d9c76977325a7373c8"}, end: {email:"tom@tom.net.nz"}, properties:{}}, {start: {hash:"24c07bfd5c31438fff6374e9ba3d577e6402d777"}, end: {email:"austin@hashicorp.com"}, properties:{}}, {start: {hash:"432683fcf7921a699f1557e89818b3bef5dba61a"}, end: {email:"324548+dmikalova@users.noreply.github.com"}, properties:{}}, {start: {hash:"4a89f4b8235961275fa0e6aaf20848f2b8b7e733"}, end: {email:"ajarombek95@gmail.com"}, properties:{}}, {start: {hash:"61e07012be3f140daf18d33b3be19c80147f12f2"}, end: {email:"ajarombek95@gmail.com"}, properties:{}}, {start: {hash:"11234f631f7370dd80ee5fbc5dd7bdbc12dcbf49"}, end: {email:"cosmin@coremaker.io"}, properties:{}}, {start: {hash:"bffc023eeff075ef281b1fd261897f4c7216b354"}, end: {email:"ben.fortuna@team.telstra.com"}, properties:{}}, {start: {hash:"5be96c3735b14c16dbe87f4c544f5ab1c75ab93a"}, end: {email:"sworisbreathing@gmail.com"}, properties:{}}, {start: {hash:"4894def3589d532789cc8af0c0b197727e0fb3f4"}, end: {email:"me@julie.io"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"605e74facfa2ff519ba5cda6e57474666901bd8c"}, end: {email:"matt@cowger.us"}, properties:{}}, {start: {hash:"83d8b928ecb3f271a058bb30eaa1e05ce10e0434"}, end: {email:"markus.katharina.brechtel@thengo.net"}, properties:{}}, {start: {hash:"0019704e14723aaf326840ab36c594c3f514a2d4"}, end: {email:"ninth.nails@gmail.com"}, properties:{}}, {start: {hash:"9438dcebde79c0726d69ae6a15c99b9c5c0f461c"}, end: {email:"ninth.nails@gmail.com"}, properties:{}}, {start: {hash:"35d26fd046185ae079e09fa6435c41ae685e679e"}, end: {email:"tom.mclaughlin@threatstack.com"}, properties:{}}, {start: {hash:"decdbce98d33cf2599aee554779ef5d8b5361d8f"}, end: {email:"skehlet@nextgen.com"}, properties:{}}, {start: {hash:"8bd6e745475f635d6f6b6929a545afa2e1d9dd57"}, end: {email:"3304436+ximon18@users.noreply.github.com"}, properties:{}}, {start: {hash:"37f66bc43f57b1b7a5a897c58cefe09900afd7ef"}, end: {email:"lukaskienast0@gmail.com"}, properties:{}}, {start: {hash:"8454c8ee25e821abde10b73a2fec691269e41822"}, end: {email:"julian@simioni.org"}, properties:{}}, {start: {hash:"5ea19806f7fcba7727e8111fc5ff4946b9ba72c8"}, end: {email:"serguimant@gmail.com"}, properties:{}}, {start: {hash:"d750e25615e7e37914119cb257fbd9c7fad3a52a"}, end: {email:"thomas@potenza.me"}, properties:{}}, {start: {hash:"349c94aeffffb4eef513107d281d59ef6dd33962"}, end: {email:"me@just1not2.org"}, properties:{}}, {start: {hash:"e8004aa1293b04a63fe33895e81ed2b9e6d3af94"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"7e5c997c23683a707aa384b6a07801210b1839b8"}, end: {email:"kiara.grouwstra@gmail.com"}, properties:{}}, {start: {hash:"da9e2869456610a0228cb14f850c6eccddbb15e0"}, end: {email:"roysjosh@gmail.com"}, properties:{}}, {start: {hash:"0160ab1f89489abec4120ef4102bf5964b0af2fe"}, end: {email:"46541339+UriKatsirPrivate@users.noreply.github.com"}, properties:{}}, {start: {hash:"9928d58017829d85789bdf45f467b6d32c6354b2"}, end: {email:"al@fueledbylemons.com"}, properties:{}}, {start: {hash:"7190744187e0aed2df8ce84f2a944294d6d4fc5b"}, end: {email:"egottesman@crystald.com"}, properties:{}}, {start: {hash:"638430604158044fcf123adaf8dfdcc91b1a873e"}, end: {email:"jjerezro@redhat.com"}, properties:{}}, {start: {hash:"8391f1bd4322fec04fda7509b537c5f66cddbbd9"}, end: {email:"amandak@ciandt.com"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
UNWIND [{start: {hash:"9df6f6e72cd4fa33003fa5498c796bd129c99d0f"}, end: {email:"James.Woolfenden@gmail.com"}, properties:{}}, {start: {hash:"7b2a446b0915a3ad26093f8234f7493ff152138a"}, end: {email:"sjones-sot@users.noreply.github.com"}, properties:{}}, {start: {hash:"6e25b2cfb1cb80fd45ab6627a04e52735bb2fb5e"}, end: {email:"maspin@unilink.com"}, properties:{}}, {start: {hash:"afed4b83a174335ec2b371061c81bc92938ecda3"}, end: {email:"m@javier.io"}, properties:{}}, {start: {hash:"4676fee3828f732d296feb81be51f9602610f537"}, end: {email:"yulei.liu@gmail.com"}, properties:{}}, {start: {hash:"95c70a0a304c55adacc3ba0605dd2b9aa2730f6f"}, end: {email:"emile.swarts123@gmail.com"}, properties:{}}, {start: {hash:"e0d0f044c54ebf491c122664d03e0cfe5d2b0823"}, end: {email:"harshesh.shah@icloud.com"}, properties:{}}, {start: {hash:"3794d676f4375842364a080e78750b41d9af22d5"}, end: {email:"stafot@gmail.com"}, properties:{}}, {start: {hash:"cb9f00a2f6f23b44f7db08863ef5fb0b9ea0bc0c"}, end: {email:"developer@trajano.net"}, properties:{}}, {start: {hash:"aeab4d039020c0d63209d7f800f9c34fae4060e6"}, end: {email:"tobias.ecklebe@outlook.de"}, properties:{}}, {start: {hash:"94e101feda4af9eef9980dc024c9d1a95afe3e6f"}, end: {email:"tdanzig@cisco.com"}, properties:{}}, {start: {hash:"12f8972a912d97427fe0ef1b84becdc8a2993022"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"ef0372d2684ef920c6e54cf8b9f80d87db90e636"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"e09126b45746f1c967d1990fa04ce781a0478c6d"}, end: {email:"dghubble@gmail.com"}, properties:{}}, {start: {hash:"09e400452c1bde25fe393dd56c2fd608b84a18ac"}, end: {email:"jacob@clevyr.com"}, properties:{}}, {start: {hash:"d51caa0c810f6d5ad6f0846a317ec2432835aad7"}, end: {email:"jacob@clevyr.com"}, properties:{}}, {start: {hash:"44d66328ea4467d05d7fb8092631aff5afbd8b26"}, end: {email:"jacob@clevyr.com"}, properties:{}}, {start: {hash:"75fc899c58848b290a31ff92bab92c27b3f6bf53"}, end: {email:"patrick.heard@cds-snc.ca"}, properties:{}}] AS row
MATCH (start:Commit{hash: row.start.hash})
MATCH (end:Developer{email: row.end.email})
CREATE (start)-[r:AUTHOR]->(end) SET r += row.properties;
:commit
:begin
MATCH (n:`UNIQUE IMPORT LABEL`)  WITH n LIMIT 20000 REMOVE n:`UNIQUE IMPORT LABEL` REMOVE n.`UNIQUE IMPORT ID`;
:commit
:begin
DROP CONSTRAINT UNIQUE_IMPORT_NAME;
:commit
